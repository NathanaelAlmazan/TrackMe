{"version":3,"file":"static/js/16.97be0bf6.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","sections/reports/report-dialog/SubmissionCard.tsx","sections/reports/report-dialog/SubmissionField.tsx","sections/reports/report-dialog/index.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { Iconify } from '../../../components';\r\n\r\nexport function extractFileName(url: string) {\r\n    const paths = url.split('_');\r\n    return paths[paths.length - 1];\r\n}\r\n\r\nexport default function SubmissionCard({ \r\n    message,\r\n    files,\r\n    onEdit,\r\n    onClose\r\n}: \r\n{ \r\n    message?: string | null,\r\n    files?: string[] | null,\r\n    onEdit: () => void,\r\n    onClose: () => void\r\n}) {\r\n    return (\r\n        <Stack spacing={2}>\r\n            <Card>\r\n                <CardHeader \r\n                    action={\r\n                        <Tooltip title='Edit Report'>\r\n                            <IconButton aria-label=\"settings\" onClick={onEdit}>\r\n                                <Iconify icon='akar-icons:edit' />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <Typography variant='body1'>\r\n                        {message}\r\n                    </Typography>\r\n                </CardContent>\r\n                {files && files.length > 0 && (\r\n                    <CardActions sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <Box sx={{ maxWidth: '100%', overflow: 'auto', display: 'flex', flexDirection: 'row' }}>\r\n                            {files.map(file => (\r\n                                <Typography \r\n                                    key={file} \r\n                                    component='a' \r\n                                    variant='body2' \r\n                                    href={file.trim()}\r\n                                    target='_blank'\r\n                                    sx={{ mx: '5px'}}\r\n                                >\r\n                                    {extractFileName(file)}\r\n                                </Typography>\r\n                            ))}\r\n                        </Box>\r\n                    </CardActions>\r\n                )}\r\n            </Card>\r\n\r\n            <Stack direction='row' spacing={2} alignItems='end' justifyContent='flex-end'>\r\n                <Button color='inherit' onClick={onClose}>Close</Button>\r\n            </Stack>\r\n        </Stack>\r\n    );\r\n}","import React, { useState } from 'react';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Chip from '@mui/material/Chip';\r\nimport Button from '@mui/material/Button';\r\nimport { Iconify, Snackbar } from '../../../components';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { SUBMIT_REPORT } from '../../../graphql/reports';\r\n\r\n\r\nexport type MessageFiles = {\r\n    fileUrl: string;\r\n    fileName: string;\r\n    fileType: string;\r\n}\r\n\r\nfunction convertFileListToArray(fileList: FileList): File[] {\r\n    const filesArray: File[] = [];\r\n    \r\n    // Convert FileList to array\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      const file = fileList.item(i);\r\n      if (file) {\r\n        filesArray.push(file);\r\n      }\r\n    }\r\n  \r\n    return filesArray;\r\n}\r\n\r\nexport default function SubmissionField(\r\n{ \r\n    content,\r\n    reportId, \r\n    onReport, \r\n    onCancel \r\n}: { \r\n    content?: string | null,\r\n    reportId: number, \r\n    onReport: () => void, \r\n    onCancel: () => void \r\n}) {\r\n    const [message, setMessage] = useState<string>(content || \"\");\r\n    const [files, setFiles] = useState<File[]>([]);\r\n    const [formError, setFormError] = useState<string>();\r\n\r\n    const [submitReport, { error: submitError }] = useMutation(SUBMIT_REPORT);\r\n\r\n\r\n    const handleFilesChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const fileList = event.target.files;\r\n        if (fileList) {\r\n\r\n            setFiles(previous => previous.concat(convertFileListToArray(fileList)));\r\n        }\r\n    }\r\n\r\n    const handleDelete = (fileName: string) => {\r\n        setFiles(previous => previous.filter(file => file.name !== fileName));\r\n    }\r\n\r\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        // upload files\r\n        let uploadedFiles: MessageFiles[] = [];\r\n        if (files.length > 0) {\r\n            try {\r\n                const form = new FormData();\r\n                files.forEach((file) => {\r\n                    form.append(\"files\", file);\r\n                });\r\n\r\n                const result = await axios.post(process.env.REACT_APP_UPLOAD_URL as string, form);\r\n                uploadedFiles = result.data.files;\r\n            } catch (err) {\r\n                setFormError(\"Failed to upload files.\");\r\n                return\r\n            }\r\n        }\r\n\r\n        // create comment\r\n        await submitReport({\r\n            variables:{\r\n                id: reportId,\r\n                message: message,\r\n                files: uploadedFiles.map(file => file.fileUrl)\r\n            }\r\n        });\r\n\r\n        onReport(); // reload\r\n        setMessage(\"\"); // reset message\r\n        setFiles([]); // reset files\r\n        onCancel();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Box \r\n            component='form'\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <Stack spacing={2}>\r\n                <Box sx={{ maxWidth: '100%', overflow: 'auto', display: 'flex', flexDirection: 'row' }}>\r\n                    {files.map(file => (\r\n                        <Chip key={file.name} label={file.name} variant=\"outlined\" onDelete={() => handleDelete(file.name)} sx={{ mx: '5px' }} />\r\n                    ))}\r\n                </Box>\r\n\r\n                <TextField \r\n                    variant='outlined'\r\n                    placeholder='Report...' \r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    multiline\r\n                    rows={3}\r\n                    required\r\n                    fullWidth \r\n                    InputProps={{\r\n                        endAdornment: \r\n                            <InputAdornment position=\"end\">\r\n                                <Tooltip title='Insert File'>\r\n                                    <IconButton component='label'>\r\n                                        <Iconify icon='material-symbols:attach-file-add-rounded' />\r\n\r\n                                        <input \r\n                                            type='file' \r\n                                            multiple\r\n                                            hidden \r\n                                            style={{ display: 'none' }}\r\n                                            onChange={handleFilesChange}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </InputAdornment>,\r\n                    }}\r\n                />\r\n\r\n                <Stack direction='row' spacing={2} alignItems='end' justifyContent='flex-end'>\r\n                    <Button color='inherit' onClick={onCancel}>Cancel</Button>\r\n                    <Button type='submit' variant='contained' color='inherit'>Submit</Button>\r\n                </Stack>\r\n            </Stack>\r\n        </Box>\r\n\r\n        <Snackbar \r\n            severity='error' \r\n            message={submitError?.message || formError} \r\n        />\r\n\r\n        </>\r\n    );\r\n}","import Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport SubmissionCard from './SubmissionCard';\r\nimport SubmissionField from './SubmissionField';\r\nimport { Snackbar } from '../../../components';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_SUBMISSION_BY_ID } from '../../../graphql/reports';\r\nimport { parseType } from '..';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function ReportDialog({ reportId, open, onClose }: { reportId: number, open: boolean, onClose: () => void }) {\r\n    const [edit, setEdit] = useState<boolean>(true);\r\n    const { data: report, error: getError, refetch } = useQuery(GET_SUBMISSION_BY_ID, {\r\n        fetchPolicy: 'no-cache',\r\n        variables: {\r\n            id: reportId\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (report && !report.getSubmittedReportById.message) setEdit(true);\r\n        else setEdit(false);\r\n    }, [report]);\r\n    \r\n    return (\r\n        <>\r\n        <Dialog open={open} onClose={onClose} maxWidth='sm' fullWidth>\r\n            <DialogTitle component='div'>\r\n                <Typography variant='h4'>\r\n                    {report?.getSubmittedReportById.report.name}\r\n                </Typography>\r\n                <Typography variant='body1'>\r\n                    {parseType(report?.getSubmittedReportById.report.type)}\r\n                </Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TableContainer>\r\n                    <Table size=\"small\" aria-label=\"dense table\" sx={{ mb: 2 }}>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <Typography variant=\"subtitle2\" noWrap>\r\n                                        Report Basis\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography variant=\"body2\">\r\n                                        {report?.getSubmittedReportById.report.basis}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <Typography variant=\"subtitle2\" noWrap>\r\n                                        Report Office\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography variant=\"body2\">\r\n                                        {report?.getSubmittedReportById.office.name}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <Typography variant=\"subtitle2\" noWrap>\r\n                                        Regional Deadline\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography variant=\"body2\">\r\n                                        {report && new Date(report.getSubmittedReportById.localDue).toLocaleDateString(undefined, {\r\n                                            year: 'numeric',\r\n                                            month: 'short',\r\n                                            day: 'numeric',\r\n                                            weekday: 'short'\r\n                                        })}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <Typography variant=\"subtitle2\" noWrap>\r\n                                        National Deadline\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography variant=\"body2\">\r\n                                        {report && new Date(report.getSubmittedReportById.nationalDue).toLocaleDateString(undefined, {\r\n                                            year: 'numeric',\r\n                                            month: 'short',\r\n                                            day: 'numeric',\r\n                                            weekday: 'short'\r\n                                        })}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                {(report && edit) ? (\r\n                    <SubmissionField \r\n                        content={report.getSubmittedReportById.message}\r\n                        reportId={parseInt(report.getSubmittedReportById.id)} \r\n                        onReport={() => refetch()} \r\n                        onCancel={() => onClose()}\r\n                    />\r\n                ) : (\r\n                    <SubmissionCard \r\n                        message={report?.getSubmittedReportById.message}\r\n                        files={report?.getSubmittedReportById.files}\r\n                        onEdit={() => setEdit(!edit)}\r\n                        onClose={() => onClose()}\r\n                    />\r\n                )}\r\n            </DialogContent>\r\n        </Dialog>\r\n\r\n        <Snackbar \r\n            severity='error' \r\n            message={getError?.message} \r\n        />\r\n        </>\r\n    );\r\n}"],"names":["getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_ref","_extends","display","alignItems","padding","marginLeft","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","extractFileName","url","paths","split","length","SubmissionCard","message","files","onEdit","onClose","_jsxs","Stack","children","Card","CardHeader","action","Tooltip","title","IconButton","onClick","Iconify","icon","CardContent","Typography","variant","CardActions","sx","justifyContent","Box","maxWidth","overflow","flexDirection","map","file","component","href","trim","target","mx","direction","Button","color","SubmissionField","content","reportId","onReport","onCancel","setMessage","useState","setFiles","formError","setFormError","submitReport","error","submitError","useMutation","SUBMIT_REPORT","_Fragment","onSubmit","async","event","preventDefault","uploadedFiles","form","FormData","forEach","append","axios","post","process","data","err","variables","id","fileUrl","Chip","label","onDelete","handleDelete","fileName","previous","filter","TextField","placeholder","value","onChange","e","multiline","rows","required","fullWidth","InputProps","endAdornment","InputAdornment","position","type","multiple","hidden","style","fileList","concat","filesArray","i","item","push","convertFileListToArray","Snackbar","severity","ReportDialog","open","edit","setEdit","report","getError","refetch","useQuery","GET_SUBMISSION_BY_ID","fetchPolicy","useEffect","getSubmittedReportById","Dialog","DialogTitle","parseType","DialogContent","TableContainer","Table","size","mb","TableBody","TableRow","TableCell","scope","noWrap","basis","office","Date","localDue","toLocaleDateString","undefined","year","month","day","weekday","nationalDue","parseInt"],"sourceRoot":""}