{"version":3,"file":"static/js/14.fb37c537.chunk.js","mappings":"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","sources":["sections/accounts/table/Head.tsx","sections/accounts/table/Toolbar.tsx","sections/accounts/table/Row.tsx","sections/accounts/table/index.tsx"],"sourcesContent":["import Box from '@mui/material/Box';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\n\r\nimport { AccountRow } from '.';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountTableHead({\r\n    order,\r\n    orderBy,\r\n    headLabel,\r\n    onRequestSort,\r\n}: {\r\n    order: \"asc\" | \"desc\",\r\n    orderBy: string,\r\n    headLabel: { \r\n        id: keyof AccountRow, \r\n        label?: string, \r\n        width?: number,\r\n        minWidth?: number,\r\n        align?: \"center\" | \"left\" | \"right\" | \"justify\" | \"inherit\" \r\n    }[],\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof AccountRow) => void\r\n}) {\r\n  const createSortHandler =\r\n  (property: keyof AccountRow) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box sx={{\r\n                    border: 0,\r\n                    margin: -1,\r\n                    padding: 0,\r\n                    width: '1px',\r\n                    height: '1px',\r\n                    overflow: 'hidden',\r\n                    position: 'absolute',\r\n                    whiteSpace: 'nowrap',\r\n                    clip: 'rect(0 0 0 0)',\r\n                }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}","import React from 'react';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\nimport { Iconify } from '../../../components';\r\n\r\nexport default function AccountTableToolbar({\r\n  filterName,\r\n  onRefresh,\r\n  onFilterName \r\n}: { \r\n  filterName: string, \r\n  onRefresh: () => void,\r\n  onFilterName: (event: React.ChangeEvent<HTMLInputElement>) => void }\r\n) {\r\n    return (\r\n      <Toolbar\r\n        sx={{\r\n          height: 96,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          p: (theme) => theme.spacing(0, 1, 0, 3)\r\n        }}\r\n      >\r\n        <OutlinedInput\r\n          value={filterName}\r\n          onChange={onFilterName}\r\n          placeholder=\"Search...\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Iconify\r\n                icon=\"eva:search-fill\"\r\n                sx={{ color: 'text.disabled', width: 20, height: 20 }}\r\n              />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n  \r\n        <Tooltip title=\"Refresh\">\r\n          <IconButton onClick={onRefresh}>\r\n            <Iconify icon=\"mdi:refresh\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Popover from '@mui/material/Popover';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport { Label, Iconify, DeleteDialog } from '../../../components';\r\nimport { AccountRow } from '.';\r\n\r\nimport { capitalCase } from 'change-case';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountTableRow({\r\n  officer,\r\n  onEdit,\r\n  onDelete,\r\n  onActivate\r\n}: {\r\n  officer: AccountRow,\r\n  onEdit: (event: React.MouseEvent<unknown>, id: string) => void,\r\n  onDelete: (event: React.MouseEvent<unknown>, id: string) => void,\r\n  onActivate: (event: React.MouseEvent<unknown>, id: string, active: boolean) => void\r\n}) {\r\n  const [open, setOpen] = useState<HTMLButtonElement | null>(null);\r\n  const [dialog, setDialog] = useState<boolean>(false);\r\n\r\n  const handleEditAccount = (event: React.MouseEvent<unknown>) => {\r\n    onEdit(event, officer.uuid);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleActivateAccount = (event: React.MouseEvent<unknown>) => {\r\n    onActivate(event, officer.uuid, officer.status === \"active\" ? false : true);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleDeleteAccount = (event: React.MouseEvent<unknown>) => {\r\n    onDelete(event, officer.uuid);\r\n    setOpen(null);\r\n    setDialog(false);\r\n  };\r\n\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover tabIndex={-1} role=\"checkbox\">\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n            <Avatar alt={officer.name} src={officer.avatar} />\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {officer.name}\r\n            </Typography>\r\n          </Stack>\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          {officer.office}\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          {officer.position}\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          {capitalCase(officer.role)}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 50 }}>\r\n          <Label color={officer.status === \"active\" ? \"success\" : \"error\"}>{capitalCase(officer.status)}</Label>\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 30 }}>\r\n          <IconButton onClick={handleOpenMenu}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <Popover\r\n        open={!!open}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: { width: 200 },\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleActivateAccount}>\r\n          <Iconify icon={officer.status === \"active\" ? \"material-symbols:lock\" : \"material-symbols:lock-open\"} sx={{ mr: 2 }} />\r\n          {officer.status === \"active\" ? \"Deactivate\" : \"Activate\"}\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleEditAccount}>\r\n          <Iconify icon=\"eva:edit-fill\" sx={{ mr: 2 }} />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={() => setDialog(true)} sx={{ color: 'error.main' }}>\r\n          <Iconify icon=\"eva:trash-2-outline\" sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n\r\n      <DeleteDialog \r\n        open={dialog}\r\n        onClose={() => setDialog(false)}\r\n        onDelete={handleDeleteAccount}\r\n      />\r\n    </>\r\n  );\r\n}","import { useState, useEffect, useMemo } from 'react';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableEmptyRow from '@mui/material/TableRow';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TablePagination from '@mui/material/TablePagination';\r\n\r\nimport TableHead from './Head';\r\nimport TableToolbar from './Toolbar';\r\nimport TableRow from './Row';\r\nimport { Snackbar } from '../../../components';\r\n\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { ACTIVATE_OFFICER, DELETE_OFFICER, GET_OFFICERS } from '../../../graphql/users';\r\n\r\nexport interface AccountRow {\r\n    uuid: string;\r\n    name: string;\r\n    position: string;\r\n    role: string;\r\n    office: string;\r\n    status: string;\r\n    avatar: string;\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\ntype Order = 'asc' | 'desc';\r\n  \r\nfunction getComparator<Key extends keyof AccountRow>(\r\n    order: Order,\r\n    orderBy: Key,\r\n  ): (\r\n    a: { [key in Key]: number | string },\r\n    b: { [key in Key]: number | string },\r\n  ) => number {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n  \r\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) {\r\n        return order;\r\n      }\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function AccountTable({\r\n    refresh,\r\n    onEdit\r\n}: {\r\n    refresh: boolean,\r\n    onEdit: (uuid: string) => void\r\n}) {\r\n    const { data: officers, error: getError, refetch } = useQuery(GET_OFFICERS);\r\n\r\n    const [page, setPage] = useState<number>(0);\r\n    const [order, setOrder] = useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = useState<keyof AccountRow>('name');\r\n    const [filterName, setFilterName] = useState<string>('');\r\n    const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n    const [officerList, setOfficerList] = useState<AccountRow[]>([]);\r\n\r\n    const [deleteOfficer, { error: deleteError }] = useMutation(DELETE_OFFICER);\r\n    const [activateOfficer, { error: activateError }] = useMutation(ACTIVATE_OFFICER);\r\n\r\n    useEffect(() => {\r\n        if (officers) {\r\n            setOfficerList(officers.getOfficers.map(officer => ({\r\n                uuid: officer.uuid,\r\n                name: officer.firstName + \" \" + officer.lastName,\r\n                position: officer.position?.label || \"\",\r\n                role: officer.position?.role || \"\",\r\n                office: officer.office?.name || \"\",\r\n                status: officer.active ? \"active\" : \"inactive\",\r\n                avatar: officer.avatar\r\n            })));\r\n        }\r\n    }, [officers]);\r\n\r\n    useEffect(() => { refetch() }, [refresh, refetch]);\r\n\r\n    const visibleRows = useMemo(\r\n        () =>\r\n          stableSort<AccountRow>(officerList.filter(officer => \r\n                officer.name.includes(filterName) || officer.office.includes(filterName) || officer.position.includes(filterName) || filterName.length === 0\r\n            ), getComparator(order, orderBy)).slice(\r\n            page * rowsPerPage,\r\n            page * rowsPerPage + rowsPerPage,\r\n          ),\r\n        [officerList, filterName, order, orderBy, page, rowsPerPage],\r\n    );\r\n\r\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, page: number) => {\r\n        setPage(page);\r\n    };\r\n    \r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setPage(0);\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n    };\r\n    \r\n    const handleFilterByName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPage(0);\r\n        setFilterName(event.target.value);\r\n    };\r\n\r\n    const handleRequestSort = (\r\n        event: React.MouseEvent<unknown>,\r\n        property: keyof AccountRow,\r\n      ) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleEdit = (event: React.MouseEvent<unknown>, uuid: string) => onEdit(uuid);\r\n    \r\n    const handleActivate = async (event: React.MouseEvent<unknown>, uuid: string, active: boolean) => {\r\n        await activateOfficer({\r\n            variables: {\r\n                uuid: uuid,\r\n                active: active\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    const handleDelete = async (event: React.MouseEvent<unknown>, uuid: string) => {\r\n        await deleteOfficer({\r\n            variables: {\r\n                uuid: uuid\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    };\r\n\r\n    const handleRefresh = async () => {\r\n        await refetch();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <TableToolbar \r\n                    filterName={filterName}\r\n                    onRefresh={handleRefresh}\r\n                    onFilterName={handleFilterByName}\r\n                />\r\n                <Box sx={{ overflow: 'auto' }}>\r\n                    <TableContainer>\r\n                        <Table sx={{ minWidth: 900 }}>\r\n                            <TableHead\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onRequestSort={handleRequestSort}\r\n                                headLabel={[\r\n                                    { id: 'name', label: 'Name', width: 250 },\r\n                                    { id: 'office', label: 'Office' },\r\n                                    { id: 'position', label: 'Position' },\r\n                                    { id: 'role', label: 'Role' },\r\n                                    { id: 'status', label: 'Status', align: \"right\" },\r\n                                    { id: 'uuid', align: \"right\", width: 20 }\r\n                                ]}\r\n                            />\r\n\r\n                            <TableBody>\r\n                                {visibleRows.map(officer => \r\n                                    <TableRow \r\n                                        key={officer.uuid}\r\n                                        officer={officer}\r\n                                        onEdit={handleEdit}\r\n                                        onDelete={handleDelete}\r\n                                        onActivate={handleActivate}\r\n                                    />\r\n                                )}\r\n\r\n                                {visibleRows.length === 0 &&\r\n                                    <TableEmptyRow sx={{ height: 80 }}>\r\n                                        <TableCell align=\"center\" colSpan={6}>\r\n                                            No results found.\r\n                                        </TableCell>\r\n                                    </TableEmptyRow>\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Box>\r\n\r\n                <TablePagination\r\n                    page={page}\r\n                    component=\"div\"\r\n                    count={officerList.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    onPageChange={handleChangePage}\r\n                    rowsPerPageOptions={[10, 25, 50]}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Card>\r\n\r\n            <Snackbar \r\n                severity='error' \r\n                message={getError?.message || deleteError?.message || activateError?.message} \r\n            />\r\n        </>\r\n    );\r\n}   "],"names":["AccountTableHead","_ref","order","orderBy","headLabel","onRequestSort","_jsx","TableHead","children","TableRow","map","headCell","TableCell","align","sortDirection","id","sx","width","minWidth","_jsxs","TableSortLabel","hideSortIcon","active","direction","onClick","property","event","label","Box","border","margin","padding","height","overflow","position","whiteSpace","clip","AccountTableToolbar","filterName","onRefresh","onFilterName","Toolbar","display","justifyContent","p","theme","spacing","OutlinedInput","value","onChange","placeholder","startAdornment","InputAdornment","Iconify","icon","color","Tooltip","title","IconButton","AccountTableRow","officer","onEdit","onDelete","onActivate","open","setOpen","useState","dialog","setDialog","_Fragment","hover","tabIndex","role","component","scope","Stack","alignItems","Avatar","alt","name","src","avatar","Typography","variant","noWrap","office","capitalCase","Label","status","currentTarget","Popover","anchorEl","onClose","handleCloseMenu","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","MenuItem","uuid","mr","DeleteDialog","descendingComparator","a","b","AccountTable","refresh","data","officers","error","getError","refetch","useQuery","GET_OFFICERS","page","setPage","setOrder","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","officerList","setOfficerList","deleteOfficer","deleteError","useMutation","DELETE_OFFICER","activateOfficer","activateError","ACTIVATE_OFFICER","useEffect","getOfficers","_officer$position","_officer$position2","_officer$office","firstName","lastName","visibleRows","useMemo","array","comparator","stabilizedThis","el","index","sort","stableSort","filter","includes","length","getComparator","slice","handleEdit","handleActivate","async","variables","handleDelete","Card","TableToolbar","target","TableContainer","Table","handleRequestSort","TableBody","TableEmptyRow","colSpan","TablePagination","count","onPageChange","handleChangePage","rowsPerPageOptions","onRowsPerPageChange","parseInt","Snackbar","severity","message"],"sourceRoot":""}