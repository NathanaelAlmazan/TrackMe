{"version":3,"file":"static/js/880.49f446d1.chunk.js","mappings":"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","sources":["sections/settings/cards/offices.tsx","sections/settings/cards/purposes.tsx","sections/settings/cards/status.tsx","sections/settings/cards/types.tsx","sections/settings/cards/positions.tsx","sections/settings/index.tsx","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@apollo/src/react/hooks/useMutation.ts"],"sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\r\nimport { SettingsCard, Snackbar } from '../../../components';\r\n\r\nimport { \r\n    GET_OFFICES,\r\n    CREATE_OFFICE,\r\n    UPDATE_OFFICE,\r\n    DELETE_OFFICE \r\n} from '../../../graphql/users';\r\n\r\nexport default function OfficeSettingsCard() {\r\n    const { data: offices, error: getError, loading, refetch } = useQuery(GET_OFFICES, {\r\n        fetchPolicy: 'no-cache'\r\n    });\r\n    const [createOffice, { error: createError }] = useMutation(CREATE_OFFICE);\r\n    const [updateOffice, { error: updateError }] = useMutation(UPDATE_OFFICE);\r\n    const [deleteOffice, { error: deleteError }] = useMutation(DELETE_OFFICE);\r\n\r\n    const handleCreateOffice = async (label: string, category?: string) => {\r\n        await createOffice({\r\n            variables: {\r\n                name: label\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    const handleUpdateOffice = async (id: number, label: string, category?: string) => {\r\n        await updateOffice({\r\n            variables: {\r\n                id,\r\n                name: label\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    const handleDeleteOffice = async (id: number) => {\r\n        await deleteOffice({\r\n            variables: {\r\n                id\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    return (\r\n        <>\r\n           {!loading && offices && (\r\n             <SettingsCard \r\n                title=\"Offices\"\r\n                items={offices.getOffices.map(office => ({\r\n                    id: parseInt(office.id),\r\n                    label: office.name\r\n                }))}\r\n                onCreate={handleCreateOffice}\r\n                onUpdate={handleUpdateOffice}\r\n                onDelete={handleDeleteOffice}\r\n            />\r\n           )}\r\n\r\n            <Snackbar \r\n                severity='error' \r\n                message={getError?.message || createError?.message ||\r\n                    updateError?.message || deleteError?.message} \r\n            />\r\n        </>\r\n    );\r\n}","import { useMutation, useQuery } from '@apollo/client';\r\nimport { SettingsCard, Snackbar } from '../../../components';\r\n\r\nimport { \r\n    GET_PURPOSES,\r\n    CREATE_PURPOSE,\r\n    UPDATE_PURPOSE,\r\n    DELETE_PURPOSE \r\n} from '../../../graphql/documents';\r\n\r\nexport default function PurposeSettingsCard() {\r\n    const { data: purposes, error: getError, loading, refetch } = useQuery(GET_PURPOSES, {\r\n        fetchPolicy: 'no-cache'\r\n    });\r\n    const [createPurpose, { error: createError }] = useMutation(CREATE_PURPOSE);\r\n    const [updatePurpose, { error: updateError }] = useMutation(UPDATE_PURPOSE);\r\n    const [deletePurpose, { error: deleteError }] = useMutation(DELETE_PURPOSE);\r\n\r\n    const handleCreatePurpose = async (label: string, category?: string) => {\r\n        await createPurpose({\r\n            variables: {\r\n                label\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    const handleUpdatePurpose = async (id: number, label: string, category?: string) => {\r\n        await updatePurpose({\r\n            variables: {\r\n                id,\r\n                label\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    const handleDeletePurpose = async (id: number) => {\r\n        await deletePurpose({\r\n            variables: {\r\n                id\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    return (\r\n        <>\r\n           {!loading && purposes && (\r\n             <SettingsCard \r\n                title=\"Document Purpose\"\r\n                items={purposes.getDocumentPurposes.map(purpose => ({\r\n                    id: parseInt(purpose.id),\r\n                    label: purpose.label\r\n                }))}\r\n                onCreate={handleCreatePurpose}\r\n                onUpdate={handleUpdatePurpose}\r\n                onDelete={handleDeletePurpose}\r\n            />\r\n           )}\r\n\r\n            <Snackbar \r\n                severity='error' \r\n                message={getError?.message || createError?.message ||\r\n                    updateError?.message || deleteError?.message} \r\n            />\r\n        </>\r\n    );\r\n}","import { useMutation, useQuery } from '@apollo/client';\r\nimport { SettingsCard, Snackbar } from '../../../components';\r\n\r\nimport { Status } from '../../../__generated__/graphql';\r\nimport { \r\n    GET_STATUSES,\r\n    CREATE_STATUS,\r\n    UPDATE_STATUS,\r\n    DELETE_STATUS\r\n} from '../../../graphql/documents';\r\n\r\nexport default function StatusSettingsCard() {\r\n    const { data: statuses, error: getError, loading, refetch } = useQuery(GET_STATUSES, {\r\n        fetchPolicy: 'no-cache'\r\n    });\r\n    const [createStatus, { error: createError }] = useMutation(CREATE_STATUS);\r\n    const [updateStatus, { error: updateError }] = useMutation(UPDATE_STATUS);\r\n    const [deleteStatus, { error: deleteError }] = useMutation(DELETE_STATUS);\r\n\r\n    const handleCreateStatus = async (label: string, category?: string) => {\r\n        if (!category) return;\r\n\r\n        await createStatus({\r\n            variables: {\r\n                label,\r\n                category: category as Status\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    const handleUpdateStatus = async (id: number, label: string, category?: string) => {\r\n        if (!category) return;\r\n\r\n        await updateStatus({\r\n            variables: {\r\n                id,\r\n                label,\r\n                category: category as Status\r\n            }\r\n        });\r\n        \r\n        await refetch();\r\n    }\r\n\r\n    const handleDeleteStatus = async (id: number) => {\r\n        await deleteStatus({\r\n            variables: {\r\n                id\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    return (\r\n        <>\r\n           {!loading && statuses && (\r\n             <SettingsCard \r\n                title=\"Document Status\"\r\n                items={statuses.getDocumentStatus.map(status => ({\r\n                    id: parseInt(status.id),\r\n                    label: status.label,\r\n                    category: status.category\r\n                }))}\r\n                categories={[\r\n                    { label: \"Finished\", value: \"FINISHED\" },\r\n                    { label: \"Not Actionable\", value: \"NOT_ACTIONABLE\" },\r\n                    { label: \"Referred\", value: \"REFERRED\" },\r\n                    { label: \"Submitted\", value: \"SUBMITTED\" }\r\n                ]}\r\n                onCreate={handleCreateStatus}\r\n                onUpdate={handleUpdateStatus}\r\n                onDelete={handleDeleteStatus}\r\n            />\r\n           )}\r\n\r\n            <Snackbar \r\n                severity='error' \r\n                message={getError?.message || createError?.message ||\r\n                    updateError?.message || deleteError?.message} \r\n            />\r\n        </>\r\n    );\r\n}","import { useMutation, useQuery } from '@apollo/client';\r\nimport { SettingsCard, Snackbar } from '../../../components';\r\n\r\nimport { \r\n    GET_TYPES,\r\n    CREATE_TYPE,\r\n    UPDATE_TYPE,\r\n    DELETE_TYPE \r\n} from '../../../graphql/documents';\r\n\r\nexport default function TypesSettingsCard() {\r\n    const { data: types, error: getError, loading, refetch } = useQuery(GET_TYPES, {\r\n        fetchPolicy: 'no-cache'\r\n    });\r\n    const [createType, { error: createError }] = useMutation(CREATE_TYPE);\r\n    const [updateType, { error: updateError }] = useMutation(UPDATE_TYPE);\r\n    const [deleteType, { error: deleteError }] = useMutation(DELETE_TYPE);\r\n\r\n    const handleCreateType = async (label: string, category?: string) => {\r\n        await createType({\r\n            variables: {\r\n                label\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    const handleUpdateType = async (id: number, label: string, category?: string) => {\r\n        await updateType({\r\n            variables: {\r\n                id,\r\n                label\r\n            }\r\n        });\r\n        \r\n        await refetch();\r\n    }\r\n\r\n    const handleDeleteType = async (id: number) => {\r\n        await deleteType({\r\n            variables: {\r\n                id\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    return (\r\n        <>\r\n           {!loading && types && (\r\n             <SettingsCard \r\n                title=\"Document Types\"\r\n                items={types.getDocumentTypes.map(type => ({\r\n                    id: parseInt(type.id),\r\n                    label: type.label\r\n                }))}\r\n                onCreate={handleCreateType}\r\n                onUpdate={handleUpdateType}\r\n                onDelete={handleDeleteType}\r\n            />\r\n           )}\r\n\r\n            <Snackbar \r\n                severity='error' \r\n                message={getError?.message || createError?.message ||\r\n                    updateError?.message || deleteError?.message} \r\n            />\r\n        </>\r\n    );\r\n}","import { useMutation, useQuery } from '@apollo/client';\r\nimport { SettingsCard, Snackbar } from '../../../components';\r\n\r\nimport { Role } from '../../../__generated__/graphql';\r\nimport { \r\n    GET_POSITIONS,\r\n    CREATE_POSITION,\r\n    UPDATE_POSITION,\r\n    DELETE_POSITION,\r\n} from '../../../graphql/users';\r\n\r\nexport default function PositionSettingsCard() {\r\n    const { data: positions, error: getError, loading, refetch } = useQuery(GET_POSITIONS, {\r\n        fetchPolicy: 'no-cache'\r\n    });\r\n    const [createPosition, { error: createError }] = useMutation(CREATE_POSITION);\r\n    const [updatePosition, { error: updateError }] = useMutation(UPDATE_POSITION);\r\n    const [deletePosition, { error: deleteError }] = useMutation(DELETE_POSITION);\r\n\r\n    const handleCreatePosition = async (label: string, role?: string) => {\r\n        if (!role) return;\r\n\r\n        await createPosition({\r\n            variables: {\r\n                label,\r\n                role: role as Role\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    const handleUpdatePosition = async (id: number, label: string, role?: string) => {\r\n        if (!role) return;\r\n\r\n        await updatePosition({\r\n            variables: {\r\n                id,\r\n                label,\r\n                role: role as Role\r\n            }\r\n        });\r\n        \r\n        await refetch();\r\n    }\r\n\r\n    const handleDeletePosition = async (id: number) => {\r\n        await deletePosition({\r\n            variables: {\r\n                id\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    return (\r\n        <>\r\n           {!loading && positions && (\r\n             <SettingsCard \r\n                title=\"Positions\"\r\n                items={positions.getPositions.map(position => ({\r\n                    id: parseInt(position.id),\r\n                    label: position.label,\r\n                    category: position.role\r\n                }))}\r\n                categories={[\r\n                    { label: \"Officer\", value: \"OFFICER\" },\r\n                    { label: \"Chief\", value: \"CHIEF\" },\r\n                    { label: \"Director\", value: \"DIRECTOR\" },\r\n                    { label: \"Superuser\", value: \"SUPERUSER\" },\r\n                    { label: \"HR Admin\", value: \"HR_ADMIN\" }\r\n                ]}\r\n                onCreate={handleCreatePosition}\r\n                onUpdate={handleUpdatePosition}\r\n                onDelete={handleDeletePosition}\r\n            />\r\n           )}\r\n\r\n            <Snackbar \r\n                severity='error' \r\n                message={getError?.message || createError?.message ||\r\n                    updateError?.message || deleteError?.message} \r\n            />\r\n        </>\r\n    );\r\n}","import Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport {\r\n    OfficeCard,\r\n    PurposeCard,\r\n    StatusCard,\r\n    TypesCard,\r\n    PositionsCard\r\n} from './cards';\r\n\r\nexport default function SettingsPage() {\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h4\">Settings</Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <OfficeCard />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <PurposeCard />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <TypesCard />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <StatusCard />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <PositionsCard />\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import * as React from \"rehackt\";\nimport type { DocumentNode } from \"graphql\";\nimport type { TypedDocumentNode } from \"@graphql-typed-document-node/core\";\nimport type {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n  NoInfer,\n} from \"../types/types.js\";\n\nimport type {\n  ApolloCache,\n  DefaultContext,\n  MutationOptions,\n  OperationVariables,\n} from \"../../core/index.js\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\n\n/**\n *\n *\n * > Refer to the [Mutations](https://www.apollographql.com/docs/react/data/mutations/) section for a more in-depth overview of `useMutation`.\n *\n * @example\n * ```jsx\n * import { gql, useMutation } from '@apollo/client';\n *\n * const ADD_TODO = gql`\n *   mutation AddTodo($type: String!) {\n *     addTodo(type: $type) {\n *       id\n *       type\n *     }\n *   }\n * `;\n *\n * function AddTodo() {\n *   let input;\n *   const [addTodo, { data }] = useMutation(ADD_TODO);\n *\n *   return (\n *     <div>\n *       <form\n *         onSubmit={e => {\n *           e.preventDefault();\n *           addTodo({ variables: { type: input.value } });\n *           input.value = '';\n *         }}\n *       >\n *         <input\n *           ref={node => {\n *             input = node;\n *           }}\n *         />\n *         <button type=\"submit\">Add Todo</button>\n *       </form>\n *     </div>\n *   );\n * }\n * ```\n * @since 3.0.0\n * @param mutation - A GraphQL mutation document parsed into an AST by `gql`.\n * @param options - Options to control how the mutation is executed.\n * @returns A tuple in the form of `[mutate, result]`\n */\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<\n    NoInfer<TData>,\n    NoInfer<TVariables>,\n    TContext,\n    TCache\n  >\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = React.useState<Omit<MutationResult, \"reset\">>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = React.useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = React.useCallback(\n    (\n      executeOptions: MutationFunctionOptions<\n        TData,\n        TVariables,\n        TContext,\n        TCache\n      > = {}\n    ) => {\n      const { options, mutation } = ref.current;\n      const baseOptions = { ...options, mutation };\n      const client = executeOptions.client || ref.current.client;\n\n      if (\n        !ref.current.result.loading &&\n        !baseOptions.ignoreResults &&\n        ref.current.isMounted\n      ) {\n        setResult(\n          (ref.current.result = {\n            loading: true,\n            error: void 0,\n            data: void 0,\n            called: true,\n            client,\n          })\n        );\n      }\n\n      const mutationId = ++ref.current.mutationId;\n      const clientOptions = mergeOptions(baseOptions, executeOptions);\n\n      return client\n        .mutate(clientOptions as MutationOptions<TData, OperationVariables>)\n        .then((response) => {\n          const { data, errors } = response;\n          const error =\n            errors && errors.length > 0 ?\n              new ApolloError({ graphQLErrors: errors })\n            : void 0;\n\n          const onError =\n            executeOptions.onError || ref.current.options?.onError;\n\n          if (error && onError) {\n            onError(\n              error,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n          }\n\n          if (\n            mutationId === ref.current.mutationId &&\n            !clientOptions.ignoreResults\n          ) {\n            const result = {\n              called: true,\n              loading: false,\n              data,\n              error,\n              client,\n            };\n\n            if (ref.current.isMounted && !equal(ref.current.result, result)) {\n              setResult((ref.current.result = result));\n            }\n          }\n\n          const onCompleted =\n            executeOptions.onCompleted || ref.current.options?.onCompleted;\n\n          if (!error) {\n            onCompleted?.(\n              response.data!,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n          }\n\n          return response;\n        })\n        .catch((error) => {\n          if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n            const result = {\n              loading: false,\n              error,\n              data: void 0,\n              called: true,\n              client,\n            };\n\n            if (!equal(ref.current.result, result)) {\n              setResult((ref.current.result = result));\n            }\n          }\n\n          const onError =\n            executeOptions.onError || ref.current.options?.onError;\n\n          if (onError) {\n            onError(\n              error,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n\n            // TODO(brian): why are we returning this here???\n            return { data: void 0, errors: error };\n          }\n\n          throw error;\n        });\n    },\n    []\n  );\n\n  const reset = React.useCallback(() => {\n    if (ref.current.isMounted) {\n      const result = { called: false, loading: false, client };\n      Object.assign(ref.current, { mutationId: 0, result });\n      setResult(result);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    ref.current.isMounted = true;\n\n    return () => {\n      ref.current.isMounted = false;\n    };\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n"],"names":["OfficeSettingsCard","data","offices","error","getError","loading","refetch","useQuery","GET_OFFICES","fetchPolicy","createOffice","createError","useMutation","CREATE_OFFICE","updateOffice","updateError","UPDATE_OFFICE","deleteOffice","deleteError","DELETE_OFFICE","_jsxs","_Fragment","children","_jsx","SettingsCard","title","items","getOffices","map","office","id","parseInt","label","name","onCreate","async","category","variables","onUpdate","onDelete","Snackbar","severity","message","PurposeSettingsCard","purposes","GET_PURPOSES","createPurpose","CREATE_PURPOSE","updatePurpose","UPDATE_PURPOSE","deletePurpose","DELETE_PURPOSE","getDocumentPurposes","purpose","StatusSettingsCard","statuses","GET_STATUSES","createStatus","CREATE_STATUS","updateStatus","UPDATE_STATUS","deleteStatus","DELETE_STATUS","getDocumentStatus","status","categories","value","TypesSettingsCard","types","GET_TYPES","createType","CREATE_TYPE","updateType","UPDATE_TYPE","deleteType","DELETE_TYPE","getDocumentTypes","type","PositionSettingsCard","positions","GET_POSITIONS","createPosition","CREATE_POSITION","updatePosition","UPDATE_POSITION","deletePosition","DELETE_POSITION","getPositions","position","role","SettingsPage","Container","Grid","container","spacing","item","xs","Typography","variant","sm","md","OfficeCard","PurposeCard","TypesCard","StatusCard","PositionsCard","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","arguments","length","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","_ref","theme","_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref3","Math","max","React","ref","className","component","other","_objectWithoutPropertiesLoose","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled","mutation","client","useApolloClient","verifyDocumentType","DocumentType","Mutation","_a","called","result","setResult","mutationId","isMounted","assign","current","execute","executeOptions","baseOptions","__assign","ignoreResults","clientOptions","mergeOptions","mutate","then","response","errors","ApolloError","graphQLErrors","onError","result_1","equal","onCompleted","_b","catch","result_2","reset","result_3"],"sourceRoot":""}