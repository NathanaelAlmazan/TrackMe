{"version":3,"file":"static/js/64.a3310b6d.chunk.js","mappings":"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","sources":["sections/documents/document-dialog/CommentField.tsx","sections/documents/document-dialog/CommentCard.tsx","sections/documents/document-dialog/DocumentDetails.tsx","sections/documents/document-dialog/StatusButton.tsx","sections/documents/document-dialog/index.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Box from \"@mui/material/Box\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport JoditEditor, { Jodit } from \"jodit-react\";\r\n\r\nimport { Snackbar, Iconify } from \"../../../components\";\r\nimport { Officers } from \"../../../__generated__/graphql\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { CREATE_COMMENT } from \"../../../graphql/documents\";\r\n\r\nexport type Uploads = {\r\n  fileUrl: string;\r\n  filePath: string;\r\n  fileName: string;\r\n  fileType: string;\r\n};\r\n\r\ntype MediaFiles = {\r\n  files: Uploads[];\r\n};\r\n\r\ninterface EditorProps {\r\n  officerId?: string;\r\n  documentId: string;\r\n  message?: string;\r\n  recipients?: Officers[];\r\n  onComment: () => void;\r\n}\r\n\r\nconst config = {\r\n  readonly: false, // all options from https://xdsoft.net/jodit/doc/\r\n  toolbar: true,\r\n  minHeight: 250,\r\n  maxHeight: 250,\r\n  buttons: [\r\n    \"source\",\r\n    \"|\",\r\n    \"bold\",\r\n    \"strikethrough\",\r\n    \"underline\",\r\n    \"italic\",\r\n    \"|\",\r\n    \"ul\",\r\n    \"ol\",\r\n    \"|\",\r\n    \"outdent\",\r\n    \"indent\",\r\n    \"|\",\r\n    \"font\",\r\n    \"fontsize\",\r\n    \"paragraph\",\r\n    \"|\",\r\n    \"image\",\r\n    \"table\",\r\n    \"link\",\r\n    \"|\",\r\n    \"align\",\r\n    \"undo\",\r\n    \"redo\",\r\n    \"selectall\",\r\n    \"cut\",\r\n    \"copy\",\r\n    \"|\",\r\n    \"hr\",\r\n    \"|\",\r\n    \"print\",\r\n    \"symbol\",\r\n    \"about\",\r\n  ],\r\n  uploader: {\r\n    url: process.env.REACT_APP_UPLOAD_URL as string,\r\n    imagesExtensions: [\"jpg\", \"png\", \"jpeg\", \"gif\"],\r\n    withCredentials: false,\r\n    format: \"json\",\r\n    method: \"POST\",\r\n    prepareData: function (formData: any) {\r\n      const files = Array.from(formData.values()).filter(\r\n        (obj) => obj instanceof File\r\n      );\r\n\r\n      // reset form data\r\n      Array.from(formData.keys()).forEach((key) => {\r\n        formData.delete(key);\r\n      });\r\n\r\n      // add files\r\n      files.forEach((file) => {\r\n        formData.append(\"files\", file);\r\n      });\r\n\r\n      return formData;\r\n    },\r\n    isSuccess: function (resp: MediaFiles) {\r\n      return resp.files.length > 0;\r\n    },\r\n    process: function (resp: MediaFiles) {\r\n      return {\r\n        files: resp.files.map((file) => file.filePath),\r\n        path: \"/\",\r\n        baseurl: process.env.REACT_APP_MEDIA_URL as string,\r\n        error: 0,\r\n        msg: \"\",\r\n      };\r\n    },\r\n    error: function (error: Error) {\r\n      console.log(\"Failed to upload files.\");\r\n    },\r\n  },\r\n  style: {\r\n    \"& .jodit .jodit-status-bar\": {\r\n      background: \"#29572E\",\r\n      color: \"rgba(255,255,255,0.5)\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function CommentField(props: EditorProps) {\r\n  const editor = useRef<Jodit>(null);\r\n  const [content, setContent] = useState<string>(\"\");\r\n  const [formError, setFormError] = useState<string>();\r\n  const [recipientId, setRecipientId] = useState<string>(\"\");\r\n\r\n  const [createComment, { error }] = useMutation(CREATE_COMMENT);\r\n\r\n  useEffect(() => {\r\n    if (props.message) setContent(props.message);\r\n  }, [props.message]);\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!props.officerId) {\r\n      setFormError(\"Not logged in.\");\r\n      return;\r\n    }\r\n\r\n    // create comment\r\n    await createComment({\r\n      variables: {\r\n        documentId: props.documentId,\r\n        message: content,\r\n        recipientId: recipientId,\r\n        senderId: props.officerId,\r\n      },\r\n    });\r\n\r\n    props.onComment(); // reload\r\n    setRecipientId(\"\");\r\n    setContent(\"\"); // reset message\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"form\" onSubmit={handleSubmit}>\r\n        <Stack spacing={2}>\r\n          {props.recipients && (\r\n            <TextField\r\n              name=\"recipientId\"\r\n              select\r\n              label=\"Recipient\"\r\n              value={recipientId}\r\n              onChange={(event) => setRecipientId(event.target.value)}\r\n              required\r\n              fullWidth\r\n            >\r\n              {props.recipients.map((option) => (\r\n                <MenuItem key={option.uuid} value={option.uuid}>\r\n                  {option.firstName + \" \" + option.lastName}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          )}\r\n\r\n          <JoditEditor\r\n            ref={editor}\r\n            value={content}\r\n            config={config}\r\n            onChange={(value) => setContent(value)}\r\n          />\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              endIcon={<Iconify icon=\"ic:baseline-send\" />}\r\n            >\r\n              Send\r\n            </Button>\r\n          </Box>\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Snackbar severity=\"error\" message={formError || error?.message} />\r\n    </>\r\n  );\r\n}\r\n","import { useRef } from \"react\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport JoditEditor, { Jodit } from \"jodit-react\";\r\n\r\nimport { useAppSelector } from \"../../../hooks\";\r\n\r\nconst config = {\r\n  readonly: true, // all options from https://xdsoft.net/jodit/doc/\r\n  toolbar: false,\r\n  minHeight: 250,\r\n  maxHeight: 250,\r\n  style: {\r\n    \"& .jodit .jodit-status-bar\": {\r\n      background: \"#29572E\",\r\n      color: \"rgba(255,255,255,0.5)\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function CommentCard({\r\n  senderId,\r\n  senderName,\r\n  recipientId,\r\n  recipientName,\r\n  message,\r\n}: {\r\n  senderId: string;\r\n  senderName: string;\r\n  recipientId: string;\r\n  recipientName: string;\r\n  message: string;\r\n}) {\r\n  const { uuid } = useAppSelector((state) => state.auth);\r\n\r\n  const editor = useRef<Jodit>(null);\r\n\r\n  return (\r\n    <Box sx={uuid === senderId ? { pl: \"5%\" } : { pr: \"5%\" }}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1-content\"\r\n          id=\"panel1-header\"\r\n        >\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Avatar>\r\n              {senderName\r\n                .split(\" \")\r\n                .map((name) => name.charAt(0))\r\n                .join(\"\")}\r\n            </Avatar>\r\n           <Box>\r\n           <Typography variant=\"subtitle1\" component=\"div\">\r\n              {senderName}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"div\">\r\n              {`To ${recipientName}`}\r\n            </Typography>\r\n           </Box>\r\n          </Stack>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <JoditEditor ref={editor} value={message} config={config} />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { MultiSelect, Snackbar } from \"../../../components\";\r\n\r\nimport { capitalCase } from \"change-case\";\r\nimport { Role } from \"../../../__generated__/graphql\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { GET_OFFICERS } from \"../../../graphql/users\";\r\nimport { ASSIGN_OFFICERS } from \"../../../graphql/documents\";\r\n\r\nexport default function DocumentDetails({\r\n  role,\r\n  officeId,\r\n  documentId,\r\n  receivedFrom,\r\n  dateCreated,\r\n  dateDue,\r\n  referredTo,\r\n  type,\r\n  purpose,\r\n  tag,\r\n  directorAssigned,\r\n  chiefAssigned,\r\n}: {\r\n  role?: Role;\r\n  officeId?: number;\r\n  documentId?: string;\r\n  receivedFrom?: string;\r\n  dateCreated?: string;\r\n  dateDue?: string | null;\r\n  referredTo?: string;\r\n  type?: string;\r\n  purpose?: string;\r\n  tag?: string | null;\r\n  directorAssigned?: {\r\n    uuid: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    position?: string;\r\n  }[];\r\n  chiefAssigned?: {\r\n    uuid: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    position?: string;\r\n  }[];\r\n}) {\r\n  const [referrals, setReferrals] = useState<string[]>([]);\r\n  const { data: officers, error: getError } = useQuery(GET_OFFICERS, {\r\n    variables: {\r\n      officeId: officeId ? [officeId] : [],\r\n    },\r\n  });\r\n  const [assignOfficers, { error: assignError }] = useMutation(ASSIGN_OFFICERS);\r\n\r\n  const handleReferralsChange = (selected: string[]) => {\r\n    setReferrals(selected);\r\n\r\n    if (documentId) {\r\n      assignOfficers({\r\n        variables: {\r\n          documentId,\r\n          officerIds: selected,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      role === Role.Chief &&\r\n      directorAssigned?.length === 0 &&\r\n      chiefAssigned &&\r\n      officeId\r\n    ) {\r\n      setReferrals(chiefAssigned.map((officer) => officer.uuid));\r\n    }\r\n  }, [role, directorAssigned, chiefAssigned, officeId]);\r\n\r\n  return (\r\n    <>\r\n      <Card variant=\"outlined\">\r\n        <CardHeader title=\"Details\" />\r\n        <Box\r\n          sx={{\r\n            maxHeight: { sm: \"100%\", md: \"80vh\" },\r\n            overflowY: { sm: \"inherit\", md: \"auto\" },\r\n          }}\r\n        >\r\n          <TableContainer>\r\n            <Table size=\"small\" aria-label=\"dense table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Type\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">{type}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Purpose\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">{purpose}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Tag\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">\r\n                      {tag ? capitalCase(tag) : \"None\"}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Received From\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">{receivedFrom}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Referred To\r\n                    </Typography>\r\n                  </TableCell>\r\n                  {directorAssigned && directorAssigned.length !== 0 ? (\r\n                    <TableCell>\r\n                      {directorAssigned &&\r\n                        directorAssigned.map((officer) => (\r\n                          <Box key={officer.uuid}>\r\n                            <Typography variant=\"body2\">\r\n                              {officer.firstName} {officer.lastName}\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" color=\"textSecondary\">\r\n                              {officer.position || \"\"}\r\n                            </Typography>\r\n                          </Box>\r\n                        ))}\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell>\r\n                      <Typography variant=\"body2\">{referredTo}</Typography>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n\r\n                {role === Role.Chief && directorAssigned?.length === 0 && (\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Typography variant=\"subtitle2\" noWrap>\r\n                        Assigned To\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {officers && (\r\n                        <MultiSelect\r\n                          name=\"assignedTo\"\r\n                          label=\"Assigned To\"\r\n                          selected={referrals}\r\n                          required={false}\r\n                          options={officers.getOfficers\r\n                            .filter(\r\n                              (officer) => officer.position?.role !== Role.Chief\r\n                            )\r\n                            .map((officer) => ({\r\n                              id: officer.uuid,\r\n                              label: officer.firstName + \" \" + officer.lastName,\r\n                              description: officer.position?.label,\r\n                            }))}\r\n                          onChange={handleReferralsChange}\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Date Received\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">\r\n                      {dateCreated &&\r\n                        new Date(dateCreated).toLocaleDateString(undefined, {\r\n                          year: \"numeric\",\r\n                          month: \"short\",\r\n                          day: \"numeric\",\r\n                          weekday: \"short\",\r\n                        })}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Date Due\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">\r\n                      {dateDue\r\n                        ? new Date(dateDue).toLocaleDateString(undefined, {\r\n                            year: \"numeric\",\r\n                            month: \"short\",\r\n                            day: \"numeric\",\r\n                            weekday: \"short\",\r\n                          })\r\n                        : \"None\"}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      </Card>\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={getError?.message || assignError?.message}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { Iconify, Snackbar } from \"../../../components\";\r\n\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  GET_STATUSES,\r\n  UPDATE_DOCUMENT_STATUS,\r\n} from \"../../../graphql/documents\";\r\nimport { Role, Status } from \"../../../__generated__/graphql\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function StatusButton({\r\n  officeId,\r\n  status,\r\n  referenceNum,\r\n  role,\r\n  onUpdate,\r\n  admin,\r\n}: {\r\n  officeId?: number;\r\n  status?: Status;\r\n  referenceNum: string;\r\n  role: Role;\r\n  onUpdate: () => void;\r\n  admin?: boolean;\r\n}) {\r\n  const { data: statuses, error: getError } = useQuery(GET_STATUSES, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n  const [updateStatus, { error: updateError }] = useMutation(\r\n    UPDATE_DOCUMENT_STATUS\r\n  );\r\n\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [currentStatus, setCurrentStatus] = useState<Status>(Status.Referred);\r\n\r\n  useEffect(() => {\r\n    if (status) setCurrentStatus(status);\r\n  }, [status]);\r\n\r\n  const handleStatusChange = async (\r\n    event: React.MouseEvent<unknown>,\r\n    category: Status\r\n  ) => {\r\n    if (!officeId) return;\r\n\r\n    const statusId = statuses?.getDocumentStatus.find(\r\n      (status) => status.category === category\r\n    )?.id;\r\n\r\n    if (!statusId) {\r\n      setError(\"Status not found\");\r\n      return;\r\n    }\r\n\r\n    const result = await updateStatus({\r\n      variables: {\r\n        officeId,\r\n        referenceNum,\r\n        statusId: parseInt(statusId),\r\n      },\r\n    });\r\n\r\n    if (result.data) setCurrentStatus(category);\r\n\r\n    onUpdate();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {(role === Role.Superuser || role === Role.Director) && (\r\n        <Button\r\n          variant={admin ? \"outlined\" : \"contained\"}\r\n          onClick={(event) =>\r\n            handleStatusChange(\r\n              event,\r\n              currentStatus === Status.Finished\r\n                ? Status.Referred\r\n                : Status.Finished\r\n            )\r\n          }\r\n          disabled={currentStatus === Status.NotActionable}\r\n          endIcon={admin ? undefined : <Iconify icon=\"formkit:submit\" />}\r\n        >\r\n          {currentStatus === Status.Finished ? \"Reopen\" : \"Close\"}\r\n        </Button>\r\n      )}\r\n\r\n      {role === Role.Chief && (\r\n        <Button\r\n          variant={admin ? \"outlined\" : \"contained\"}\r\n          onClick={(event) =>\r\n            handleStatusChange(\r\n              event,\r\n              currentStatus === Status.Submitted\r\n                ? Status.Referred\r\n                : Status.Submitted\r\n            )\r\n          }\r\n          disabled={currentStatus === Status.Finished || currentStatus === Status.NotActionable}\r\n          endIcon={admin ? undefined : <Iconify icon=\"formkit:submit\" />}\r\n        >\r\n          {currentStatus === Status.Submitted ? \"Withdraw\" : \"Submit\"}\r\n        </Button>\r\n      )}\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={error || getError?.message || updateError?.message}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n\r\nimport { Iconify, ReferenceSlip, Snackbar, Label } from \"../../../components\";\r\nimport CommentField from \"./CommentField\";\r\nimport CommentCard from \"./CommentCard\";\r\nimport DocumentDetails from \"./DocumentDetails\";\r\nimport StatusButton from \"./StatusButton\";\r\n\r\nimport { useQuery, useSubscription } from \"@apollo/client\";\r\nimport {\r\n  GET_DOCUMENT_BY_ID,\r\n  SUBSCRIBE_DOCUMENT_EVENTS,\r\n} from \"../../../graphql/documents\";\r\nimport { Officers, Role, Status } from \"../../../__generated__/graphql\";\r\nimport { capitalCase } from \"change-case\";\r\n\r\nfunction statusColor(status: Status) {\r\n  switch (status) {\r\n    case Status.Finished:\r\n      return \"success\";\r\n    case Status.NotActionable:\r\n      return \"info\";\r\n    default:\r\n      return \"warning\";\r\n  }\r\n}\r\n\r\nexport function formatReferrals(office?: string): string {\r\n  if (!office) return \"\";\r\n  return office\r\n    .split(\" \")\r\n    .map((word) => {\r\n      if (isNaN(parseInt(word))) return word.charAt(0).toUpperCase();\r\n      else return `-${parseInt(word).toString()}`;\r\n    })\r\n    .join(\"\");\r\n}\r\n\r\nexport default function DocumentDialog({\r\n  officerId,\r\n  officeId,\r\n  role,\r\n  referenceNum,\r\n  open,\r\n  onClose,\r\n}: {\r\n  officerId: string;\r\n  officeId?: number;\r\n  role: Role;\r\n  referenceNum: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n}) {\r\n  const theme = useTheme();\r\n  const [statusList, setStatusList] = useState<HTMLButtonElement | null>(null);\r\n\r\n  const {\r\n    data: document,\r\n    error: getError,\r\n    refetch,\r\n  } = useQuery(GET_DOCUMENT_BY_ID, {\r\n    fetchPolicy: \"no-cache\",\r\n    variables: {\r\n      officerId,\r\n      referenceNum,\r\n    },\r\n  });\r\n  const { data: documentEvents, error: subscribeError } = useSubscription(\r\n    SUBSCRIBE_DOCUMENT_EVENTS,\r\n    {\r\n      fetchPolicy: \"no-cache\",\r\n      variables: {\r\n        referenceNum,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (documentEvents) refetch();\r\n  }, [documentEvents, refetch]);\r\n\r\n  const handleOpenStatus = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setStatusList(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseStatus = () => {\r\n    setStatusList(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={onClose} maxWidth=\"lg\" fullWidth>\r\n        <DialogContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={12} md={8}>\r\n              <Stack\r\n                spacing={3}\r\n                sx={{\r\n                  maxHeight: { sm: \"100%\", md: \"80vh\" },\r\n                  overflow: { sm: \"inherit\", md: \"auto\" },\r\n                  p: 2,\r\n                }}\r\n              >\r\n                <Box>\r\n                  <Typography variant=\"h6\">\r\n                    {`#${document?.getDocumentById.referenceNum}`}\r\n                  </Typography>\r\n                  <Typography variant=\"h3\">\r\n                    {document?.getDocumentById.subject}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Box>\r\n                  <Typography variant=\"body1\">\r\n                    {document?.getDocumentById.description}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Stack\r\n                  spacing={2}\r\n                  sx={{\r\n                    backgroundColor: theme.palette.grey[200],\r\n                    p: 2,\r\n                    borderRadius: 3,\r\n                  }}\r\n                >\r\n                  {document &&\r\n                    document.getDocumentById.comments.map((comment) => (\r\n                      <CommentCard\r\n                        key={comment.id}\r\n                        senderName={[\r\n                          comment.sender.firstName,\r\n                          comment.sender.lastName,\r\n                        ].join(\" \")}\r\n                        senderId={comment.sender.uuid}\r\n                        recipientName={[\r\n                          comment.recipient.firstName,\r\n                          comment.recipient.lastName,\r\n                        ].join(\" \")}\r\n                        recipientId={comment.recipient.uuid}\r\n                        message={comment.message}\r\n                      />\r\n                    ))}\r\n\r\n                  {document &&\r\n                    document.getDocumentById.comments.length === 0 && (\r\n                      <Typography variant=\"subtitle1\">\r\n                        No Comment Yet.\r\n                      </Typography>\r\n                    )}\r\n                </Stack>\r\n\r\n                <Divider />\r\n\r\n                {referenceNum && (\r\n                  <CommentField\r\n                    officerId={officerId}\r\n                    documentId={referenceNum}\r\n                    onComment={() => refetch()}\r\n                    recipients={\r\n                      document?.getDocumentById.recipients as Officers[]\r\n                    }\r\n                  />\r\n                )}\r\n              </Stack>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} md={4} sx={{ position: \"relative\" }}>\r\n              <Stack spacing={3}>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                    {document &&\r\n                      ![Role.Superuser, Role.Director].includes(role) && (\r\n                        <StatusButton\r\n                          role={role}\r\n                          officeId={officeId}\r\n                          status={\r\n                            document.getDocumentById.referredTo.find(\r\n                              (ref) => parseInt(ref.office.id) === officeId\r\n                            )?.status.category\r\n                          }\r\n                          referenceNum={document.getDocumentById.referenceNum}\r\n                          onUpdate={() => refetch()}\r\n                        />\r\n                      )}\r\n\r\n                    {document &&\r\n                      [Role.Superuser, Role.Director].includes(role) &&\r\n                      (document.getDocumentById.referredTo.length > 1 ? (\r\n                        <>\r\n                          <Button\r\n                            onClick={handleOpenStatus}\r\n                            variant=\"contained\"\r\n                            endIcon={\r\n                              <Iconify icon=\"solar:alt-arrow-down-line-duotone\" />\r\n                            }\r\n                          >\r\n                            {document.getDocumentById.status}\r\n                          </Button>\r\n\r\n                          <Popover\r\n                            open={!!statusList}\r\n                            anchorEl={statusList}\r\n                            onClose={handleCloseStatus}\r\n                            anchorOrigin={{\r\n                              vertical: \"bottom\",\r\n                              horizontal: \"right\",\r\n                            }}\r\n                            transformOrigin={{\r\n                              vertical: \"top\",\r\n                              horizontal: \"right\",\r\n                            }}\r\n                            PaperProps={{\r\n                              sx: {\r\n                                p: 0,\r\n                                mt: 1,\r\n                                ml: 0.75,\r\n                                width: 500,\r\n                              },\r\n                            }}\r\n                          >\r\n                            <List>\r\n                              {document.getDocumentById.referredTo.map(\r\n                                (ref) => (\r\n                                  <ListItem key={ref.office.id}>\r\n                                    <ListItemText\r\n                                      primary={ref.office.name}\r\n                                      secondary={\r\n                                        <Label\r\n                                          color={statusColor(\r\n                                            ref.status.category\r\n                                          )}\r\n                                        >\r\n                                          {capitalCase(ref.status.category)}\r\n                                        </Label>\r\n                                      }\r\n                                    />\r\n                                    <ListItemIcon>\r\n                                      <StatusButton\r\n                                        admin\r\n                                        role={role}\r\n                                        status={ref.status.category}\r\n                                        officeId={parseInt(ref.office.id)}\r\n                                        referenceNum={\r\n                                          document.getDocumentById.referenceNum\r\n                                        }\r\n                                        onUpdate={() => refetch()}\r\n                                      />\r\n                                    </ListItemIcon>\r\n                                  </ListItem>\r\n                                )\r\n                              )}\r\n                            </List>\r\n                          </Popover>\r\n                        </>\r\n                      ) : (\r\n                        document.getDocumentById.referredTo.map((ref) => (\r\n                          <StatusButton\r\n                            admin\r\n                            role={role}\r\n                            status={ref.status.category}\r\n                            officeId={parseInt(ref.office.id)}\r\n                            referenceNum={document.getDocumentById.referenceNum}\r\n                            onUpdate={() => refetch()}\r\n                          />\r\n                        ))\r\n                      ))}\r\n\r\n                    <PDFDownloadLink\r\n                      document={<ReferenceSlip document={document} />}\r\n                      fileName={`${referenceNum}.pdf`}\r\n                    >\r\n                      {({ url, loading }) => (\r\n                        <Button\r\n                          onClick={() => window.open(url as string, \"_blank\")}\r\n                          variant=\"contained\"\r\n                          disabled={loading}\r\n                          endIcon={\r\n                            <Iconify icon=\"ant-design:export-outlined\" />\r\n                          }\r\n                        >\r\n                          Export\r\n                        </Button>\r\n                      )}\r\n                    </PDFDownloadLink>\r\n                  </Stack>\r\n\r\n                  <IconButton onClick={onClose} sx={{ width: 50, height: 50 }}>\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                </Stack>\r\n\r\n                <DocumentDetails\r\n                  role={role}\r\n                  officeId={officeId}\r\n                  documentId={document?.getDocumentById.referenceNum}\r\n                  receivedFrom={document?.getDocumentById.receivedFrom}\r\n                  referredTo={document?.getDocumentById.referredTo\r\n                    .map((ref) => ref.office.name)\r\n                    .join(\", \")}\r\n                  type={document?.getDocumentById.type?.label}\r\n                  purpose={document?.getDocumentById.purpose\r\n                    ?.map((p) => p.label)\r\n                    .join(\", \")}\r\n                  dateCreated={document?.getDocumentById.dateCreated}\r\n                  dateDue={document?.getDocumentById.dateDue}\r\n                  tag={document?.getDocumentById.tag}\r\n                  directorAssigned={document?.getDocumentById.directorAssigned.map(\r\n                    (officer) => ({\r\n                      uuid: officer.uuid,\r\n                      firstName: officer.firstName,\r\n                      lastName: officer.lastName,\r\n                      position: officer.position\r\n                        ? formatReferrals(officer.office?.name) +\r\n                          \" \" +\r\n                          officer.position?.label\r\n                        : \"\",\r\n                    })\r\n                  )}\r\n                  chiefAssigned={document?.getDocumentById.chiefAssigned.map(\r\n                    (officer) => ({\r\n                      uuid: officer.uuid,\r\n                      firstName: officer.firstName,\r\n                      lastName: officer.lastName,\r\n                      position: officer.position?.label,\r\n                    })\r\n                  )}\r\n                />\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={getError?.message || subscribeError?.message}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":["config","readonly","toolbar","minHeight","maxHeight","buttons","uploader","url","process","imagesExtensions","withCredentials","format","method","prepareData","formData","files","Array","from","values","filter","obj","File","keys","forEach","key","delete","file","append","isSuccess","resp","length","map","filePath","path","baseurl","error","msg","console","log","style","background","color","CommentField","props","editor","useRef","content","setContent","useState","formError","setFormError","recipientId","setRecipientId","createComment","useMutation","CREATE_COMMENT","useEffect","message","_jsxs","_Fragment","children","_jsx","Box","component","onSubmit","async","event","preventDefault","officerId","variables","documentId","senderId","onComment","Stack","spacing","recipients","TextField","name","select","label","value","onChange","target","required","fullWidth","option","MenuItem","uuid","firstName","lastName","JoditEditor","ref","sx","display","flexDirection","justifyContent","Button","type","variant","endIcon","Iconify","icon","Snackbar","severity","CommentCard","_ref","senderName","recipientName","useAppSelector","state","auth","pl","pr","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","id","direction","Avatar","split","charAt","join","Typography","concat","AccordionDetails","DocumentDetails","role","officeId","receivedFrom","dateCreated","dateDue","referredTo","purpose","tag","directorAssigned","chiefAssigned","referrals","setReferrals","data","officers","getError","useQuery","GET_OFFICERS","assignOfficers","assignError","ASSIGN_OFFICERS","Role","Chief","officer","Card","CardHeader","title","sm","md","overflowY","TableContainer","Table","size","TableBody","TableRow","TableCell","scope","noWrap","capitalCase","position","MultiSelect","selected","options","getOfficers","_officer$position","_officer$position2","description","officerIds","Date","toLocaleDateString","undefined","year","month","day","weekday","StatusButton","status","referenceNum","onUpdate","admin","statuses","GET_STATUSES","fetchPolicy","updateStatus","updateError","UPDATE_DOCUMENT_STATUS","setError","currentStatus","setCurrentStatus","Status","Referred","handleStatusChange","category","_statuses$getDocument","statusId","getDocumentStatus","find","parseInt","Superuser","Director","onClick","Finished","disabled","NotActionable","Submitted","statusColor","formatReferrals","office","word","isNaN","toUpperCase","toString","DocumentDialog","_document$getDocument","_document$getDocument2","_document$getDocument3","open","onClose","theme","useTheme","statusList","setStatusList","document","refetch","GET_DOCUMENT_BY_ID","documentEvents","subscribeError","useSubscription","SUBSCRIBE_DOCUMENT_EVENTS","Dialog","maxWidth","DialogContent","Grid","container","item","xs","overflow","p","getDocumentById","subject","backgroundColor","palette","grey","borderRadius","comments","comment","sender","recipient","Divider","alignItems","includes","currentTarget","Popover","anchorEl","handleCloseStatus","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","mt","ml","width","List","ListItem","ListItemText","primary","secondary","Label","ListItemIcon","PDFDownloadLink","ReferenceSlip","fileName","_ref2","loading","window","IconButton","height","CloseIcon","_officer$office"],"sourceRoot":""}