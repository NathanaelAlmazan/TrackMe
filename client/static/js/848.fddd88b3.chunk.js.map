{"version":3,"file":"static/js/848.fddd88b3.chunk.js","mappings":"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","sources":["graphql/documents/index.tsx","sections/documents/table/Toolbar.tsx","sections/documents/table/Head.tsx","sections/documents/table/Row.tsx","sections/documents/table/index.tsx","sections/documents/index.tsx"],"sourcesContent":["import { gql } from '../../__generated__/gql';\r\n\r\n\r\n// ================================ TYPES =================================\r\n\r\nexport const GET_TYPES = gql(`\r\n    query GetDocumentTypes {\r\n        getDocumentTypes {\r\n            id\r\n            label\r\n        }\r\n    }\r\n`)\r\n\r\nexport const CREATE_TYPE = gql(`\r\n    mutation CreateDocumentType($label: String!) {\r\n        createDocumentType(label: $label) {\r\n            id\r\n            label\r\n        }\r\n    }\r\n`)\r\n\r\nexport const UPDATE_TYPE = gql(`\r\n    mutation UpdateDocumentType($id: Int!, $label: String!) {\r\n        updateDocumentType(id: $id, label: $label) {\r\n            id\r\n            label\r\n        }\r\n    }\r\n`)\r\n\r\nexport const DELETE_TYPE = gql(`\r\n    mutation DeleteDocumentType($id: Int!) {\r\n        deleteDocumentType(id: $id) {\r\n            id  \r\n            label\r\n        }\r\n    }\r\n`)\r\n\r\n// ================================ PURPOSES =================================\r\n\r\nexport const GET_PURPOSES = gql(`\r\n    query GetDocumentPurposes {\r\n        getDocumentPurposes {\r\n            id\r\n            label\r\n        }\r\n    }\r\n`)\r\n\r\nexport const CREATE_PURPOSE = gql(`\r\n    mutation CreateDocumentPurpose($label: String!) {\r\n        createDocumentPurpose(label: $label) {\r\n            id\r\n            label\r\n        }\r\n    }\r\n`)\r\n\r\nexport const UPDATE_PURPOSE = gql(`\r\n    mutation UpdateDocumentPurpose($id: Int!, $label: String!) {\r\n        updateDocumentPurpose(id: $id, label: $label) {\r\n            id\r\n            label\r\n        }\r\n    }\r\n`)\r\n\r\nexport const DELETE_PURPOSE = gql(`\r\n    mutation DeleteDocumentPurpose($id: Int!) {\r\n        deleteDocumentPurpose(id: $id) {\r\n            id\r\n            label\r\n        }\r\n    }\r\n`)\r\n\r\n// ================================ STATUS =================================\r\n\r\nexport const GET_STATUSES = gql(`\r\n    query GetDocumentStatus {\r\n        getDocumentStatus {\r\n            id\r\n            label\r\n            category\r\n        }\r\n    }\r\n`)\r\n\r\nexport const CREATE_STATUS = gql(`\r\n    mutation CreateDocumentStatus($label: String!, $category: Status!) {\r\n        createDocumentStatus(label: $label, category: $category) {\r\n            id\r\n            label\r\n            category\r\n        }\r\n    }\r\n`)\r\n\r\nexport const UPDATE_STATUS = gql(`\r\n    mutation UpdateDocumentStatus($id: Int!, $label: String!, $category: Status!) {\r\n        updateDocumentStatus(id: $id, label: $label, category: $category) {\r\n            id\r\n            label\r\n            category\r\n        }\r\n    }\r\n`)\r\n\r\nexport const DELETE_STATUS = gql(`\r\n    mutation DeleteDocumentStatus($id: Int!) {\r\n        deleteDocumentStatus(id: $id) {\r\n            id\r\n            label\r\n            category\r\n        }\r\n    }\r\n`);\r\n\r\n// ================================ DOCUMENTS =================================\r\n\r\nexport const GET_TEMP_REF_NUM = gql(`\r\n    query TempReferenceNum {\r\n        getTempReferenceNum\r\n    }\r\n`)\r\n\r\nexport const GET_DOCUMENT_SUMMARY = gql(`\r\n    query GetDocumentSummary {\r\n        getDocumentSummary {\r\n            closed\r\n            noaction\r\n            office\r\n            ongoing\r\n            referred\r\n        }\r\n    }\r\n`)\r\n\r\nexport const GET_DOCUMENTS = gql(`\r\n    query GetDocuments($officeId: Int) {\r\n        getDocuments(officeId: $officeId) {\r\n            referenceNum\r\n            subject\r\n            receivedFrom\r\n            refferedTo {\r\n                name\r\n            }\r\n            tag\r\n            status {\r\n                label\r\n                category\r\n            }\r\n            dateCreated\r\n        }\r\n    }\r\n`)\r\n\r\nexport const GET_DOCUMENT_BY_ID = gql(`\r\n    query GetDocumentById($referenceNum: String!) {\r\n        getDocumentById(referenceNum: $referenceNum) {\r\n            referenceNum\r\n            subject\r\n            description\r\n            receivedFrom\r\n            refferedTo {\r\n                id\r\n                name\r\n            }\r\n            type {\r\n                id\r\n                label\r\n            }\r\n            purpose {\r\n                id\r\n                label\r\n            }\r\n            tag\r\n            status {\r\n                id\r\n                label\r\n                category\r\n            }\r\n            dateCreated\r\n            dateDue\r\n            comments {\r\n                id\r\n                sender {\r\n                    uuid\r\n                    avatar\r\n                    firstName\r\n                    lastName\r\n                    position {\r\n                        label\r\n                    }\r\n                }   \r\n                files\r\n                message\r\n                dateCreated\r\n            }\r\n        }\r\n    }\r\n`)\r\n\r\nexport const CREATE_DOCUMENT = gql(`\r\n    mutation CreateDocument($subject: String!, $description: String!, $receivedFrom: String!, $typeId: Int!, $purposeId: Int!, $statusId: Int!, $dateDue: String!, $refferedTo: [Int!]!, $tag: Tags) {\r\n        createDocument(subject: $subject, description: $description, receivedFrom: $receivedFrom, typeId: $typeId, purposeId: $purposeId, statusId: $statusId, dateDue: $dateDue, refferedTo: $refferedTo, tag: $tag) {\r\n            referenceNum\r\n        }\r\n    }\r\n`)\r\n\r\nexport const UPDATE_DOCUMENT = gql(`\r\n    mutation UpdateDocument($referenceNum: String!, $subject: String, $description: String, $receivedFrom: String, $typeId: Int, $purposeId: Int, $statusId: Int, $tag: Tags, $dateDue: String, $refferedTo: [Int]) {\r\n        updateDocument(referenceNum: $referenceNum, subject: $subject, description: $description, receivedFrom: $receivedFrom, typeId: $typeId, purposeId: $purposeId, statusId: $statusId, tag: $tag, dateDue: $dateDue, refferedTo: $refferedTo) {\r\n            referenceNum\r\n        }\r\n    }\r\n`)\r\n\r\nexport const DELETE_DOCUMENT = gql(`\r\n    mutation DeleteDocument($referenceNum: String!) {\r\n        deleteDocument(referenceNum: $referenceNum) {\r\n            subject\r\n        }\r\n    }\r\n`)\r\n\r\nexport const UPDATE_DOCUMENT_STATUS = gql(`\r\n    mutation DocumentUpdateStatus($referenceNum: String!, $statusId: Int!) {\r\n        documentUpdateStatus(referenceNum: $referenceNum, statusId: $statusId) {\r\n            id\r\n            label\r\n        }\r\n    }\r\n`)\r\n\r\nexport const CREATE_COMMENT = gql(`\r\n    mutation CreateComment($documentId: String!, $senderId: String!, $message: String!, $files: [String!]) {\r\n        createComment(documentId: $documentId, senderId: $senderId, message: $message, files: $files) {\r\n            id\r\n        }\r\n    }\r\n`)\r\n\r\nexport const SUBSCRIBE_DOCUMENT_EVENTS = gql(`\r\n    subscription DocumentEvents($referenceNum: String!) {\r\n        documentEvents(referenceNum: $referenceNum) {\r\n            eventDate\r\n            eventName\r\n        }\r\n    }\r\n`)\r\n\r\nexport const GET_DOCUMENT_STATISTICS = gql(`\r\n    query GetDocumentStatistics($officeId: Int) {\r\n        getDocumentStatistics(officeId: $officeId) {\r\n            closed\r\n            noaction\r\n            ongoing\r\n            referred\r\n        }\r\n    }\r\n`)","import React from 'react';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\nimport { Iconify } from '../../../components';\r\n\r\nexport default function DocumentTableToolbar({\r\n  filterName,\r\n  onRefresh,\r\n  onFilterName \r\n}: { \r\n  filterName: string, \r\n  onRefresh: () => void,\r\n  onFilterName: (event: React.ChangeEvent<HTMLInputElement>) => void }\r\n) {\r\n    return (\r\n      <Toolbar\r\n        sx={{\r\n          height: 96,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          p: (theme) => theme.spacing(0, 1, 0, 3)\r\n        }}\r\n      >\r\n        <OutlinedInput\r\n          value={filterName}\r\n          onChange={onFilterName}\r\n          placeholder=\"Search...\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Iconify\r\n                icon=\"eva:search-fill\"\r\n                sx={{ color: 'text.disabled', width: 20, height: 20 }}\r\n              />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n  \r\n        <Tooltip title=\"Refresh\">\r\n          <IconButton onClick={onRefresh}>\r\n            <Iconify icon=\"mdi:refresh\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    );\r\n}\r\n","import Box from '@mui/material/Box';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\n\r\nimport { DocumentRow } from '.';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DocumentTableHead({\r\n    order,\r\n    orderBy,\r\n    headLabel,\r\n    onRequestSort\r\n}: {\r\n    order: \"asc\" | \"desc\",\r\n    orderBy: string,\r\n    headLabel: { \r\n        id: keyof DocumentRow, \r\n        label?: string, \r\n        width?: number,\r\n        minWidth?: number,\r\n        align?: \"center\" | \"left\" | \"right\" | \"justify\" | \"inherit\" \r\n    }[],\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof DocumentRow) => void\r\n}) {\r\n  const createSortHandler =\r\n  (property: keyof DocumentRow) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Typography variant=\"subtitle2\" align='right' noWrap>\r\n            #\r\n          </Typography>\r\n        </TableCell>\r\n\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box sx={{\r\n                    border: 0,\r\n                    margin: -1,\r\n                    padding: 0,\r\n                    width: '1px',\r\n                    height: '1px',\r\n                    overflow: 'hidden',\r\n                    position: 'absolute',\r\n                    whiteSpace: 'nowrap',\r\n                    clip: 'rect(0 0 0 0)',\r\n                }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}","import { useState } from 'react';\r\n\r\nimport Popover from '@mui/material/Popover';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport { DocumentRow } from '.';\r\nimport { Label, Iconify, DeleteDialog } from '../../../components';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction statusColor(status: string) {\r\n  switch (status) {\r\n    case 'Ongoing':\r\n      return 'warning';\r\n    case 'Finished':\r\n      return'success';\r\n    case 'Not Started':\r\n      return 'error';\r\n    default:\r\n      return 'info';\r\n  }\r\n}\r\n\r\nexport default function DocumentTableRow({\r\n  officeId,\r\n  document,\r\n  onView,\r\n  onEdit,\r\n  onDelete\r\n}: {\r\n  officeId?: number,\r\n  document: DocumentRow,\r\n  onView: (event: React.MouseEvent<unknown>, id: string) => void,\r\n  onEdit: (event: React.MouseEvent<unknown>, id: string) => void,\r\n  onDelete: (event: React.MouseEvent<unknown>, id: string) => void\r\n}) {\r\n  const [open, setOpen] = useState<HTMLButtonElement | null>(null);\r\n  const [dialog, setDialog] = useState<boolean>(false);\r\n\r\n  const handleViewDocument = (event: React.MouseEvent<unknown>) => {\r\n    onView(event, document.referenceNum);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleEditDocument = (event: React.MouseEvent<unknown>) => {\r\n    onEdit(event, document.referenceNum);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleDeleteDocument = (event: React.MouseEvent<unknown>) => {\r\n    onDelete(event, document.referenceNum);\r\n    setOpen(null);\r\n    setDialog(false);\r\n  };\r\n\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover tabIndex={-1} role=\"checkbox\">\r\n        <TableCell padding=\"checkbox\">\r\n          <Typography variant=\"subtitle2\" align='right' noWrap>\r\n            #\r\n          </Typography>\r\n        </TableCell>\r\n\r\n        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n          <Typography variant=\"subtitle2\" noWrap>\r\n            {document.referenceNum}\r\n          </Typography>\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ minWidth: 250 }}>\r\n          <Typography variant=\"body2\">\r\n            {document.subject}\r\n          </Typography>\r\n          {document.tag && (\r\n            <Label color=\"info\">{document.tag}</Label>\r\n          )}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ minWidth: 150 }}>\r\n          {document.dateCreated}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\">\r\n          {document.receivedFrom}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ maxWidth: 200 }}>\r\n          {document.refferedTo}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 50 }}>\r\n          <Label color={statusColor(document.status.split('_')[0])}>{document.status.split('_')[1]}</Label>\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 30 }}>\r\n          <IconButton onClick={handleOpenMenu}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <Popover\r\n        open={!!open}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: { width: 140 },\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleViewDocument}>\r\n          <Iconify icon=\"fluent-mdl2:review-solid\" sx={{ mr: 2 }} />\r\n          View\r\n        </MenuItem>\r\n\r\n        {officeId === undefined && (\r\n          <MenuItem onClick={handleEditDocument}>\r\n            <Iconify icon=\"eva:edit-fill\" sx={{ mr: 2 }} />\r\n            Edit\r\n          </MenuItem>\r\n        )}\r\n\r\n        {officeId === undefined && (\r\n          <MenuItem onClick={() => setDialog(true)} sx={{ color: 'error.main' }}>\r\n            <Iconify icon=\"eva:trash-2-outline\" sx={{ mr: 2 }} />\r\n            Delete\r\n          </MenuItem>\r\n        )}\r\n      </Popover>\r\n\r\n      <DeleteDialog \r\n        open={dialog}\r\n        onClose={() => setDialog(false)}\r\n        onDelete={handleDeleteDocument}\r\n      />\r\n    </>\r\n  );\r\n}","import { useState, useEffect, useMemo } from 'react';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableEmptyRow from '@mui/material/TableRow';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableToolbar from './Toolbar';\r\nimport TableHead from './Head';\r\nimport TableRow from './Row';\r\nimport { Snackbar } from '../../../components';\r\n\r\nimport { capitalCase } from 'change-case';\r\nimport { useMutation, useQuery, useSubscription } from '@apollo/client';\r\nimport { GET_DOCUMENTS, DELETE_DOCUMENT } from '../../../graphql/documents';\r\nimport { SUBSCRIBE_OFFICE_EVENTS } from '../../../graphql/users';\r\n\r\nexport interface DocumentRow {\r\n    referenceNum: string;\r\n    subject: string;\r\n    receivedFrom: string;\r\n    status: string;\r\n    refferedTo: string;\r\n    dateCreated: string;\r\n    tag: string;\r\n}\r\n\r\nfunction formatReferrals(offices: string[]): string {\r\n    return offices.map(office => {\r\n        return office.split(' ').map(word => {\r\n            if (isNaN(parseInt(word))) \r\n                return word.charAt(0).toUpperCase();\r\n            else\r\n                return `-${parseInt(word).toString()}`;\r\n        }).join('');\r\n    }).join(', ');\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\ntype Order = 'asc' | 'desc';\r\n  \r\nfunction getComparator<Key extends keyof DocumentRow>(\r\n    order: Order,\r\n    orderBy: Key,\r\n  ): (\r\n    a: { [key in Key]: number | string },\r\n    b: { [key in Key]: number | string },\r\n  ) => number {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n  \r\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) {\r\n        return order;\r\n      }\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function DocumentTable({\r\n    officeId,\r\n    onRefresh,\r\n    onView,\r\n    onEdit\r\n}: {\r\n    officeId?: number,\r\n    onRefresh: () => void,\r\n    onView: (referenceNum: string) => void,\r\n    onEdit: (referenceNum: string) => void\r\n}) {\r\n    const { data: documents, error: getError, refetch } = useQuery(GET_DOCUMENTS, {\r\n        variables: {\r\n            officeId\r\n        }\r\n    }); \r\n    const { data: officeEvents, error: subscribeError } = useSubscription(SUBSCRIBE_OFFICE_EVENTS);\r\n\r\n    const [page, setPage] = useState<number>(0);\r\n    const [order, setOrder] = useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = useState<keyof DocumentRow>('referenceNum');\r\n    const [filterName, setFilterName] = useState<string>('');\r\n    const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n    const [documentList, setDocumentList] = useState<DocumentRow[]>([]);\r\n\r\n    const [deleteDocument, { error: deleteError }] = useMutation(DELETE_DOCUMENT);\r\n\r\n    useEffect(() => {\r\n        if (documents) {\r\n            setDocumentList(documents.getDocuments.map(doc => ({\r\n                referenceNum: doc.referenceNum,\r\n                subject: doc.subject,\r\n                receivedFrom: doc.receivedFrom,\r\n                refferedTo: formatReferrals(doc.refferedTo.map(office => office.name)),\r\n                dateCreated: new Date(doc.dateCreated).toLocaleDateString(undefined, { month: 'short', day: 'numeric', year: 'numeric' }),\r\n                status: doc.status ? `${capitalCase(doc.status.category)}_${capitalCase(doc.status.label)}` : \"\",\r\n                tag: doc.tag ? capitalCase(doc.tag) : \"\"\r\n            })));\r\n        }\r\n    }, [documents]);\r\n\r\n    useEffect(() => {\r\n        if (officeEvents) refetch();\r\n    }, [officeEvents, refetch]);\r\n\r\n    const visibleRows = useMemo(\r\n        () =>\r\n          stableSort<DocumentRow>(documentList.filter(document => \r\n                document.referenceNum.includes(filterName) || document.subject.includes(filterName) || filterName.length === 0\r\n            ), getComparator(order, orderBy)).slice(\r\n            page * rowsPerPage,\r\n            page * rowsPerPage + rowsPerPage,\r\n          ),\r\n        [documentList, filterName, order, orderBy, page, rowsPerPage],\r\n    );\r\n\r\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, page: number) => {\r\n        setPage(page);\r\n    };\r\n    \r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setPage(0);\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n    };\r\n    \r\n    const handleFilterByName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPage(0);\r\n        setFilterName(event.target.value);\r\n    };\r\n\r\n    const handleRequestSort = (\r\n        event: React.MouseEvent<unknown>,\r\n        property: keyof DocumentRow,\r\n      ) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleView = (event: React.MouseEvent<unknown>, id: string) => onView(id);\r\n    const handleEdit = (event: React.MouseEvent<unknown>, id: string) => onEdit(id);\r\n    \r\n    const handleDelete = async (event: React.MouseEvent<unknown>, id: string) => {\r\n        await deleteDocument({\r\n            variables: {\r\n                referenceNum: id\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    const handleRefresh = async () => {\r\n        await refetch();\r\n        onRefresh();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Card>\r\n            <TableToolbar \r\n                filterName={filterName}\r\n                onRefresh={handleRefresh}\r\n                onFilterName={handleFilterByName}\r\n            />\r\n\r\n           <Box sx={{ maxWidth: 2400, overflow: 'auto' }}>\r\n                <TableContainer sx={{ overflow: 'unset' }}>\r\n                    <Table sx={{ minWidth: 800 }}>\r\n                        <TableHead\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            headLabel={[\r\n                                { id: 'referenceNum', label: 'Reference' },\r\n                                { id: 'subject', label: 'Subject', width: 250 },\r\n                                { id: 'dateCreated', label: 'Date', align: \"right\" },\r\n                                { id: 'receivedFrom', label: 'Received From', align: \"right\" },\r\n                                { id: 'refferedTo', label: 'Referred To', align: \"right\" },\r\n                                { id: 'status', label: 'Status', align: \"right\", width: 50 },\r\n                                { id: 'tag', align: \"right\", width: 20 }\r\n                            ]}\r\n                        />\r\n\r\n                        <TableBody>\r\n                            {visibleRows.map(document => \r\n                                <TableRow \r\n                                    key={document.referenceNum}\r\n                                    officeId={officeId}\r\n                                    document={document}\r\n                                    onView={handleView}\r\n                                    onEdit={handleEdit}\r\n                                    onDelete={handleDelete}\r\n                                />\r\n                            )}\r\n\r\n                            {visibleRows.length === 0 &&\r\n                                <TableEmptyRow sx={{ height: 80 }}>\r\n                                    <TableCell align=\"center\" colSpan={6}>\r\n                                        No results found.\r\n                                    </TableCell>\r\n                                </TableEmptyRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n           </Box>\r\n\r\n            <TablePagination\r\n                page={page}\r\n                component=\"div\"\r\n                count={documentList.length}\r\n                rowsPerPage={rowsPerPage}\r\n                onPageChange={handleChangePage}\r\n                rowsPerPageOptions={[10, 25, 50]}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </Card>\r\n\r\n        <Snackbar \r\n            severity='error' \r\n            message={getError?.message || subscribeError?.message || deleteError?.message} \r\n        />\r\n        </>\r\n    )\r\n}","import React, { lazy, useEffect, Suspense } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\nimport DocumentTable from './table';\r\nimport { ChartSummary, Iconify, Snackbar } from '../../components';\r\n\r\nimport { useQuery, useSubscription } from '@apollo/client';\r\nimport { GET_DOCUMENT_STATISTICS } from '../../graphql/documents';\r\nimport { SUBSCRIBE_OFFICE_EVENTS } from '../../graphql/users';\r\nimport { Role } from '../../__generated__/graphql';\r\n\r\nimport { useAppSelector } from '../../hooks';\r\n\r\nconst FormDialog = lazy(() => import('./form-dialog'));\r\nconst ViewDialog = lazy(() => import('./document-dialog'));\r\n\r\nfunction authorize(role?: Role, office?: string) {\r\n    if (!office) return undefined;\r\n\r\n    if (role && [Role.Superuser, Role.Director].includes(role)) return undefined;\r\n    else return parseInt(office);\r\n}\r\n\r\nexport default function DeocumentsPage() {\r\n    const { office, role } = useAppSelector((state) => state.auth);\r\n    \r\n    const { data: statistics, error: getError, refetch } = useQuery(GET_DOCUMENT_STATISTICS, {\r\n        variables: {\r\n            officeId: authorize(role, office)\r\n        }\r\n    }); \r\n    const { data: officeEvents, error: subscribeError } = useSubscription(SUBSCRIBE_OFFICE_EVENTS);\r\n\r\n    useEffect(() => {\r\n        if (officeEvents) refetch();\r\n    }, [officeEvents, refetch]);\r\n\r\n    const [form, setForm] = React.useState<boolean>(false);\r\n    const [view, setView] = React.useState<boolean>(false);\r\n    const [selected, setSelected] = React.useState<string | null>(null);\r\n\r\n    const handleFormDocument = () => {\r\n        setForm(!form);\r\n        setSelected(null);\r\n    };\r\n\r\n    const handleViewDocument = (referenceNum: string) => {\r\n        setSelected(referenceNum);\r\n        setView(!view);\r\n    };\r\n\r\n    const handleEditDocument = (referenceNum: string) => {\r\n        setSelected(referenceNum);\r\n        setForm(true);\r\n    };\r\n\r\n    const handleCloseView = () => {\r\n        setView(false);\r\n        setSelected(null);\r\n    }\r\n\r\n    return (    \r\n        <Container>\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                <Typography variant=\"h4\">Documents</Typography>\r\n\r\n                {authorize(role, office) === undefined && (\r\n                    <Button onClick={handleFormDocument} variant=\"contained\" color=\"inherit\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                        Create\r\n                    </Button>\r\n                )}\r\n            </Stack>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"Referred\"\r\n                        total={statistics ? statistics.getDocumentStatistics.referred : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='ic:twotone-forward-to-inbox' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"Closed\"\r\n                        total={statistics ? statistics.getDocumentStatistics.closed : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='ep:finished' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"Ongoing\"\r\n                        total={statistics ? statistics.getDocumentStatistics.ongoing : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='fluent-mdl2:processing' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"No Action\"\r\n                        total={statistics ? statistics.getDocumentStatistics.noaction : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='ic:twotone-sticky-note-2' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <DocumentTable \r\n                        officeId={authorize(role, office)}\r\n                        onRefresh={() => refetch()} \r\n                        onView={handleViewDocument} \r\n                        onEdit={handleEditDocument} \r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Suspense>\r\n                <FormDialog \r\n                    open={form} \r\n                    referenceNum={selected} \r\n                    onClose={handleFormDocument} \r\n                />\r\n            </Suspense>\r\n\r\n            {selected && (\r\n                <Suspense>\r\n                    <ViewDialog \r\n                        open={view} \r\n                        officeId={authorize(role, office)}\r\n                        referenceNum={selected} \r\n                        onClose={handleCloseView} \r\n                    />\r\n                </Suspense>\r\n            )}\r\n\r\n        <Snackbar \r\n            severity='error' \r\n            message={getError?.message || subscribeError?.message} \r\n        />\r\n        </Container>\r\n    );\r\n}"],"names":["GET_TYPES","gql","CREATE_TYPE","UPDATE_TYPE","DELETE_TYPE","GET_PURPOSES","CREATE_PURPOSE","UPDATE_PURPOSE","DELETE_PURPOSE","GET_STATUSES","CREATE_STATUS","UPDATE_STATUS","DELETE_STATUS","GET_TEMP_REF_NUM","GET_DOCUMENT_SUMMARY","GET_DOCUMENTS","GET_DOCUMENT_BY_ID","CREATE_DOCUMENT","UPDATE_DOCUMENT","DELETE_DOCUMENT","UPDATE_DOCUMENT_STATUS","CREATE_COMMENT","SUBSCRIBE_DOCUMENT_EVENTS","GET_DOCUMENT_STATISTICS","DocumentTableToolbar","_ref","filterName","onRefresh","onFilterName","_jsxs","Toolbar","sx","height","display","justifyContent","p","theme","spacing","children","_jsx","OutlinedInput","value","onChange","placeholder","startAdornment","InputAdornment","position","Iconify","icon","color","width","Tooltip","title","IconButton","onClick","DocumentTableHead","order","orderBy","headLabel","onRequestSort","TableHead","TableRow","TableCell","padding","Typography","variant","align","noWrap","map","headCell","sortDirection","id","minWidth","TableSortLabel","hideSortIcon","active","direction","property","event","label","Box","border","margin","overflow","whiteSpace","clip","statusColor","status","DocumentTableRow","officeId","document","onView","onEdit","onDelete","open","setOpen","useState","dialog","setDialog","_Fragment","hover","tabIndex","role","component","scope","referenceNum","subject","tag","Label","dateCreated","receivedFrom","maxWidth","refferedTo","split","currentTarget","Popover","anchorEl","onClose","handleCloseMenu","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","MenuItem","mr","undefined","DeleteDialog","descendingComparator","a","b","DocumentTable","data","documents","error","getError","refetch","useQuery","variables","officeEvents","subscribeError","useSubscription","SUBSCRIBE_OFFICE_EVENTS","page","setPage","setOrder","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","documentList","setDocumentList","deleteDocument","deleteError","useMutation","useEffect","getDocuments","doc","offices","office","name","word","isNaN","parseInt","charAt","toUpperCase","concat","toString","join","Date","toLocaleDateString","month","day","year","capitalCase","category","visibleRows","useMemo","array","comparator","stabilizedThis","el","index","sort","stableSort","filter","includes","length","getComparator","slice","handleView","handleEdit","handleDelete","async","Card","TableToolbar","target","TableContainer","Table","handleRequestSort","TableBody","TableEmptyRow","colSpan","TablePagination","count","onPageChange","handleChangePage","rowsPerPageOptions","onRowsPerPageChange","Snackbar","severity","message","FormDialog","lazy","ViewDialog","authorize","Role","Superuser","Director","DeocumentsPage","useAppSelector","state","auth","statistics","form","setForm","React","view","setView","selected","setSelected","handleFormDocument","Container","Stack","alignItems","mb","Button","startIcon","Grid","container","item","xs","sm","md","ChartSummary","total","getDocumentStatistics","referred","closed","ongoing","noaction","Suspense","handleCloseView"],"sourceRoot":""}