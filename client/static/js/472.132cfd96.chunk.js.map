{"version":3,"file":"static/js/472.132cfd96.chunk.js","mappings":"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","sources":["sections/auth/verify.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport { alpha, useTheme } from '@mui/material/styles';\r\n\r\nimport { useAppSelector, useRouter } from '../../hooks';\r\n\r\nimport { bgGradient } from '../../theme/css';\r\n\r\nimport { Logo, Iconify } from '../../components';\r\n\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { CONFIRM_VERIFY_ACCOUNT, REQUEST_VERIFY_ACCOUNT } from '../../graphql/users';\r\nimport { Role } from '../../__generated__/graphql';\r\n\r\n// ----------------------------------------------------------------------\r\ninterface AccountVerify {\r\n    username: string;\r\n    code: string;\r\n}\r\n\r\nconst formDefaults = {\r\n    username: '',\r\n    code: ''\r\n}\r\n\r\nexport default function AccountVerifyView() {\r\n  const theme = useTheme();\r\n  const { uuid: signed, role } = useAppSelector((state) => state.auth);\r\n  const { uuid } = useParams();\r\n\r\n  const router = useRouter();\r\n\r\n  const [error, setError] = useState<string>();\r\n  const [confirm, setConfirm] = useState<boolean>(false);\r\n  const [formData, setFormData] = useState<AccountVerify>(formDefaults);\r\n\r\n  const { username, code } = formData;\r\n\r\n  const [requestVerify, { error: requestError }] = useLazyQuery(REQUEST_VERIFY_ACCOUNT);\r\n  const [confirmVerify, { error: confirmError }] = useLazyQuery(CONFIRM_VERIFY_ACCOUNT);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmitRequest = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!uuid) {\r\n      setError(\"Invalid URL. Please relaod.\");\r\n      return\r\n    }\r\n\r\n    if (!username) {\r\n      setError(\"Please type your email or phone number.\");\r\n      return\r\n    }\r\n\r\n    requestVerify({ variables: {\r\n      uuid: uuid,\r\n      contact: username,\r\n    }})\r\n     .then(({ data }) => {\r\n            if (data && data.requestAccountVerify) {\r\n                setConfirm(true);\r\n                setError(undefined);\r\n            }\r\n        })\r\n     .catch((error) => {\r\n        setError(error.message);\r\n    });\r\n  };\r\n\r\n  const handleSubmitPassword = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    confirmVerify({ variables: {\r\n        code: code,\r\n        contact: username,\r\n      }\r\n  })\r\n    .then(({ data }) => {\r\n           if (data && data.confirmAccountVerify) {\r\n               if (signed && role) {\r\n                if ([Role.Superuser, Role.Director].includes(role)) router.push('/dashboard');\r\n                else router.push('/calendar');\r\n               } else {\r\n                 router.push('/login');\r\n               }\r\n           }\r\n       })\r\n    .catch((error) => {\r\n        setError(error.message);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ...bgGradient({\r\n          color: alpha(theme.palette.background.default, 0.5),\r\n          imgUrl: '/assets/background/overlay_5.jpg',\r\n        }),\r\n        height: 1,\r\n      }}\r\n    >\r\n      <Logo\r\n        sx={{\r\n          position: 'fixed',\r\n          top: { xs: 16, md: 24 },\r\n          left: { xs: 16, md: 24 },\r\n        }}\r\n      />\r\n\r\n      <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ height: 1 }}>\r\n        <Card\r\n          sx={{\r\n            p: 5,\r\n            width: 1,\r\n            maxWidth: 420,\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\">ACCOUNT VERIFICATION</Typography>\r\n\r\n            {!confirm ? (\r\n                <form onSubmit={handleSubmitRequest}>\r\n                    <Stack spacing={2} sx={{ my: 3 }}>\r\n                        <TextField \r\n                            name=\"username\" \r\n                            label=\"Email or Phone Number (+63)\" \r\n                            value={username} \r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            required\r\n                        />\r\n                    </Stack>\r\n\r\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ my: 2 }}>\r\n                        {(requestError?.message || error) && (\r\n                            <Typography variant=\"body2\" align='center' color=\"error\">\r\n                                {requestError?.message || error}\r\n                            </Typography>\r\n                        )}\r\n                    </Stack>\r\n\r\n                    <Button\r\n                        fullWidth\r\n                        endIcon={<Iconify icon=\"mdi:arrow-right\" />}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"inherit\"\r\n                    >\r\n                        Send Code\r\n                    </Button>\r\n                </form>\r\n            ): (\r\n                <form onSubmit={handleSubmitPassword}>\r\n                    <Stack spacing={2} sx={{ my: 3 }}>\r\n                        <TextField \r\n                            name=\"code\" \r\n                            label=\"Code\" \r\n                            value={code} \r\n                            onChange={handleChange}\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                    </Stack>\r\n\r\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ my: 2 }}>\r\n                        {(confirmError?.message || error) && (\r\n                            <Typography variant=\"body2\" align='center' color=\"error\">\r\n                                {confirmError?.message || error}\r\n                            </Typography>\r\n                        )}\r\n                    </Stack>\r\n\r\n                    <Button\r\n                        fullWidth\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"inherit\"\r\n                    >\r\n                        Verify Account\r\n                    </Button>\r\n                </form>\r\n            )}\r\n        </Card>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}"],"names":["formDefaults","username","code","AccountVerifyView","theme","useTheme","uuid","signed","role","useAppSelector","state","auth","useParams","router","useRouter","error","setError","useState","confirm","setConfirm","formData","setFormData","requestVerify","requestError","useLazyQuery","REQUEST_VERIFY_ACCOUNT","confirmVerify","confirmError","CONFIRM_VERIFY_ACCOUNT","handleChange","event","target","name","value","_jsxs","Box","sx","bgGradient","color","alpha","palette","background","default","imgUrl","height","children","_jsx","Logo","position","top","xs","md","left","Stack","alignItems","justifyContent","Card","p","width","maxWidth","Typography","variant","onSubmit","preventDefault","variables","contact","then","_ref2","data","confirmAccountVerify","Role","Superuser","Director","includes","push","catch","message","spacing","my","TextField","label","onChange","required","fullWidth","direction","align","Button","size","type","_ref","requestAccountVerify","undefined","endIcon","Iconify","icon"],"sourceRoot":""}