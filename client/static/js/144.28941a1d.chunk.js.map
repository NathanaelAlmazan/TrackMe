{"version":3,"file":"static/js/144.28941a1d.chunk.js","mappings":"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","sources":["sections/documents/document-dialog/StatusButton.tsx","sections/documents/document-dialog/FileManager.tsx","sections/documents/document-dialog/CommentField.tsx","sections/documents/document-dialog/CommentCard.tsx","sections/documents/document-dialog/DocumentDetails.tsx","sections/documents/document-dialog/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nimport { Snackbar } from \"../../../components\";\r\n\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  GET_STATUSES,\r\n  UPDATE_DOCUMENT_STATUS,\r\n} from \"../../../graphql/documents\";\r\nimport { Role, Status } from \"../../../__generated__/graphql\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DIRECTOR_OPTIONS = [\r\n  { value: Status.Referred, label: \"Referred\" },\r\n  { value: Status.ForReview, label: \"For Review\" },\r\n  { value: Status.ForRevision, label: \"For Revision\" },\r\n  { value: Status.ForCorrection, label: \"For Correction\" },\r\n  { value: Status.ForApproval, label: \"For Approval\" },\r\n  { value: Status.UpdateReport, label: \"Update Report\" },\r\n  { value: Status.Finished, label: \"Closed\" }\r\n];\r\n\r\nconst CHIEF_OPTIONS = [\r\n  { value: Status.Referred, label: \"Referred\" },\r\n  { value: Status.Submitted, label: \"Submitted\" },\r\n  { value: Status.ForApproval, label: \"For Approval\" },\r\n  { value: Status.ForReview, label: \"For Review\" },\r\n  { value: Status.ForCorrection, label: \"For Correction\" }\r\n];\r\n\r\nexport default function StatusButton({\r\n  officeId,\r\n  status,\r\n  referenceNum,\r\n  role,\r\n  onUpdate,\r\n  width = 150,\r\n  showLabel = true\r\n}: {\r\n  officeId?: number;\r\n  status?: Status;\r\n  referenceNum: string;\r\n  role: Role;\r\n  onUpdate?: () => void;\r\n  width?: number;\r\n  showLabel?: boolean;\r\n}) {\r\n  const { data: statuses, error: getError } = useQuery(GET_STATUSES, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n  const [updateStatus, { error: updateError }] = useMutation(\r\n    UPDATE_DOCUMENT_STATUS\r\n  );\r\n\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [currentStatus, setCurrentStatus] = useState<string>(Status.Referred);\r\n\r\n  useEffect(() => {\r\n    if (status) setCurrentStatus(status);\r\n  }, [status]);\r\n\r\n  const handleStatusChange = async (category: string) => {\r\n    if (!officeId) return;\r\n\r\n    const statusId = statuses?.getDocumentStatus.find(\r\n      (status) => status.category === category\r\n    )?.id;\r\n\r\n    if (!statusId) {\r\n      setError(\"Status not found\");\r\n      return;\r\n    }\r\n\r\n    const result = await updateStatus({\r\n      variables: {\r\n        officeId,\r\n        referenceNum,\r\n        statusId: parseInt(statusId),\r\n      },\r\n    });\r\n\r\n    if (result.data) setCurrentStatus(category);\r\n\r\n    if (onUpdate) onUpdate();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {role === Role.Director && currentStatus !== Status.NotActionable && (\r\n        <TextField\r\n          name=\"status\"\r\n          select\r\n          label={showLabel ? \"Status\" : undefined}\r\n          variant=\"outlined\"\r\n          value={currentStatus}\r\n          onChange={(event) => handleStatusChange(event.target.value)}\r\n          required\r\n          fullWidth\r\n          sx={{\r\n            width: width,\r\n          }}\r\n        >\r\n          {DIRECTOR_OPTIONS.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      )}\r\n\r\n      {role === Role.Chief &&\r\n        currentStatus !== Status.NotActionable &&\r\n        currentStatus !== Status.Finished && (\r\n          <TextField\r\n            name=\"status\"\r\n            select\r\n            label=\"Status\"\r\n            variant=\"outlined\"\r\n            value={currentStatus}\r\n            onChange={(event) => handleStatusChange(event.target.value)}\r\n            required\r\n            fullWidth\r\n          >\r\n            {CHIEF_OPTIONS.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        )}\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={error || getError?.message || updateError?.message}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import Box from \"@mui/material/Box\";\r\nimport List from \"@mui/material/List\";\r\nimport Link from \"@mui/material/Link\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\n\r\nimport ForlderIcon from \"@mui/icons-material/Folder\";\r\n\r\nexport function extractFileName(url: string) {\r\n  const paths = url.split(\"_\");\r\n  return paths[paths.length - 1];\r\n}\r\n\r\nexport default function FileManager({\r\n  files,\r\n}: {\r\n  files: (string | null)[] | null | undefined;\r\n}) {\r\n  return (\r\n    <Box>\r\n      {files &&\r\n        files.map((file) => (\r\n          <List dense={true}>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <ForlderIcon />\r\n              </ListItemIcon>\r\n\r\n              {file && (\r\n                <ListItemText\r\n                  primary={\r\n                    <Link href={file} target=\"_blank\">\r\n                      {extractFileName(file)}\r\n                    </Link>\r\n                  }\r\n                />\r\n              )}\r\n            </ListItem>\r\n          </List>\r\n        ))}\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Box from \"@mui/material/Box\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport JoditEditor, { Jodit } from \"jodit-react\";\r\n\r\nimport { Snackbar, Iconify } from \"../../../components\";\r\nimport { Officers } from \"../../../__generated__/graphql\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { CREATE_COMMENT } from \"../../../graphql/documents\";\r\n\r\nexport type Uploads = {\r\n  fileUrl: string;\r\n  filePath: string;\r\n  fileName: string;\r\n  fileType: string;\r\n};\r\n\r\ntype MediaFiles = {\r\n  files: Uploads[];\r\n};\r\n\r\ninterface EditorProps {\r\n  officerId?: string;\r\n  documentId: string;\r\n  message?: string;\r\n  recipients?: Officers[];\r\n  onComment: () => void;\r\n}\r\n\r\nconst config = {\r\n  readonly: false, // all options from https://xdsoft.net/jodit/doc/\r\n  toolbar: true,\r\n  minHeight: 250,\r\n  maxHeight: 250,\r\n  buttons: [\r\n    \"source\",\r\n    \"|\",\r\n    \"bold\",\r\n    \"strikethrough\",\r\n    \"underline\",\r\n    \"italic\",\r\n    \"|\",\r\n    \"ul\",\r\n    \"ol\",\r\n    \"|\",\r\n    \"outdent\",\r\n    \"indent\",\r\n    \"|\",\r\n    \"font\",\r\n    \"fontsize\",\r\n    \"paragraph\",\r\n    \"|\",\r\n    \"image\",\r\n    \"table\",\r\n    \"link\",\r\n    \"|\",\r\n    \"align\",\r\n    \"undo\",\r\n    \"redo\",\r\n    \"selectall\",\r\n    \"cut\",\r\n    \"copy\",\r\n    \"|\",\r\n    \"hr\",\r\n    \"|\",\r\n    \"print\",\r\n    \"symbol\",\r\n    \"about\",\r\n  ],\r\n  uploader: {\r\n    url: process.env.REACT_APP_UPLOAD_URL as string,\r\n    imagesExtensions: [\"jpg\", \"png\", \"jpeg\", \"gif\"],\r\n    withCredentials: false,\r\n    format: \"json\",\r\n    method: \"POST\",\r\n    prepareData: function (formData: any) {\r\n      const files = Array.from(formData.values()).filter(\r\n        (obj) => obj instanceof File\r\n      );\r\n\r\n      // reset form data\r\n      Array.from(formData.keys()).forEach((key) => {\r\n        formData.delete(key);\r\n      });\r\n\r\n      // add files\r\n      files.forEach((file) => {\r\n        formData.append(\"files\", file);\r\n      });\r\n\r\n      return formData;\r\n    },\r\n    isSuccess: function (resp: MediaFiles) {\r\n      return resp.files.length > 0;\r\n    },\r\n    process: function (resp: MediaFiles) {\r\n      return {\r\n        files: resp.files.map((file) => file.filePath),\r\n        path: \"/\",\r\n        baseurl: process.env.REACT_APP_MEDIA_URL as string,\r\n        error: 0,\r\n        msg: \"\",\r\n      };\r\n    },\r\n    error: function (error: Error) {\r\n      console.log(\"Failed to upload files.\");\r\n    },\r\n  },\r\n  style: {\r\n    \"& .jodit .jodit-status-bar\": {\r\n      background: \"#29572E\",\r\n      color: \"rgba(255,255,255,0.5)\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function CommentField(props: EditorProps) {\r\n  const editor = useRef<Jodit>(null);\r\n  const [content, setContent] = useState<string>(\"\");\r\n  const [formError, setFormError] = useState<string>();\r\n  const [recipientId, setRecipientId] = useState<string>(\"\");\r\n\r\n  const [createComment, { error }] = useMutation(CREATE_COMMENT);\r\n\r\n  useEffect(() => {\r\n    if (props.message) setContent(props.message);\r\n  }, [props.message]);\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!props.officerId) {\r\n      setFormError(\"Not logged in.\");\r\n      return;\r\n    }\r\n\r\n    // create comment\r\n    await createComment({\r\n      variables: {\r\n        documentId: props.documentId,\r\n        message: content,\r\n        recipientId: recipientId,\r\n        senderId: props.officerId,\r\n      },\r\n    });\r\n\r\n    props.onComment(); // reload\r\n    setRecipientId(\"\");\r\n    setContent(\"\"); // reset message\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"form\" onSubmit={handleSubmit}>\r\n        <Stack spacing={2}>\r\n          {props.recipients && (\r\n            <TextField\r\n              name=\"recipientId\"\r\n              select\r\n              label=\"Recipient\"\r\n              value={recipientId}\r\n              onChange={(event) => setRecipientId(event.target.value)}\r\n              required\r\n              fullWidth\r\n            >\r\n              {props.recipients.map((option) => (\r\n                <MenuItem key={option.uuid} value={option.uuid}>\r\n                  {option.firstName + \" \" + option.lastName}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          )}\r\n\r\n          <JoditEditor\r\n            ref={editor}\r\n            value={content}\r\n            config={config}\r\n            onChange={(value) => setContent(value)}\r\n          />\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              endIcon={<Iconify icon=\"ic:baseline-send\" />}\r\n            >\r\n              Send\r\n            </Button>\r\n          </Box>\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Snackbar severity=\"error\" message={formError || error?.message} />\r\n    </>\r\n  );\r\n}\r\n","import { useRef } from \"react\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport JoditEditor, { Jodit } from \"jodit-react\";\r\n\r\nimport { useAppSelector } from \"../../../hooks\";\r\n\r\nconst config = {\r\n  readonly: true, // all options from https://xdsoft.net/jodit/doc/\r\n  toolbar: false,\r\n  minHeight: 250,\r\n  maxHeight: 250,\r\n  style: {\r\n    \"& .jodit .jodit-status-bar\": {\r\n      background: \"#29572E\",\r\n      color: \"rgba(255,255,255,0.5)\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function CommentCard({\r\n  senderId,\r\n  senderName,\r\n  recipientId,\r\n  recipientName,\r\n  message,\r\n}: {\r\n  senderId: string;\r\n  senderName: string;\r\n  recipientId: string;\r\n  recipientName: string;\r\n  message: string;\r\n}) {\r\n  const { uuid } = useAppSelector((state) => state.auth);\r\n\r\n  const editor = useRef<Jodit>(null);\r\n\r\n  return (\r\n    <Box sx={uuid === senderId ? { pl: \"5%\" } : { pr: \"5%\" }}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1-content\"\r\n          id=\"panel1-header\"\r\n        >\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Avatar>\r\n              {senderName\r\n                .split(\" \")\r\n                .map((name) => name.charAt(0))\r\n                .join(\"\")}\r\n            </Avatar>\r\n           <Box>\r\n           <Typography variant=\"subtitle1\" component=\"div\">\r\n              {senderName}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"div\">\r\n              {`To ${recipientName}`}\r\n            </Typography>\r\n           </Box>\r\n          </Stack>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <JoditEditor ref={editor} value={message} config={config} />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { MultiSelect, Snackbar } from \"../../../components\";\r\n\r\nimport { capitalCase } from \"change-case\";\r\nimport { Role } from \"../../../__generated__/graphql\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { GET_OFFICERS } from \"../../../graphql/users\";\r\nimport { ASSIGN_OFFICERS } from \"../../../graphql/documents\";\r\n\r\nexport default function DocumentDetails({\r\n  role,\r\n  officeId,\r\n  documentId,\r\n  receivedFrom,\r\n  dateCreated,\r\n  dateDue,\r\n  referredTo,\r\n  type,\r\n  purpose,\r\n  tag,\r\n  directorAssigned,\r\n  chiefAssigned,\r\n}: {\r\n  role?: Role;\r\n  officeId?: number;\r\n  documentId?: string;\r\n  receivedFrom?: string;\r\n  dateCreated?: string;\r\n  dateDue?: string | null;\r\n  referredTo?: string;\r\n  type?: string;\r\n  purpose?: string;\r\n  tag?: string | null;\r\n  directorAssigned?: {\r\n    uuid: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    position?: string;\r\n  }[];\r\n  chiefAssigned?: {\r\n    uuid: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    position?: string;\r\n  }[];\r\n}) {\r\n  const [referrals, setReferrals] = useState<string[]>([]);\r\n  const { data: officers, error: getError } = useQuery(GET_OFFICERS, {\r\n    variables: {\r\n      officeId: officeId ? [officeId] : [],\r\n    },\r\n  });\r\n  const [assignOfficers, { error: assignError }] = useMutation(ASSIGN_OFFICERS);\r\n\r\n  const handleReferralsChange = (selected: string[]) => {\r\n    setReferrals(selected);\r\n\r\n    if (documentId) {\r\n      assignOfficers({\r\n        variables: {\r\n          documentId,\r\n          officerIds: selected,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      role === Role.Chief &&\r\n      directorAssigned?.length === 0 &&\r\n      chiefAssigned &&\r\n      officeId\r\n    ) {\r\n      setReferrals(chiefAssigned.map((officer) => officer.uuid));\r\n    }\r\n  }, [role, directorAssigned, chiefAssigned, officeId]);\r\n\r\n  console.log(directorAssigned);\r\n\r\n  return (\r\n    <>\r\n      <Card variant=\"outlined\">\r\n        <CardHeader title=\"Details\" />\r\n        <Box\r\n          sx={{\r\n            maxHeight: { sm: \"100%\", md: \"80vh\" },\r\n            overflowY: { sm: \"inherit\", md: \"auto\" },\r\n          }}\r\n        >\r\n          <TableContainer>\r\n            <Table size=\"small\" aria-label=\"dense table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Type\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">{type}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Purpose\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">{purpose}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Tag\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">\r\n                      {tag ? capitalCase(tag) : \"None\"}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Received From\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">{receivedFrom}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Referred To\r\n                    </Typography>\r\n                  </TableCell>\r\n                  {directorAssigned && directorAssigned.length !== 0 ? (\r\n                    <TableCell>\r\n                      {directorAssigned &&\r\n                        directorAssigned.map((officer) => (\r\n                          <Box key={officer.uuid}>\r\n                            <Typography variant=\"body2\">\r\n                              {officer.firstName} {officer.lastName}\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" color=\"textSecondary\">\r\n                              {officer.position || \"\"}\r\n                            </Typography>\r\n                          </Box>\r\n                        ))}\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell>\r\n                      <Typography variant=\"body2\">{referredTo}</Typography>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n\r\n                {role === Role.Chief && directorAssigned?.length === 0 && (\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Typography variant=\"subtitle2\" noWrap>\r\n                        Assigned To\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {officers && (\r\n                        <MultiSelect\r\n                          name=\"assignedTo\"\r\n                          label=\"Assigned To\"\r\n                          selected={referrals}\r\n                          required={false}\r\n                          options={officers.getOfficers\r\n                            .filter(\r\n                              (officer) => officer.position?.role !== Role.Chief\r\n                            )\r\n                            .map((officer) => ({\r\n                              id: officer.uuid,\r\n                              label: officer.firstName + \" \" + officer.lastName,\r\n                              description: officer.position?.label,\r\n                            }))}\r\n                          onChange={handleReferralsChange}\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Date Received\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">\r\n                      {dateCreated &&\r\n                        new Date(dateCreated).toLocaleDateString(undefined, {\r\n                          year: \"numeric\",\r\n                          month: \"short\",\r\n                          day: \"numeric\",\r\n                          weekday: \"short\",\r\n                        })}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Date Due\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">\r\n                      {dateDue\r\n                        ? new Date(dateDue).toLocaleDateString(undefined, {\r\n                            year: \"numeric\",\r\n                            month: \"short\",\r\n                            day: \"numeric\",\r\n                            weekday: \"short\",\r\n                          })\r\n                        : \"None\"}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      </Card>\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={getError?.message || assignError?.message}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n\r\nimport { Iconify, ReferenceSlip, Snackbar, Label } from \"../../../components\";\r\nimport FileManager from \"./FileManager\";\r\nimport CommentField from \"./CommentField\";\r\nimport CommentCard from \"./CommentCard\";\r\nimport DocumentDetails from \"./DocumentDetails\";\r\nimport StatusButton from \"./StatusButton\";\r\n\r\nimport { useQuery, useSubscription } from \"@apollo/client\";\r\nimport {\r\n  GET_DOCUMENT_BY_ID,\r\n  SUBSCRIBE_DOCUMENT_EVENTS,\r\n} from \"../../../graphql/documents\";\r\nimport { Officers, Role, Status } from \"../../../__generated__/graphql\";\r\nimport { capitalCase } from \"change-case\";\r\n\r\nfunction statusColor(status: Status) {\r\n  switch (status) {\r\n    case Status.Finished:\r\n      return \"success\";\r\n    case Status.NotActionable:\r\n      return \"info\";\r\n    default:\r\n      return \"warning\";\r\n  }\r\n}\r\n\r\nexport function formatReferrals(office?: string): string {\r\n  if (!office) return \"\";\r\n  return office\r\n    .split(\" \")\r\n    .map((word) => {\r\n      if (isNaN(parseInt(word))) return word.charAt(0).toUpperCase();\r\n      else return `-${parseInt(word).toString()}`;\r\n    })\r\n    .join(\"\");\r\n}\r\n\r\nexport default function DocumentDialog({\r\n  officerId,\r\n  officeId,\r\n  role,\r\n  referenceNum,\r\n  open,\r\n  onClose,\r\n}: {\r\n  officerId: string;\r\n  officeId?: number;\r\n  role: Role;\r\n  referenceNum: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n}) {\r\n  const theme = useTheme();\r\n  const [statusList, setStatusList] = useState<HTMLButtonElement | null>(null);\r\n\r\n  const {\r\n    data: document,\r\n    error: getError,\r\n    refetch,\r\n  } = useQuery(GET_DOCUMENT_BY_ID, {\r\n    fetchPolicy: \"no-cache\",\r\n    variables: {\r\n      officerId,\r\n      referenceNum,\r\n    },\r\n  });\r\n  const { data: documentEvents, error: subscribeError } = useSubscription(\r\n    SUBSCRIBE_DOCUMENT_EVENTS,\r\n    {\r\n      fetchPolicy: \"no-cache\",\r\n      variables: {\r\n        referenceNum,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (documentEvents) refetch();\r\n  }, [documentEvents, refetch]);\r\n\r\n  const handleOpenStatus = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setStatusList(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseStatus = () => {\r\n    setStatusList(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={onClose} maxWidth=\"lg\" fullWidth>\r\n        <DialogContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={12} md={8}>\r\n              <Stack\r\n                spacing={3}\r\n                sx={{\r\n                  maxHeight: { sm: \"100%\", md: \"80vh\" },\r\n                  overflow: { sm: \"inherit\", md: \"auto\" },\r\n                  p: 2,\r\n                }}\r\n              >\r\n                <Box>\r\n                  <Typography variant=\"h6\">\r\n                    {`#${document?.getDocumentById.referenceNum}`}\r\n                  </Typography>\r\n                  <Typography variant=\"h3\">\r\n                    {document?.getDocumentById.subject}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Box>\r\n                  <Typography variant=\"body1\">\r\n                    {document?.getDocumentById.description}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <FileManager files={document?.getDocumentById.files} />\r\n\r\n                <Stack\r\n                  spacing={2}\r\n                  sx={{\r\n                    backgroundColor: theme.palette.grey[200],\r\n                    p: 2,\r\n                    borderRadius: 3,\r\n                  }}\r\n                >\r\n                  {document &&\r\n                    document.getDocumentById.comments.map((comment) => (\r\n                      <CommentCard\r\n                        key={comment.id}\r\n                        senderName={[\r\n                          comment.sender.firstName,\r\n                          comment.sender.lastName,\r\n                        ].join(\" \")}\r\n                        senderId={comment.sender.uuid}\r\n                        recipientName={[\r\n                          comment.recipient.firstName,\r\n                          comment.recipient.lastName,\r\n                        ].join(\" \")}\r\n                        recipientId={comment.recipient.uuid}\r\n                        message={comment.message}\r\n                      />\r\n                    ))}\r\n\r\n                  {document &&\r\n                    document.getDocumentById.comments.length === 0 && (\r\n                      <Typography variant=\"subtitle1\">\r\n                        No Comment Yet.\r\n                      </Typography>\r\n                    )}\r\n                </Stack>\r\n\r\n                <Divider />\r\n\r\n                {referenceNum && (\r\n                  <CommentField\r\n                    officerId={officerId}\r\n                    documentId={referenceNum}\r\n                    onComment={() => refetch()}\r\n                    recipients={\r\n                      document?.getDocumentById.recipients as Officers[]\r\n                    }\r\n                  />\r\n                )}\r\n              </Stack>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} md={4} sx={{ position: \"relative\" }}>\r\n              <Stack spacing={3}>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                    {document &&\r\n                      ![Role.Superuser, Role.Director].includes(role) && (\r\n                        <StatusButton\r\n                          role={role}\r\n                          officeId={officeId}\r\n                          status={\r\n                            document.getDocumentById.referredTo.find(\r\n                              (ref) => parseInt(ref.office.id) === officeId\r\n                            )?.status.category\r\n                          }\r\n                          referenceNum={document.getDocumentById.referenceNum}\r\n                          onUpdate={() => refetch()}\r\n                          showLabel={true}\r\n                        />\r\n                      )}\r\n\r\n                    {document &&\r\n                      [Role.Superuser, Role.Director].includes(role) &&\r\n                      (document.getDocumentById.referredTo.length > 1 ? (\r\n                        <>\r\n                          <Button\r\n                            onClick={handleOpenStatus}\r\n                            variant=\"contained\"\r\n                            endIcon={\r\n                              <Iconify icon=\"solar:alt-arrow-down-line-duotone\" />\r\n                            }\r\n                          >\r\n                            {document.getDocumentById.status}\r\n                          </Button>\r\n\r\n                          <Popover\r\n                            open={!!statusList}\r\n                            anchorEl={statusList}\r\n                            onClose={handleCloseStatus}\r\n                            anchorOrigin={{\r\n                              vertical: \"bottom\",\r\n                              horizontal: \"right\",\r\n                            }}\r\n                            transformOrigin={{\r\n                              vertical: \"top\",\r\n                              horizontal: \"right\",\r\n                            }}\r\n                            PaperProps={{\r\n                              sx: {\r\n                                p: 0,\r\n                                mt: 1,\r\n                                ml: 0.75,\r\n                                width: 500,\r\n                              },\r\n                            }}\r\n                          >\r\n                            <List>\r\n                              {document.getDocumentById.referredTo.map(\r\n                                (ref) => (\r\n                                  <ListItem key={ref.office.id}>\r\n                                    <ListItemText\r\n                                      primary={ref.office.name}\r\n                                      secondary={\r\n                                        <Label\r\n                                          color={statusColor(\r\n                                            ref.status.category\r\n                                          )}\r\n                                        >\r\n                                          {capitalCase(ref.status.category)}\r\n                                        </Label>\r\n                                      }\r\n                                    />\r\n                                    <ListItemIcon>\r\n                                      <StatusButton\r\n                                        role={role}\r\n                                        status={ref.status.category}\r\n                                        officeId={parseInt(ref.office.id)}\r\n                                        referenceNum={\r\n                                          document.getDocumentById.referenceNum\r\n                                        }\r\n                                        onUpdate={() => refetch()}\r\n                                      />\r\n                                    </ListItemIcon>\r\n                                  </ListItem>\r\n                                )\r\n                              )}\r\n                            </List>\r\n                          </Popover>\r\n                        </>\r\n                      ) : (\r\n                        document.getDocumentById.referredTo.map((ref) => (\r\n                          <StatusButton\r\n                            role={role}\r\n                            status={ref.status.category}\r\n                            officeId={parseInt(ref.office.id)}\r\n                            referenceNum={document.getDocumentById.referenceNum}\r\n                            onUpdate={() => refetch()}\r\n                          />\r\n                        ))\r\n                      ))}\r\n\r\n                    <PDFDownloadLink\r\n                      document={<ReferenceSlip document={document} />}\r\n                      fileName={`${referenceNum}.pdf`}\r\n                    >\r\n                      {({ url, loading }) => (\r\n                        <Button\r\n                          onClick={() => window.open(url as string, \"_blank\")}\r\n                          variant=\"contained\"\r\n                          disabled={loading}\r\n                          endIcon={\r\n                            <Iconify icon=\"ant-design:export-outlined\" />\r\n                          }\r\n                        >\r\n                          Export\r\n                        </Button>\r\n                      )}\r\n                    </PDFDownloadLink>\r\n                  </Stack>\r\n\r\n                  <IconButton onClick={onClose} sx={{ width: 50, height: 50 }}>\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                </Stack>\r\n\r\n                <DocumentDetails\r\n                  role={role}\r\n                  officeId={officeId}\r\n                  documentId={document?.getDocumentById.referenceNum}\r\n                  receivedFrom={document?.getDocumentById.receivedFrom}\r\n                  referredTo={document?.getDocumentById.referredTo\r\n                    .map((ref) => ref.office.name)\r\n                    .join(\", \")}\r\n                  type={document?.getDocumentById.type?.label}\r\n                  purpose={document?.getDocumentById.purpose\r\n                    ?.map((p) => p.label)\r\n                    .join(\", \")}\r\n                  dateCreated={document?.getDocumentById.dateCreated}\r\n                  dateDue={document?.getDocumentById.dateDue}\r\n                  tag={document?.getDocumentById.tag}\r\n                  directorAssigned={document?.getDocumentById.directorAssigned.map(\r\n                    (officer) => ({\r\n                      uuid: officer.uuid,\r\n                      firstName: officer.firstName,\r\n                      lastName: officer.lastName,\r\n                      position: officer.position\r\n                        ? formatReferrals(officer.office?.name) +\r\n                          \" \" +\r\n                          officer.position?.label\r\n                        : \"\",\r\n                    })\r\n                  )}\r\n                  chiefAssigned={document?.getDocumentById.chiefAssigned.map(\r\n                    (officer) => ({\r\n                      uuid: officer.uuid,\r\n                      firstName: officer.firstName,\r\n                      lastName: officer.lastName,\r\n                      position: officer.position?.label,\r\n                    })\r\n                  )}\r\n                />\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={getError?.message || subscribeError?.message}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":["DIRECTOR_OPTIONS","value","Status","Referred","label","ForReview","ForRevision","ForCorrection","ForApproval","UpdateReport","Finished","CHIEF_OPTIONS","Submitted","StatusButton","_ref","officeId","status","referenceNum","role","onUpdate","width","showLabel","data","statuses","error","getError","useQuery","GET_STATUSES","fetchPolicy","updateStatus","updateError","useMutation","UPDATE_DOCUMENT_STATUS","setError","useState","currentStatus","setCurrentStatus","useEffect","handleStatusChange","async","_statuses$getDocument","statusId","getDocumentStatus","find","category","id","variables","parseInt","_jsxs","_Fragment","children","Role","Director","NotActionable","_jsx","TextField","name","select","undefined","variant","onChange","event","target","required","fullWidth","sx","map","option","MenuItem","Chief","Snackbar","severity","message","extractFileName","url","paths","split","length","FileManager","files","Box","file","List","dense","ListItem","ListItemIcon","ForlderIcon","ListItemText","primary","Link","href","config","readonly","toolbar","minHeight","maxHeight","buttons","uploader","process","imagesExtensions","withCredentials","format","method","prepareData","formData","Array","from","values","filter","obj","File","keys","forEach","key","delete","append","isSuccess","resp","filePath","path","baseurl","msg","console","log","style","background","color","CommentField","props","editor","useRef","content","setContent","formError","setFormError","recipientId","setRecipientId","createComment","CREATE_COMMENT","component","onSubmit","preventDefault","officerId","documentId","senderId","onComment","Stack","spacing","recipients","uuid","firstName","lastName","JoditEditor","ref","display","flexDirection","justifyContent","Button","type","endIcon","Iconify","icon","CommentCard","senderName","recipientName","useAppSelector","state","auth","pl","pr","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","direction","Avatar","charAt","join","Typography","AccordionDetails","DocumentDetails","receivedFrom","dateCreated","dateDue","referredTo","purpose","tag","directorAssigned","chiefAssigned","referrals","setReferrals","officers","GET_OFFICERS","assignOfficers","assignError","ASSIGN_OFFICERS","officer","Card","CardHeader","title","sm","md","overflowY","TableContainer","Table","size","TableBody","TableRow","TableCell","scope","noWrap","capitalCase","position","MultiSelect","selected","options","getOfficers","_officer$position","_officer$position2","description","officerIds","Date","toLocaleDateString","year","month","day","weekday","statusColor","formatReferrals","office","word","isNaN","toUpperCase","toString","DocumentDialog","_document$getDocument","_document$getDocument2","_document$getDocument3","open","onClose","theme","useTheme","statusList","setStatusList","document","refetch","GET_DOCUMENT_BY_ID","documentEvents","subscribeError","useSubscription","SUBSCRIBE_DOCUMENT_EVENTS","Dialog","maxWidth","DialogContent","Grid","container","item","xs","overflow","p","getDocumentById","subject","backgroundColor","palette","grey","borderRadius","comments","comment","sender","recipient","Divider","alignItems","Superuser","includes","onClick","currentTarget","Popover","anchorEl","handleCloseStatus","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","mt","ml","secondary","Label","PDFDownloadLink","ReferenceSlip","fileName","_ref2","loading","window","disabled","IconButton","height","CloseIcon","_officer$office"],"sourceRoot":""}