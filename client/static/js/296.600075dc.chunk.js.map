{"version":3,"file":"static/js/296.600075dc.chunk.js","mappings":"8MAeA,MAAMA,EAAmB,CACvB,CAAEC,MAAOC,EAAAA,GAAOC,SAAUC,MAAO,YACjC,CAAEH,MAAOC,EAAAA,GAAOG,UAAWD,MAAO,cAClC,CAAEH,MAAOC,EAAAA,GAAOI,YAAaF,MAAO,gBACpC,CAAEH,MAAOC,EAAAA,GAAOK,cAAeH,MAAO,kBACtC,CAAEH,MAAOC,EAAAA,GAAOM,YAAaJ,MAAO,gBACpC,CAAEH,MAAOC,EAAAA,GAAOO,aAAcL,MAAO,iBACrC,CAAEH,MAAOC,EAAAA,GAAOQ,SAAUN,MAAO,WAG7BO,EAAgB,CACpB,CAAEV,MAAOC,EAAAA,GAAOC,SAAUC,MAAO,YACjC,CAAEH,MAAOC,EAAAA,GAAOU,UAAWR,MAAO,aAClC,CAAEH,MAAOC,EAAAA,GAAOM,YAAaJ,MAAO,gBACpC,CAAEH,MAAOC,EAAAA,GAAOG,UAAWD,MAAO,cAClC,CAAEH,MAAOC,EAAAA,GAAOK,cAAeH,MAAO,mBAGzB,SAASS,EAAYC,GAgBhC,IAhBiC,SACnCC,EAAQ,OACRC,EAAM,aACNC,EAAY,KACZC,EAAI,SACJC,EAAQ,MACRC,EAAQ,IAAG,UACXC,GAAY,GASbP,EACC,MAAQQ,KAAMC,EAAUC,MAAOC,IAAaC,EAAAA,EAAAA,IAASC,EAAAA,GAAc,CACjEC,YAAa,cAERC,GAAgBL,MAAOM,KAAiBC,EAAAA,EAAAA,GAC7CC,EAAAA,KAGKR,EAAOS,IAAYC,EAAAA,EAAAA,UAAwB,OAC3CC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAiBhC,EAAAA,GAAOC,WAElEkC,EAAAA,EAAAA,YAAU,KACJrB,GAAQoB,EAAiBpB,EAAO,GACnC,CAACA,IAEJ,MAAMsB,EAAqBC,UAA6B,IAADC,EACrD,IAAKzB,EAAU,OAEf,MAAM0B,EAAmB,OAARlB,QAAQ,IAARA,GAEhB,QAFwBiB,EAARjB,EAAUmB,kBAAkBC,MAC1C3B,GAAWA,EAAO4B,WAAaA,WACjC,IAAAJ,OAFwB,EAARA,EAEdK,GAEH,IAAKJ,EAEH,YADAR,EAAS,2BAIUJ,EAAa,CAChCiB,UAAW,CACT/B,WACAE,eACAwB,SAAUM,SAASN,OAIZnB,MAAMc,EAAiBQ,GAE9BzB,GAAUA,GAAU,EAG1B,OACE6B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGhC,IAASiC,EAAAA,GAAKC,UAAYjB,IAAkBjC,EAAAA,GAAOmD,gBAClDC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,KAAK,SACLC,QAAM,EACNrD,MAAOiB,EAAY,cAAWqC,EAC9BC,QAAQ,WACR1D,MAAOkC,EACPyB,SAAWC,GAAUvB,EAAmBuB,EAAMC,OAAO7D,OACrD8D,UAAQ,EACRC,WAAS,EACTC,GAAI,CACF7C,MAAOA,GACP8B,SAEDlD,EAAiBkE,KAAKC,IACrBb,EAAAA,EAAAA,KAACc,EAAAA,EAAQ,CAAoBnE,MAAOkE,EAAOlE,MAAMiD,SAC9CiB,EAAO/D,OADK+D,EAAOlE,WAO3BiB,IAASiC,EAAAA,GAAKkB,OACblC,IAAkBjC,EAAAA,GAAOmD,eACzBlB,IAAkBjC,EAAAA,GAAOQ,WACvB4C,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,KAAK,SACLC,QAAM,EACNrD,MAAM,SACNuD,QAAQ,WACR1D,MAAOkC,EACPyB,SAAWC,GAAUvB,EAAmBuB,EAAMC,OAAO7D,OACrD8D,UAAQ,EACRC,WAAS,EAAAd,SAERvC,EAAcuD,KAAKC,IAClBb,EAAAA,EAAAA,KAACc,EAAAA,EAAQ,CAAoBnE,MAAOkE,EAAOlE,MAAMiD,SAC9CiB,EAAO/D,OADK+D,EAAOlE,YAO9BqD,EAAAA,EAAAA,KAACgB,EAAAA,GAAQ,CACPC,SAAS,QACTC,QAAShD,IAAiB,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAU+C,WAAsB,OAAX1C,QAAW,IAAXA,OAAW,EAAXA,EAAa0C,aAI5D,C,kPClIe,SAASC,EAAoB3D,GAUzC,IAV0C,WAC3C4D,EAAU,UACVC,EAAS,SACTC,EAAQ,aACRC,GAKoE/D,EAElE,OACEkC,EAAAA,EAAAA,MAAC8B,EAAAA,EAAO,CACNb,GAAI,CACFc,OAAQ,GACRC,QAAS,OACTC,eAAgB,gBAChBC,EAAIC,GAAUA,EAAMC,QAAQ,EAAG,EAAG,EAAG,IACrClC,SAAA,EAEFI,EAAAA,EAAAA,KAAC+B,EAAAA,EAAa,CACZpF,MAAOyE,EACPd,SAAUiB,EACVS,YAAY,YACZC,gBACEjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAc,CAACC,SAAS,QAAOvC,UAC9BI,EAAAA,EAAAA,KAACoC,EAAAA,GAAO,CACNC,KAAK,kBACL1B,GAAI,CAAE2B,MAAO,gBAAiBxE,MAAO,GAAI2D,OAAQ,WAMzD/B,EAAAA,EAAAA,MAAC6C,EAAAA,EAAK,CAACC,UAAU,MAAK5C,SAAA,EACpBI,EAAAA,EAAAA,KAACyC,EAAAA,EAAO,CAACC,MAAM,SAAQ9C,UACrBI,EAAAA,EAAAA,KAAC2C,EAAAA,EAAU,CAACC,QAAStB,EAAS1B,UAC5BI,EAAAA,EAAAA,KAACoC,EAAAA,GAAO,CAACC,KAAK,iCAIlBrC,EAAAA,EAAAA,KAACyC,EAAAA,EAAO,CAACC,MAAM,UAAS9C,UACtBI,EAAAA,EAAAA,KAAC2C,EAAAA,EAAU,CAACC,QAASvB,EAAUzB,UAC7BI,EAAAA,EAAAA,KAACoC,EAAAA,GAAO,CAACC,KAAK,yBAM5B,C,uBCjDe,SAASQ,EAAiBrF,GAkBrC,IAlBsC,MACtCsF,EAAK,QACLC,EAAO,SACPtF,EAAQ,UACRuF,EAAS,cACTC,GAaHzF,EAMC,OACEwC,EAAAA,EAAAA,KAACkD,EAAAA,EAAS,CAAAtD,UACRF,EAAAA,EAAAA,MAACyD,EAAAA,EAAQ,CAAAvD,SAAA,MACOQ,IAAb3C,IAA0BuC,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,IAEpCJ,EAAUpC,KAAKyC,IACdrD,SAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAERE,MAAOD,EAASC,OAAS,OACzBC,cAAeR,IAAYM,EAAS9D,IAAKuD,EACzCnC,GAAI,CAAE7C,MAAOuF,EAASvF,MAAO0F,SAAUH,EAASG,UAAW5D,UAE3DF,EAAAA,EAAAA,MAAC+D,EAAAA,EAAc,CACbC,cAAY,EACZC,OAAQZ,IAAYM,EAAS9D,GAC7BiD,UAAWO,IAAYM,EAAS9D,GAAKuD,EAAQ,MAC7CF,SApBXgB,EAoBsCP,EAAS9D,GApBdgB,IAChC0C,EAAc1C,EAAOqD,EAAS,GAmBoBhE,SAAA,CAEvCyD,EAASvG,MACTiG,IAAYM,EAAS9D,IACpBS,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CAAClD,GAAI,CACLmD,OAAQ,EACRC,QAAS,EACTC,QAAS,EACTlG,MAAO,MACP2D,OAAQ,MACRwC,SAAU,SACV9B,SAAU,WACV+B,WAAY,SACZC,KAAM,iBACRvE,SACW,SAAVkD,EAAmB,oBAAsB,qBAE1C,SA1BDO,EAAS9D,IAXvBqE,KAwCM,QAIT,C,yEC7De,SAASQ,EAAa5G,GAYjC,IAZkC,SAClC6G,EAAQ,UACRC,EAAS,aACT3G,GASHH,EACG,OACIwC,EAAAA,EAAAA,KAACmD,EAAAA,EAAQ,CAAAvD,UACLI,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACmB,MAAO,CAAEC,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAE9E,UAC9DI,EAAAA,EAAAA,KAAC2E,EAAAA,EAAQ,CAACC,GAAIP,EAAUQ,QAAQ,OAAOC,eAAa,EAAAlF,UAChDF,EAAAA,EAAAA,MAACmE,EAAAA,EAAG,CAAClD,GAAI,CAAEoD,OAAQ,EAAGgB,UAAW,IAAKC,UAAW,QAASpF,SAAA,EAC1DI,EAAAA,EAAAA,KAACiF,EAAAA,EAAU,CAAC5E,QAAQ,KAAK6E,cAAY,EAACC,UAAU,MAAKvF,SAAC,uBAGtDF,EAAAA,EAAAA,MAAC0F,EAAAA,EAAK,CAAC,aAAW,YAAWxF,SAAA,EACzBI,EAAAA,EAAAA,KAACkD,EAAAA,EAAS,CAAAtD,UACVF,EAAAA,EAAAA,MAACyD,EAAAA,EAAQ,CAAAvD,SAAA,EACLI,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAAAxD,SAAC,YACXI,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAAAxD,SAAC,YACXI,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACE,MAAM,gBAGrBtD,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CAAAzF,SACT0E,EAAU1D,KAAK0E,IACZ5F,EAAAA,EAAAA,MAACyD,EAAAA,EAAQ,CAAAvD,SAAA,EACLI,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAAC+B,UAAU,KAAKI,MAAM,MAAK3F,UACjCI,EAAAA,EAAAA,KAACiF,EAAAA,EAAU,CAAC5E,QAAQ,YAAYmF,QAAM,EAAA5F,SACjC0F,EAAIG,YAGbzF,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAAAxD,UACNI,EAAAA,EAAAA,KAACzC,EAAAA,EAAY,CACTE,SAAU6H,EAAI/F,GACd5B,aAAcA,EACdC,KAAMiC,EAAAA,GAAKC,SACXpC,OAAQ4H,EAAI5H,OACZI,MAAO,IACPC,WAAW,QAbRuH,EAAI/F,mBAyB/C,C,cCpDA,SAASmG,EAAYhI,GACnB,MAAM4B,EAAW5B,EAAOiI,cACxB,OAAIrG,EAASsG,SAAS,YAActG,EAASsG,SAAS,YAC7C,UACAtG,EAASsG,SAAS,YAAoB,UACnC,MACd,CAEe,SAASC,EAAgBrI,GAYpC,IAZqC,SACvCC,EAAQ,SACRqI,EAAQ,OACRC,EAAM,OACNC,EAAM,SACNC,GAODzI,EACC,MAAO0I,EAAMC,IAAWvH,EAAAA,EAAAA,UAAmC,OACpDwH,EAAQC,IAAazH,EAAAA,EAAAA,WAAkB,IACvCyF,EAAUiC,IAAe1H,EAAAA,EAAAA,WAAkB,GAE5C2H,EAAsBhG,IAC1BwF,EAAOxF,EAAOuF,EAASnI,cACvBwI,EAAQ,KAAK,EAsBf,OACEzG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACyD,EAAAA,EAAQ,CAACqD,OAAK,EAACC,UAAW,EAAG7I,KAAK,WAAUgC,SAAA,MAE7BQ,IAAb3C,IACCuC,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAAAxD,UACRI,EAAAA,EAAAA,KAAC2C,EAAAA,EAAU,CACT,aAAW,aACX+D,KAAK,QACL9D,QAASA,IAAM0D,GAAajC,GAAUzE,SAErCyE,GAAWrE,EAAAA,EAAAA,KAACoC,EAAAA,GAAO,CAACC,KAAK,6BAA+BrC,EAAAA,EAAAA,KAACoC,EAAAA,GAAO,CAACC,KAAK,sCAK7ErC,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAAC+B,UAAU,KAAKI,MAAM,MAAK3F,UACnCI,EAAAA,EAAAA,KAAC2G,EAAAA,EAAM,CAAC/D,QAAS2D,EAAmB3G,UAClCI,EAAAA,EAAAA,KAACiF,EAAAA,EAAU,CAAC5E,QAAQ,YAAYmF,QAAM,EAAA5F,SAClC,IAAGkG,EAASnI,sBAKpB+B,EAAAA,EAAAA,MAAC0D,EAAAA,EAAS,CAACzC,GAAI,CAAE6C,SAAU,KAAM5D,SAAA,EAC/BI,EAAAA,EAAAA,KAACiF,EAAAA,EAAU,CAAC5E,QAAQ,QAAOT,SACxBkG,EAASc,QAAQC,OAAS,IACtB,GAAEf,EAASc,QAAQE,MAAM,EAAG,UAC7BhB,EAASc,UAEdd,EAASiB,MAAO/G,EAAAA,EAAAA,KAACgH,EAAAA,GAAK,CAAC1E,MAAM,OAAM1C,SAAEkG,EAASiB,UAGjD/G,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACE,MAAM,QAAQ3C,GAAI,CAAE6C,SAAU,KAAM5D,SAC5CkG,EAASmB,eAGZjH,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACE,MAAM,QAAO1D,SAAEkG,EAASoB,gBAEnClH,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACE,MAAM,QAAQ3C,GAAI,CAAEwG,SAAU,KAAMvH,SAC5CkG,EAASsB,cAGZpH,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACE,MAAM,QAAQ3C,GAAI,CAAE7C,MAAO,IAAK8B,UACzCI,EAAAA,EAAAA,KAACgH,EAAAA,GAAK,CAAC1E,MAAOoD,EAAYI,EAASpI,QAAQkC,UACxCyH,EAAAA,EAAAA,IAAYvB,EAASpI,aAI1BsC,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACE,MAAM,QAAQ3C,GAAI,CAAE7C,MAAO,IAAK8B,UACzCI,EAAAA,EAAAA,KAAC2C,EAAAA,EAAU,CAACC,QA1DIrC,IACtB4F,EAAQ5F,EAAM+G,cAAc,EAyDc1H,UAClCI,EAAAA,EAAAA,KAACoC,EAAAA,GAAO,CAACC,KAAK,uCAKNjC,IAAb3C,IACCuC,EAAAA,EAAAA,KAACuH,EAAAA,SAAQ,CAAA3H,UACPI,EAAAA,EAAAA,KAACoE,EAAa,CACZC,SAAUA,EACV1G,aAAcmI,EAASnI,aACvB2G,UAAWwB,EAAS0B,eAK1B9H,EAAAA,EAAAA,MAAC+H,EAAAA,GAAO,CACNvB,OAAQA,EACRwB,SAAUxB,EACVyB,QAzEkBC,KACtBzB,EAAQ,KAAK,EAyET0B,aAAc,CAAEC,SAAU,MAAOC,WAAY,QAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SAChDE,WAAY,CACVtH,GAAI,CAAE7C,MAAO,MACb8B,SAAA,EAEFF,EAAAA,EAAAA,MAACoB,EAAAA,EAAQ,CAAC8B,QAAS2D,EAAmB3G,SAAA,EACpCI,EAAAA,EAAAA,KAACoC,EAAAA,GAAO,CAACC,KAAK,2BAA2B1B,GAAI,CAAEuH,GAAI,KAAO,eAI9C9H,IAAb3C,IACCiC,EAAAA,EAAAA,MAACoB,EAAAA,EAAQ,CAAC8B,QArGUrC,IAC1ByF,EAAOzF,EAAOuF,EAASnI,cACvBwI,EAAQ,KAAK,EAmG+BvG,SAAA,EACpCI,EAAAA,EAAAA,KAACoC,EAAAA,GAAO,CAACC,KAAK,gBAAgB1B,GAAI,CAAEuH,GAAI,KAAO,eAKrC9H,IAAb3C,IACCiC,EAAAA,EAAAA,MAACoB,EAAAA,EAAQ,CACP8B,QAASA,IAAMyD,GAAU,GACzB1F,GAAI,CAAE2B,MAAO,cAAe1C,SAAA,EAE5BI,EAAAA,EAAAA,KAACoC,EAAAA,GAAO,CAACC,KAAK,sBAAsB1B,GAAI,CAAEuH,GAAI,KAAO,gBAM3DlI,EAAAA,EAAAA,KAACmI,EAAAA,GAAY,CACXjC,KAAME,EACNuB,QAASA,IAAMtB,GAAU,GACzBJ,SApHwB1F,IAC5B0F,EAAS1F,EAAOuF,EAASnI,cACzBwI,EAAQ,MACRE,GAAU,EAAM,MAqHpB,C,sDCxJA,MAAMrF,GAAWoH,EAAAA,EAAAA,OAAK,IAAM,yCACtBC,GAAeD,EAAAA,EAAAA,OAAK,IAAM,yCAiBzB,SAASE,EAAgBC,GAC9B,OAAOA,EACJ3H,KAAK6E,GACGA,EACJ+C,MAAM,KACN5H,KAAK6H,GACAC,MAAMjJ,SAASgJ,IAAeA,EAAKE,OAAO,GAAGC,cACpC,IAAGnJ,SAASgJ,GAAMI,eAEhCC,KAAK,MAETA,KAAK,KACV,CAEA,SAASC,EAAwBC,EAAMC,EAAMlG,GAC3C,OAAIkG,EAAElG,GAAWiG,EAAEjG,IACT,EAENkG,EAAElG,GAAWiG,EAAEjG,GACV,EAEF,CACT,CA+Be,SAASmG,EAAa1L,GAYjC,IAZkC,UACpC2L,EAAS,SACT1L,EAAQ,UACR4D,EAAS,OACT0E,EAAM,OACNC,GAODxI,EACC,MACEQ,KAAMoL,EACNlL,MAAOC,EAAQ,QACfkL,IACEjL,EAAAA,EAAAA,IAASkL,EAAAA,GAAe,CAC1B9J,UAAW,CACT2J,gBAGInL,KAAMuL,EAAcrL,MAAOsL,IAAmBC,EAAAA,EAAAA,GACpDC,EAAAA,KAGKC,EAAQC,IAAahL,EAAAA,EAAAA,WAAkB,IACvCiL,EAASC,IAAclL,EAAAA,EAAAA,UAA4B,KACnDmL,EAAMC,IAAWpL,EAAAA,EAAAA,UAAiB,IAClCkE,EAAOmH,IAAYrL,EAAAA,EAAAA,UAAgB,QACnCmE,EAASmH,IAActL,EAAAA,EAAAA,UAA4B,iBACnDwC,EAAY+I,IAAiBvL,EAAAA,EAAAA,UAAiB,KAC9CwL,EAAaC,IAAkBzL,EAAAA,EAAAA,UAAiB,KAChD0L,EAAcC,IAAmB3L,EAAAA,EAAAA,UAAwB,KAEzD4L,GAAkBtM,MAAOuM,KAAiBhM,EAAAA,EAAAA,GAAYiM,EAAAA,KAE7D3L,EAAAA,EAAAA,YAAU,KACJqK,GACFmB,EACEnB,EAAUuB,aAAa/J,KAAKgK,IAAG,IAAAC,EAAA,MAAM,CACnClN,aAAciN,EAAIjN,aAClBiJ,QAASgE,EAAIhE,QACbM,aAAc0D,EAAI1D,aAClBE,WACEwD,EAAIE,iBAAiBjE,OAAS,EAC1B+D,EAAIE,iBACDlK,KAAKmK,GAAa,GAAEA,EAAQC,aAAaD,EAAQE,aACjDnC,KAAK,MACRR,EAAgBsC,EAAIxD,WAAWxG,KAAK0E,GAAQA,EAAIG,OAAOvF,QAC7D+G,YAAa,IAAIiE,KAAKN,EAAI3D,aAAakE,wBAAmB/K,EAAW,CACnEgL,MAAO,QACPC,IAAK,UACLC,KAAM,YAER5N,OAAQD,EACH,IAGE,QAFDoN,EAAAD,EAAIxD,WAAW/H,MACZiG,GAAQ7F,SAAS6F,EAAIG,OAAOlG,MAAQ9B,WACtC,IAAAoN,OAAA,EAFDA,EAEGnN,OAAO4B,WAAY,aAExBsL,EAAIlN,OACRqJ,IAAK6D,EAAI7D,KAAMM,EAAAA,EAAAA,IAAYuD,EAAI7D,KAAO,GACtCS,UAAWoD,EAAIxD,WAAWxG,KAAK0E,IAAG,CAChC/F,GAAIE,SAAS6F,EAAIG,OAAOlG,IACxBkG,OAAQH,EAAIG,OAAOvF,KACnBxC,OAAQ4H,EAAI5H,OAAO4B,aAEtB,IAEL,GACC,CAAC8J,EAAW3L,KAEfsB,EAAAA,EAAAA,YAAU,KACJwK,GAAcF,GAAS,GAC1B,CAACE,EAAcF,IAElB,MAAMkC,GAAcC,EAAAA,EAAAA,UAClB,IA7FJ,SACEC,EACAC,GAEA,MAAMC,EAAiBF,EAAM7K,KAAI,CAACgL,EAAIC,IAAU,CAACD,EAAIC,KAQrD,OAPAF,EAAeG,MAAK,CAAC9C,EAAGC,KACtB,MAAMnG,EAAQ4I,EAAW1C,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVnG,EACKA,EAEFkG,EAAE,GAAKC,EAAE,EAAE,IAEb0C,EAAe/K,KAAKgL,GAAOA,EAAG,IACvC,CAiFMG,CACEzB,EAAa0B,QACVlG,IACEA,EAASnI,aAAaiI,SAASxE,IAC9B0E,EAASc,QAAQhB,SAASxE,IACJ,IAAtBA,EAAWyF,UACZgD,EAAQjE,SAASE,EAASpI,OAAOuO,QAAQ,OAAQ,MAChDpC,EAAQjE,SAASE,EAASiB,MACP,IAAnB8C,EAAQhD,UAlHtB,SACE/D,EACAC,GAKA,MAAiB,SAAVD,EACH,CAACkG,EAAGC,IAAMF,EAAqBC,EAAGC,EAAGlG,GACrC,CAACiG,EAAGC,KAAOF,EAAqBC,EAAGC,EAAGlG,EAC5C,CA0GQmJ,CAAcpJ,EAAOC,IACrB+D,MAAMiD,EAAOK,EAAaL,EAAOK,EAAcA,IACnD,CAACE,EAAclJ,EAAY0B,EAAOC,EAASgH,EAAMK,EAAaP,IA+B1DsC,EAAaA,CAAC5L,EAAkChB,IACpDwG,EAAOxG,GACH6M,GAAaA,CAAC7L,EAAkChB,IACpDyG,EAAOzG,GAEH8M,GAAepN,MAAOsB,EAAkChB,WACtDiL,EAAe,CACnBhL,UAAW,CACT7B,aAAc4B,WAIZ8J,GAAS,EA6BjB,OACE3J,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAC4M,EAAAA,EAAI,CAAA1M,SAAA,EACHI,EAAAA,EAAAA,KAACuM,EAAY,CACXnL,WAAYA,EACZC,UAVcpC,gBACdoK,IACNhI,GAAW,EASLE,aA7DoBhB,IAC1ByJ,EAAQ,GACRG,EAAc5J,EAAMC,OAAO7D,MAAM,EA4D3B2E,SAAUA,IAAMsI,GAAWD,MAG7B3J,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CAAClD,GAAI,CAAEsD,SAAU,QAASrE,UAC5BI,EAAAA,EAAAA,KAACwM,EAAAA,EAAc,CAAA5M,UACbF,EAAAA,EAAAA,MAAC0F,EAAAA,EAAK,CAACzE,GAAI,CAAE6C,SAAU,KAAM5D,SAAA,EAC3BI,EAAAA,EAAAA,KAACkD,EAAS,CACRJ,MAAOA,EACPC,QAASA,EACTtF,SAAUA,EACVwF,cAnEYwJ,CACxBlM,EACAqD,KAGAqG,EADclH,IAAYa,GAAsB,QAAVd,EACrB,OAAS,OAC1BoH,EAAWtG,EAAS,EA8DRZ,UAAW,CACT,CAAEzD,GAAI,eAAgBzC,MAAO,aAC7B,CAAEyC,GAAI,UAAWzC,MAAO,UAAWgB,MAAO,KAC1C,CAAEyB,GAAI,cAAezC,MAAO,OAAQwG,MAAO,SAC3C,CACE/D,GAAI,eACJzC,MAAO,gBACPwG,MAAO,SAET,CAAE/D,GAAI,aAAczC,MAAO,cAAewG,MAAO,SACjD,CAAE/D,GAAI,SAAUzC,MAAO,SAAUwG,MAAO,QAASxF,MAAO,IACxD,CAAEyB,GAAI,MAAO+D,MAAO,QAASxF,MAAO,QAIxC4B,EAAAA,EAAAA,MAAC2F,EAAAA,EAAS,CAAAzF,SAAA,CACP2L,EAAY3K,KAAKkF,IAChB9F,EAAAA,EAAAA,KAACmD,EAAQ,CAEP1F,SAAUA,EACVqI,SAAUA,EACVC,OAAQoG,EACRnG,OAAQoG,GACRnG,SAAUoG,IALLvG,EAASnI,gBASM,IAAvB4N,EAAY1E,SACX7G,EAAAA,EAAAA,KAAC0M,EAAAA,EAAa,CAAC/L,GAAI,CAAEc,OAAQ,IAAK7B,UAChCI,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACE,MAAM,SAASoB,QAAS,EAAE9E,SAAC,mCAUlDI,EAAAA,EAAAA,KAAC2M,EAAAA,EAAe,CACd5C,KAAMA,EACN5E,UAAU,MACVyH,MAAOtC,EAAazD,OACpBuD,YAAaA,EACbyC,aAnIiBC,CACvBvM,EACAwJ,KAEAC,EAAQD,EAAK,EAgIPgD,mBAAoB,CAAC,GAAI,GAAI,IAC7BC,oBA7HNzM,IAEAyJ,EAAQ,GACRK,EAAe5K,SAASc,EAAMC,OAAO7D,MAAO,IAAI,QA8H9CqD,EAAAA,EAAAA,KAACuH,EAAAA,SAAQ,CAAA3H,UACPI,EAAAA,EAAAA,KAACqI,EAAY,CACXnC,KAAMyD,EACNsD,SAAUpD,EACVvI,SAlGc3E,IACpB,MAAMuQ,EAAgBrD,EAAQsD,QAAQxQ,GACtC,IAAIyQ,EAAgC,IAEb,IAAnBF,EACFE,EAAaA,EAAWC,OAAOxD,EAASlN,GACb,IAAlBuQ,EACTE,EAAaA,EAAWC,OAAOxD,EAAQ/C,MAAM,IACpCoG,IAAkBrD,EAAQhD,OAAS,EAC5CuG,EAAaA,EAAWC,OAAOxD,EAAQ/C,MAAM,GAAI,IACxCoG,EAAgB,IACzBE,EAAaA,EAAWC,OACtBxD,EAAQ/C,MAAM,EAAGoG,GACjBrD,EAAQ/C,MAAMoG,EAAgB,KAIlCpD,EAAWsD,GACXpD,EAAQ,EAAE,EAiFJrC,QAASA,IAAMiC,GAAWD,GAC1B2D,QAASA,IAAMxD,EAAW,IAC1BD,QAAS,CACP,CACE3J,KAAM,SACNqN,QAASC,MAAMC,KACb,IAAIC,IAAIpD,EAAa1J,KAAKgK,GAAQA,EAAIlN,OAAOuO,QAAQ,OAAQ,QAC7DrL,KAAKlD,IAAM,CACXf,MAAOe,EACPZ,OAAOuK,EAAAA,EAAAA,IAAY3J,EAAOuO,QAAQ,OAAQ,UAG9C,CACE/L,KAAM,OACNqN,QAASC,MAAMC,KACb,IAAIC,IACFpD,EAAa0B,QAAQpB,GAAQA,EAAI7D,MAAKnG,KAAKgK,GAAQA,EAAI7D,QAEzDnG,KAAKmG,IAAG,CACRpK,MAAOoK,EACPjK,OAAOuK,EAAAA,EAAAA,IAAYN,cAO7B/G,EAAAA,EAAAA,KAACuH,EAAAA,SAAQ,CAAA3H,UACPI,EAAAA,EAAAA,KAACgB,EAAQ,CACPC,SAAS,QACTC,SACU,OAAR/C,QAAQ,IAARA,OAAQ,EAARA,EAAU+C,WAAyB,OAAdsI,QAAc,IAAdA,OAAc,EAAdA,EAAgBtI,WAAsB,OAAXuJ,QAAW,IAAXA,OAAW,EAAXA,EAAavJ,eAMzE,C","sources":["sections/documents/document-dialog/StatusButton.tsx","sections/documents/table/Toolbar.tsx","sections/documents/table/Head.tsx","sections/documents/table/Collapse.tsx","sections/documents/table/Row.tsx","sections/documents/table/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nimport { Snackbar } from \"../../../components\";\r\n\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  GET_STATUSES,\r\n  UPDATE_DOCUMENT_STATUS,\r\n} from \"../../../graphql/documents\";\r\nimport { Role, Status } from \"../../../__generated__/graphql\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DIRECTOR_OPTIONS = [\r\n  { value: Status.Referred, label: \"Referred\" },\r\n  { value: Status.ForReview, label: \"For Review\" },\r\n  { value: Status.ForRevision, label: \"For Revision\" },\r\n  { value: Status.ForCorrection, label: \"For Correction\" },\r\n  { value: Status.ForApproval, label: \"For Approval\" },\r\n  { value: Status.UpdateReport, label: \"Update Report\" },\r\n  { value: Status.Finished, label: \"Closed\" }\r\n];\r\n\r\nconst CHIEF_OPTIONS = [\r\n  { value: Status.Referred, label: \"Referred\" },\r\n  { value: Status.Submitted, label: \"Submitted\" },\r\n  { value: Status.ForApproval, label: \"For Approval\" },\r\n  { value: Status.ForReview, label: \"For Review\" },\r\n  { value: Status.ForCorrection, label: \"For Correction\" }\r\n];\r\n\r\nexport default function StatusButton({\r\n  officeId,\r\n  status,\r\n  referenceNum,\r\n  role,\r\n  onUpdate,\r\n  width = 150,\r\n  showLabel = true\r\n}: {\r\n  officeId?: number;\r\n  status?: Status;\r\n  referenceNum: string;\r\n  role: Role;\r\n  onUpdate?: () => void;\r\n  width?: number;\r\n  showLabel?: boolean;\r\n}) {\r\n  const { data: statuses, error: getError } = useQuery(GET_STATUSES, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n  const [updateStatus, { error: updateError }] = useMutation(\r\n    UPDATE_DOCUMENT_STATUS\r\n  );\r\n\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [currentStatus, setCurrentStatus] = useState<string>(Status.Referred);\r\n\r\n  useEffect(() => {\r\n    if (status) setCurrentStatus(status);\r\n  }, [status]);\r\n\r\n  const handleStatusChange = async (category: string) => {\r\n    if (!officeId) return;\r\n\r\n    const statusId = statuses?.getDocumentStatus.find(\r\n      (status) => status.category === category\r\n    )?.id;\r\n\r\n    if (!statusId) {\r\n      setError(\"Status not found\");\r\n      return;\r\n    }\r\n\r\n    const result = await updateStatus({\r\n      variables: {\r\n        officeId,\r\n        referenceNum,\r\n        statusId: parseInt(statusId),\r\n      },\r\n    });\r\n\r\n    if (result.data) setCurrentStatus(category);\r\n\r\n    if (onUpdate) onUpdate();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {role === Role.Director && currentStatus !== Status.NotActionable && (\r\n        <TextField\r\n          name=\"status\"\r\n          select\r\n          label={showLabel ? \"Status\" : undefined}\r\n          variant=\"outlined\"\r\n          value={currentStatus}\r\n          onChange={(event) => handleStatusChange(event.target.value)}\r\n          required\r\n          fullWidth\r\n          sx={{\r\n            width: width,\r\n          }}\r\n        >\r\n          {DIRECTOR_OPTIONS.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      )}\r\n\r\n      {role === Role.Chief &&\r\n        currentStatus !== Status.NotActionable &&\r\n        currentStatus !== Status.Finished && (\r\n          <TextField\r\n            name=\"status\"\r\n            select\r\n            label=\"Status\"\r\n            variant=\"outlined\"\r\n            value={currentStatus}\r\n            onChange={(event) => handleStatusChange(event.target.value)}\r\n            required\r\n            fullWidth\r\n          >\r\n            {CHIEF_OPTIONS.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        )}\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={error || getError?.message || updateError?.message}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport { Iconify } from '../../../components';\r\n\r\nexport default function DocumentTableToolbar({\r\n  filterName,\r\n  onRefresh,\r\n  onFilter,\r\n  onFilterName \r\n}: { \r\n  filterName: string, \r\n  onRefresh: () => void,\r\n  onFilter: () => void,\r\n  onFilterName: (event: React.ChangeEvent<HTMLInputElement>) => void }\r\n) {\r\n    return (\r\n      <Toolbar\r\n        sx={{\r\n          height: 96,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          p: (theme) => theme.spacing(0, 1, 0, 3)\r\n        }}\r\n      >\r\n        <OutlinedInput\r\n          value={filterName}\r\n          onChange={onFilterName}\r\n          placeholder=\"Search...\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Iconify\r\n                icon=\"eva:search-fill\"\r\n                sx={{ color: 'text.disabled', width: 20, height: 20 }}\r\n              />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n  \r\n        <Stack direction='row'>\r\n          <Tooltip title=\"Filter\">\r\n            <IconButton onClick={onFilter}>\r\n              <Iconify icon=\"fluent:filter-20-filled\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Refresh\">\r\n            <IconButton onClick={onRefresh}>\r\n              <Iconify icon=\"mdi:refresh\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Stack>\r\n      </Toolbar>\r\n    );\r\n}\r\n","import Box from '@mui/material/Box';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\n\r\nimport { DocumentRow } from '.';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DocumentTableHead({\r\n    order,\r\n    orderBy,\r\n    officeId,\r\n    headLabel,\r\n    onRequestSort\r\n}: {\r\n    officeId?: number,\r\n    order: \"asc\" | \"desc\",\r\n    orderBy: string,\r\n    headLabel: { \r\n        id: keyof DocumentRow, \r\n        label?: string, \r\n        width?: number,\r\n        minWidth?: number,\r\n        align?: \"center\" | \"left\" | \"right\" | \"justify\" | \"inherit\" \r\n    }[],\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof DocumentRow) => void\r\n}) {\r\n  const createSortHandler =\r\n  (property: keyof DocumentRow) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {officeId === undefined && <TableCell />}\r\n\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box sx={{\r\n                    border: 0,\r\n                    margin: -1,\r\n                    padding: 0,\r\n                    width: '1px',\r\n                    height: '1px',\r\n                    overflow: 'hidden',\r\n                    position: 'absolute',\r\n                    whiteSpace: 'nowrap',\r\n                    clip: 'rect(0 0 0 0)',\r\n                }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}","import Box from '@mui/material/Box';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport StatusButton from '../document-dialog/StatusButton';\r\nimport { Role, Status } from '../../../__generated__/graphql';\r\n\r\n\r\nexport default function CollapseTable({\r\n    collapse,\r\n    refferals,\r\n    referenceNum\r\n}: {\r\n    collapse: boolean;\r\n    refferals: {\r\n        id: number;\r\n        office: string,\r\n        status: Status\r\n    }[];\r\n    referenceNum: string;\r\n}) {\r\n    return (\r\n        <TableRow>\r\n            <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\r\n                <Collapse in={collapse} timeout=\"auto\" unmountOnExit>\r\n                    <Box sx={{ margin: 1, maxHeight: 500, overflowY: 'auto' }}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                        Receiving Offices\r\n                    </Typography>\r\n                    <Table aria-label=\"purchases\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Office</TableCell>\r\n                            <TableCell>Status</TableCell>\r\n                            <TableCell align=\"right\" />\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {refferals.map((ref) => (\r\n                            <TableRow key={ref.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <Typography variant=\"subtitle1\" noWrap>\r\n                                        {ref.office}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <StatusButton \r\n                                        officeId={ref.id}\r\n                                        referenceNum={referenceNum}\r\n                                        role={Role.Director}\r\n                                        status={ref.status}\r\n                                        width={200}\r\n                                        showLabel={false}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </Box>\r\n                </Collapse>\r\n            </TableCell>\r\n      </TableRow>\r\n    );\r\n}","import { useState, Suspense } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport CollapseTable from \"./Collapse\";\r\nimport { DocumentRow } from \".\";\r\nimport { Label, Iconify, DeleteDialog } from \"../../../components\";\r\nimport { capitalCase } from \"change-case\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction statusColor(status: string) {\r\n  const category = status.toLowerCase();\r\n  if (category.includes(\"ongoing\") || category.includes(\"referred\"))\r\n    return \"warning\";\r\n  else if (category.includes(\"finished\")) return \"success\";\r\n  else return \"info\";\r\n}\r\n\r\nexport default function DocumentTableRow({\r\n  officeId,\r\n  document,\r\n  onView,\r\n  onEdit,\r\n  onDelete,\r\n}: {\r\n  officeId?: number;\r\n  document: DocumentRow;\r\n  onView: (event: React.MouseEvent<unknown>, id: string) => void;\r\n  onEdit: (event: React.MouseEvent<unknown>, id: string) => void;\r\n  onDelete: (event: React.MouseEvent<unknown>, id: string) => void;\r\n}) {\r\n  const [open, setOpen] = useState<HTMLButtonElement | null>(null);\r\n  const [dialog, setDialog] = useState<boolean>(false);\r\n  const [collapse, setCollapse] = useState<boolean>(false);\r\n\r\n  const handleViewDocument = (event: React.MouseEvent<unknown>) => {\r\n    onView(event, document.referenceNum);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleEditDocument = (event: React.MouseEvent<unknown>) => {\r\n    onEdit(event, document.referenceNum);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleDeleteDocument = (event: React.MouseEvent<unknown>) => {\r\n    onDelete(event, document.referenceNum);\r\n    setOpen(null);\r\n    setDialog(false);\r\n  };\r\n\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover tabIndex={-1} role=\"checkbox\">\r\n\r\n        {officeId === undefined && (\r\n          <TableCell>\r\n            <IconButton\r\n              aria-label=\"expand row\"\r\n              size=\"small\"\r\n              onClick={() => setCollapse(!collapse)}\r\n            >\r\n              {collapse ? <Iconify icon=\"ic:baseline-expand-less\" /> : <Iconify icon=\"material-symbols:expand-more\" />}\r\n            </IconButton>\r\n          </TableCell>\r\n        )}\r\n\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          <Button onClick={handleViewDocument}>\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {`#${document.referenceNum}`}\r\n            </Typography>\r\n          </Button>\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ minWidth: 250 }}>\r\n          <Typography variant=\"body2\">\r\n            {document.subject.length > 255\r\n              ? `${document.subject.slice(0, 255)}...`\r\n              : document.subject}\r\n          </Typography>\r\n          {document.tag && <Label color=\"info\">{document.tag}</Label>}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ minWidth: 150 }}>\r\n          {document.dateCreated}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\">{document.receivedFrom}</TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ maxWidth: 200 }}>\r\n          {document.referredTo}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 50 }}>\r\n          <Label color={statusColor(document.status)}>\r\n            {capitalCase(document.status)}\r\n          </Label>\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 30 }}>\r\n          <IconButton onClick={handleOpenMenu}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      {officeId === undefined && (\r\n        <Suspense>\r\n          <CollapseTable\r\n            collapse={collapse}\r\n            referenceNum={document.referenceNum}\r\n            refferals={document.referrals}\r\n          />\r\n        </Suspense>\r\n      )}\r\n\r\n      <Popover\r\n        open={!!open}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        PaperProps={{\r\n          sx: { width: 140 },\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleViewDocument}>\r\n          <Iconify icon=\"fluent-mdl2:review-solid\" sx={{ mr: 2 }} />\r\n          View\r\n        </MenuItem>\r\n\r\n        {officeId === undefined && (\r\n          <MenuItem onClick={handleEditDocument}>\r\n            <Iconify icon=\"eva:edit-fill\" sx={{ mr: 2 }} />\r\n            Edit\r\n          </MenuItem>\r\n        )}\r\n\r\n        {officeId === undefined && (\r\n          <MenuItem\r\n            onClick={() => setDialog(true)}\r\n            sx={{ color: \"error.main\" }}\r\n          >\r\n            <Iconify icon=\"eva:trash-2-outline\" sx={{ mr: 2 }} />\r\n            Delete\r\n          </MenuItem>\r\n        )}\r\n      </Popover>\r\n\r\n      <DeleteDialog\r\n        open={dialog}\r\n        onClose={() => setDialog(false)}\r\n        onDelete={handleDeleteDocument}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect, useMemo, lazy, Suspense } from \"react\";\r\n\r\nimport Card from \"@mui/material/Card\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableEmptyRow from \"@mui/material/TableRow\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableToolbar from \"./Toolbar\";\r\nimport TableHead from \"./Head\";\r\nimport TableRow from \"./Row\";\r\n\r\nimport { capitalCase } from \"change-case\";\r\nimport { useMutation, useQuery, useSubscription } from \"@apollo/client\";\r\nimport { GET_DOCUMENTS, DELETE_DOCUMENT } from \"../../../graphql/documents\";\r\nimport { SUBSCRIBE_OFFICE_EVENTS } from \"../../../graphql/users\";\r\nimport { Status } from \"../../../__generated__/graphql\";\r\n\r\nconst Snackbar = lazy(() => import(\"../../../components/Snackbar\"));\r\nconst FilterDrawer = lazy(() => import(\"../../../components/Filter\"));\r\n\r\nexport interface DocumentRow {\r\n  referenceNum: string;\r\n  subject: string;\r\n  receivedFrom: string;\r\n  status: string;\r\n  referredTo: string;\r\n  dateCreated: string;\r\n  tag: string;\r\n  referrals: {\r\n    id: number;\r\n    office: string;\r\n    status: Status;\r\n  }[];\r\n}\r\n\r\nexport function formatReferrals(offices: string[]): string {\r\n  return offices\r\n    .map((office) => {\r\n      return office\r\n        .split(\" \")\r\n        .map((word) => {\r\n          if (isNaN(parseInt(word))) return word.charAt(0).toUpperCase();\r\n          else return `-${parseInt(word).toString()}`;\r\n        })\r\n        .join(\"\");\r\n    })\r\n    .join(\", \");\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\ntype Order = \"asc\" | \"desc\";\r\n\r\nfunction getComparator<Key extends keyof DocumentRow>(\r\n  order: Order,\r\n  orderBy: Key\r\n): (\r\n  a: { [key in Key]: any },\r\n  b: { [key in Key]: any }\r\n) => number {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort<T>(\r\n  array: readonly T[],\r\n  comparator: (a: T, b: T) => number\r\n) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function DocumentTable({\r\n  officerId,\r\n  officeId,\r\n  onRefresh,\r\n  onView,\r\n  onEdit,\r\n}: {\r\n  officerId: string;\r\n  officeId?: number;\r\n  onRefresh: () => void;\r\n  onView: (referenceNum: string) => void;\r\n  onEdit: (referenceNum: string) => void;\r\n}) {\r\n  const {\r\n    data: documents,\r\n    error: getError,\r\n    refetch,\r\n  } = useQuery(GET_DOCUMENTS, {\r\n    variables: {\r\n      officerId,\r\n    },\r\n  });\r\n  const { data: officeEvents, error: subscribeError } = useSubscription(\r\n    SUBSCRIBE_OFFICE_EVENTS\r\n  );\r\n\r\n  const [drawer, setDrawer] = useState<boolean>(false);\r\n  const [filters, setFilters] = useState<readonly string[]>([]);\r\n  const [page, setPage] = useState<number>(0);\r\n  const [order, setOrder] = useState<Order>(\"asc\");\r\n  const [orderBy, setOrderBy] = useState<keyof DocumentRow>(\"referenceNum\");\r\n  const [filterName, setFilterName] = useState<string>(\"\");\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [documentList, setDocumentList] = useState<DocumentRow[]>([]);\r\n\r\n  const [deleteDocument, { error: deleteError }] = useMutation(DELETE_DOCUMENT);\r\n\r\n  useEffect(() => {\r\n    if (documents) {\r\n      setDocumentList(\r\n        documents.getDocuments.map((doc) => ({\r\n          referenceNum: doc.referenceNum,\r\n          subject: doc.subject,\r\n          receivedFrom: doc.receivedFrom,\r\n          referredTo:\r\n            doc.directorAssigned.length > 0\r\n              ? doc.directorAssigned\r\n                  .map((officer) => `${officer.firstName} ${officer.lastName}`)\r\n                  .join(\", \")\r\n              : formatReferrals(doc.referredTo.map((ref) => ref.office.name)),\r\n          dateCreated: new Date(doc.dateCreated).toLocaleDateString(undefined, {\r\n            month: \"short\",\r\n            day: \"numeric\",\r\n            year: \"numeric\",\r\n          }),\r\n          status: officeId\r\n            ? `${\r\n                doc.referredTo.find(\r\n                  (ref) => parseInt(ref.office.id) === officeId\r\n                )?.status.category || \"REFERRED\"\r\n              }`\r\n            : doc.status,\r\n          tag: doc.tag ? capitalCase(doc.tag) : \"\",\r\n          referrals: doc.referredTo.map((ref) => ({\r\n            id: parseInt(ref.office.id),\r\n            office: ref.office.name,\r\n            status: ref.status.category,\r\n          }))\r\n        }))\r\n      );\r\n    }\r\n  }, [documents, officeId]);\r\n\r\n  useEffect(() => {\r\n    if (officeEvents) refetch();\r\n  }, [officeEvents, refetch]);\r\n\r\n  const visibleRows = useMemo(\r\n    () =>\r\n      stableSort<DocumentRow>(\r\n        documentList.filter(\r\n          (document) =>\r\n            (document.referenceNum.includes(filterName) ||\r\n              document.subject.includes(filterName) ||\r\n              filterName.length === 0) &&\r\n            (filters.includes(document.status.replace(/\\d+/g, \"\")) ||\r\n              filters.includes(document.tag) ||\r\n              filters.length === 0)\r\n        ),\r\n        getComparator(order, orderBy)\r\n      ).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage),\r\n    [documentList, filterName, order, orderBy, page, rowsPerPage, filters]\r\n  );\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\r\n    page: number\r\n  ) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleFilterByName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPage(0);\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof DocumentRow\r\n  ) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleView = (event: React.MouseEvent<unknown>, id: string) =>\r\n    onView(id);\r\n  const handleEdit = (event: React.MouseEvent<unknown>, id: string) =>\r\n    onEdit(id);\r\n\r\n  const handleDelete = async (event: React.MouseEvent<unknown>, id: string) => {\r\n    await deleteDocument({\r\n      variables: {\r\n        referenceNum: id,\r\n      },\r\n    });\r\n\r\n    await refetch();\r\n  };\r\n\r\n  const handleFilter = (value: string) => {\r\n    const selectedIndex = filters.indexOf(value);\r\n    let newFilters: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newFilters = newFilters.concat(filters, value);\r\n    } else if (selectedIndex === 0) {\r\n      newFilters = newFilters.concat(filters.slice(1));\r\n    } else if (selectedIndex === filters.length - 1) {\r\n      newFilters = newFilters.concat(filters.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newFilters = newFilters.concat(\r\n        filters.slice(0, selectedIndex),\r\n        filters.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setFilters(newFilters);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    await refetch();\r\n    onRefresh();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <TableToolbar\r\n          filterName={filterName}\r\n          onRefresh={handleRefresh}\r\n          onFilterName={handleFilterByName}\r\n          onFilter={() => setDrawer(!drawer)}\r\n        />\r\n\r\n        <Box sx={{ overflow: \"auto\" }}>\r\n          <TableContainer>\r\n            <Table sx={{ minWidth: 900 }}>\r\n              <TableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                officeId={officeId}\r\n                onRequestSort={handleRequestSort}\r\n                headLabel={[\r\n                  { id: \"referenceNum\", label: \"Reference\" },\r\n                  { id: \"subject\", label: \"Subject\", width: 250 },\r\n                  { id: \"dateCreated\", label: \"Date\", align: \"right\" },\r\n                  {\r\n                    id: \"receivedFrom\",\r\n                    label: \"Received From\",\r\n                    align: \"right\",\r\n                  },\r\n                  { id: \"referredTo\", label: \"Referred To\", align: \"right\" },\r\n                  { id: \"status\", label: \"Status\", align: \"right\", width: 50 },\r\n                  { id: \"tag\", align: \"right\", width: 20 },\r\n                ]}\r\n              />\r\n\r\n              <TableBody>\r\n                {visibleRows.map((document) => (\r\n                  <TableRow\r\n                    key={document.referenceNum}\r\n                    officeId={officeId}\r\n                    document={document}\r\n                    onView={handleView}\r\n                    onEdit={handleEdit}\r\n                    onDelete={handleDelete}\r\n                  />\r\n                ))}\r\n\r\n                {visibleRows.length === 0 && (\r\n                  <TableEmptyRow sx={{ height: 80 }}>\r\n                    <TableCell align=\"center\" colSpan={6}>\r\n                      No results found.\r\n                    </TableCell>\r\n                  </TableEmptyRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n\r\n        <TablePagination\r\n          page={page}\r\n          component=\"div\"\r\n          count={documentList.length}\r\n          rowsPerPage={rowsPerPage}\r\n          onPageChange={handleChangePage}\r\n          rowsPerPageOptions={[10, 25, 50]}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Card>\r\n\r\n      <Suspense>\r\n        <FilterDrawer\r\n          open={drawer}\r\n          selected={filters}\r\n          onFilter={handleFilter}\r\n          onClose={() => setDrawer(!drawer)}\r\n          onClear={() => setFilters([])}\r\n          filters={[\r\n            {\r\n              name: \"Status\",\r\n              options: Array.from(\r\n                new Set(documentList.map((doc) => doc.status.replace(/\\d+/g, \"\")))\r\n              ).map((status) => ({\r\n                value: status,\r\n                label: capitalCase(status.replace(/\\d+/g, \"\")),\r\n              })),\r\n            },\r\n            {\r\n              name: \"Tags\",\r\n              options: Array.from(\r\n                new Set(\r\n                  documentList.filter((doc) => doc.tag).map((doc) => doc.tag)\r\n                )\r\n              ).map((tag) => ({\r\n                value: tag,\r\n                label: capitalCase(tag),\r\n              })),\r\n            },\r\n          ]}\r\n        />\r\n      </Suspense>\r\n\r\n      <Suspense>\r\n        <Snackbar\r\n          severity=\"error\"\r\n          message={\r\n            getError?.message || subscribeError?.message || deleteError?.message\r\n          }\r\n        />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n"],"names":["DIRECTOR_OPTIONS","value","Status","Referred","label","ForReview","ForRevision","ForCorrection","ForApproval","UpdateReport","Finished","CHIEF_OPTIONS","Submitted","StatusButton","_ref","officeId","status","referenceNum","role","onUpdate","width","showLabel","data","statuses","error","getError","useQuery","GET_STATUSES","fetchPolicy","updateStatus","updateError","useMutation","UPDATE_DOCUMENT_STATUS","setError","useState","currentStatus","setCurrentStatus","useEffect","handleStatusChange","async","_statuses$getDocument","statusId","getDocumentStatus","find","category","id","variables","parseInt","_jsxs","_Fragment","children","Role","Director","NotActionable","_jsx","TextField","name","select","undefined","variant","onChange","event","target","required","fullWidth","sx","map","option","MenuItem","Chief","Snackbar","severity","message","DocumentTableToolbar","filterName","onRefresh","onFilter","onFilterName","Toolbar","height","display","justifyContent","p","theme","spacing","OutlinedInput","placeholder","startAdornment","InputAdornment","position","Iconify","icon","color","Stack","direction","Tooltip","title","IconButton","onClick","DocumentTableHead","order","orderBy","headLabel","onRequestSort","TableHead","TableRow","TableCell","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","property","Box","border","margin","padding","overflow","whiteSpace","clip","CollapseTable","collapse","refferals","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","maxHeight","overflowY","Typography","gutterBottom","component","Table","TableBody","ref","scope","noWrap","office","statusColor","toLowerCase","includes","DocumentTableRow","document","onView","onEdit","onDelete","open","setOpen","dialog","setDialog","setCollapse","handleViewDocument","hover","tabIndex","size","Button","subject","length","slice","tag","Label","dateCreated","receivedFrom","maxWidth","referredTo","capitalCase","currentTarget","Suspense","referrals","Popover","anchorEl","onClose","handleCloseMenu","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","mr","DeleteDialog","lazy","FilterDrawer","formatReferrals","offices","split","word","isNaN","charAt","toUpperCase","toString","join","descendingComparator","a","b","DocumentTable","officerId","documents","refetch","GET_DOCUMENTS","officeEvents","subscribeError","useSubscription","SUBSCRIBE_OFFICE_EVENTS","drawer","setDrawer","filters","setFilters","page","setPage","setOrder","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","documentList","setDocumentList","deleteDocument","deleteError","DELETE_DOCUMENT","getDocuments","doc","_doc$referredTo$find","directorAssigned","officer","firstName","lastName","Date","toLocaleDateString","month","day","year","visibleRows","useMemo","array","comparator","stabilizedThis","el","index","sort","stableSort","filter","replace","getComparator","handleView","handleEdit","handleDelete","Card","TableToolbar","TableContainer","handleRequestSort","TableEmptyRow","TablePagination","count","onPageChange","handleChangePage","rowsPerPageOptions","onRowsPerPageChange","selected","selectedIndex","indexOf","newFilters","concat","onClear","options","Array","from","Set"],"sourceRoot":""}