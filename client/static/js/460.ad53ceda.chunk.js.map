{"version":3,"file":"static/js/460.ad53ceda.chunk.js","mappings":"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","sources":["sections/accounts/form-dialog/index.tsx","../node_modules/@mui/material/DialogTitle/DialogTitle.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nimport { Snackbar } from \"../../../components\";\r\n\r\nimport { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  CREATE_OFFICER,\r\n  GET_OFFICER_BY_ID,\r\n  GET_OFFICES,\r\n  GET_POSITIONS,\r\n  UPDATE_OFFICER,\r\n} from \"../../../graphql/users\";\r\nimport { Positions, Role } from \"../../../__generated__/graphql\";\r\n\r\ninterface OfficerInput {\r\n  firstName: string;\r\n  lastName: string;\r\n  positionId: string;\r\n  officeId: string;\r\n}\r\n\r\nfunction filterPositions(office: string, positions: Positions[]) {\r\n  if (office.includes(\"Regional Director\")) {\r\n    return positions.filter(\r\n      (pos) => pos.role === Role.Director || pos.role === Role.Officer\r\n    );\r\n  } else if (office.includes(\"Division\")) {\r\n    return positions.filter(\r\n      (pos) =>\r\n        (pos.role === Role.Chief &&\r\n        pos.label.includes(\"Chief\")) ||\r\n        pos.role === Role.Officer\r\n    );\r\n  } else if (office.includes(\"Revenue District Office\")) {\r\n    return positions.filter(\r\n      (pos) =>\r\n        (pos.role === Role.Chief &&\r\n        pos.label.includes(\"District Officer\")) ||\r\n        pos.role === Role.Officer\r\n    );\r\n  } else {\r\n    return positions.filter((pos) => pos.role === Role.Officer);\r\n  }\r\n}\r\n\r\nconst formDefaults = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  positionId: \"\",\r\n  officeId: \"\",\r\n};\r\n\r\nexport default function AccountDialog({\r\n  open,\r\n  onClose,\r\n  officerId,\r\n}: {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  officerId?: string | null;\r\n}) {\r\n  const [error, setError] = useState<string>();\r\n  const [formData, setFormData] = useState<OfficerInput>(formDefaults);\r\n  const [filteredPositions, setFilteredPositions] = useState<Positions[]>([]);\r\n\r\n  const { firstName, lastName, positionId, officeId } = formData;\r\n\r\n  const { data: positions, error: positionError } = useQuery(GET_POSITIONS);\r\n\r\n  const { data: offices, error: officeError } = useQuery(GET_OFFICES);\r\n\r\n  const [getOfficerById, { data: officer, error: officerError }] = useLazyQuery(\r\n    GET_OFFICER_BY_ID,\r\n    { fetchPolicy: \"no-cache\" }\r\n  );\r\n\r\n  const [createOfficer, { error: createError }] = useMutation(CREATE_OFFICER);\r\n  const [updateOfficer, { error: updateError }] = useMutation(UPDATE_OFFICER);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (formData.officeId && positions?.getPositions && offices?.getOffices) {\r\n      const office = offices.getOffices.find(\r\n        (office) => office.id === formData.officeId\r\n      );\r\n\r\n      if (office) {\r\n        setFilteredPositions(\r\n          filterPositions(\r\n            office.name,\r\n            positions.getPositions.map((pos) => ({\r\n              id: pos.id,\r\n              label: pos.label,\r\n              role: pos.role,\r\n            }))\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [formData.officeId, offices, positions]);\r\n\r\n  useEffect(() => {\r\n    if (officerId) {\r\n      getOfficerById({ variables: { uuid: officerId } }).then(({ data }) => {\r\n        if (data && data.getOfficerById) {\r\n          setFormData({\r\n            firstName: data.getOfficerById.firstName,\r\n            lastName: data.getOfficerById.lastName,\r\n            positionId: data.getOfficerById.position?.id.toString() || \"\",\r\n            officeId: data.getOfficerById.office?.id.toString() || \"\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [officerId, getOfficerById]);\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (officerId) {\r\n      const officer = await updateOfficer({\r\n        variables: {\r\n          uuid: officerId,\r\n          firstName: firstName.trim(),\r\n          lastName: lastName.trim(),\r\n          positionId: parseInt(positionId),\r\n          officeId: parseInt(officeId),\r\n        },\r\n      });\r\n\r\n      if (officer.data && officer.data.updateOfficer) onClose();\r\n      else setError(\"Failed to update account.\");\r\n    } else {\r\n      const officer = await createOfficer({\r\n        variables: {\r\n          firstName: firstName.trim(),\r\n          lastName: lastName.trim(),\r\n          positionId: parseInt(positionId),\r\n          officeId: parseInt(officeId),\r\n        },\r\n      });\r\n\r\n      if (officer.data && officer.data.createOfficer) onClose();\r\n      else setError(\"Account already exists.\");\r\n    }\r\n\r\n    setFormData(formDefaults); // reset form\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFormData(formDefaults);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {officer\r\n            ? `Edit ${\r\n                officer.getOfficerById?.firstName +\r\n                \" \" +\r\n                officer.getOfficerById?.lastName\r\n              } Profile`\r\n            : \"Create Officer\"}\r\n        </DialogTitle>\r\n        <form onSubmit={handleSubmit}>\r\n          <DialogContent>\r\n            <Stack spacing={2} sx={{ mb: 3 }}>\r\n              <TextField\r\n                name=\"firstName\"\r\n                label=\"First Name\"\r\n                value={firstName}\r\n                onChange={handleChange}\r\n                required\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                name=\"lastName\"\r\n                label=\"Last Name\"\r\n                value={lastName}\r\n                onChange={handleChange}\r\n                required\r\n                fullWidth\r\n              />\r\n\r\n              {offices && (\r\n                <TextField\r\n                  name=\"officeId\"\r\n                  select\r\n                  label=\"Office\"\r\n                  value={officeId}\r\n                  onChange={handleChange}\r\n                  required\r\n                  fullWidth\r\n                >\r\n                  {offices.getOffices.map((option) => (\r\n                    <MenuItem key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              )}\r\n\r\n              {positions && (\r\n                <TextField\r\n                  name=\"positionId\"\r\n                  select\r\n                  label=\"Position\"\r\n                  value={positionId}\r\n                  onChange={handleChange}\r\n                  required\r\n                  fullWidth\r\n                >\r\n                  {filteredPositions.map((option) => (\r\n                    <MenuItem key={option.id} value={option.id}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              )}\r\n            </Stack>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"inherit\">\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"inherit\">\r\n              Save\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={\r\n          positionError?.message ||\r\n          officeError?.message ||\r\n          officerError?.message ||\r\n          createError?.message ||\r\n          error ||\r\n          updateError?.message\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp != null ? idProp : titleId\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;"],"names":["formDefaults","firstName","lastName","positionId","officeId","AccountDialog","_ref","_officer$getOfficerBy","_officer$getOfficerBy2","open","onClose","officerId","error","setError","useState","formData","setFormData","filteredPositions","setFilteredPositions","data","positions","positionError","useQuery","GET_POSITIONS","offices","officeError","GET_OFFICES","getOfficerById","officer","officerError","useLazyQuery","GET_OFFICER_BY_ID","fetchPolicy","createOfficer","createError","useMutation","CREATE_OFFICER","updateOfficer","updateError","UPDATE_OFFICER","handleChange","event","target","name","value","useEffect","getPositions","getOffices","office","find","id","includes","filter","pos","role","Role","Director","Officer","Chief","label","filterPositions","map","variables","uuid","then","_ref2","_data$getOfficerById$","_data$getOfficerById$2","position","toString","handleClose","_jsxs","_Fragment","children","Dialog","maxWidth","fullWidth","_jsx","DialogTitle","concat","onSubmit","async","preventDefault","trim","parseInt","DialogContent","Stack","spacing","sx","mb","TextField","onChange","required","select","option","MenuItem","DialogActions","Button","onClick","color","type","variant","Snackbar","severity","message","_excluded","DialogTitleRoot","styled","Typography","slot","overridesResolver","props","styles","root","padding","flex","React","inProps","ref","useThemeProps","className","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","titleId","DialogContext","_extends","component","clsx"],"sourceRoot":""}