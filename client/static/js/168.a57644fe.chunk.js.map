{"version":3,"file":"static/js/168.a57644fe.chunk.js","mappings":"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","sources":["graphql/reports/index.tsx","sections/reports/table/Toolbar.tsx","sections/reports/table/Head.tsx","sections/reports/table/Row.tsx","sections/reports/table/index.tsx","sections/reports/index.tsx"],"sourcesContent":["import { gql } from '../../__generated__/gql';\r\n\r\n// =============================== REPORTS ==================================\r\n\r\nexport const GET_REPORTS = gql(`\r\n    query GetReports {\r\n        getReports {\r\n            id\r\n            name\r\n            basis\r\n            frequency\r\n            localDue\r\n            nationalDue\r\n        }\r\n    }\r\n`)\r\n\r\nexport const GET_REPORT_BY_ID = gql(`\r\n    query GetReportById($id: Int!) {\r\n        getReportById(id: $id) {\r\n            id\r\n            name\r\n            basis\r\n            frequency\r\n            localDue\r\n            nationalDue  \r\n        }\r\n    }\r\n`)\r\n\r\nexport const GET_REPORT_SUMMARY = gql(`\r\n    query GetReportSummary {\r\n        getReportSummary {\r\n            office\r\n            pending\r\n            submitted\r\n            total\r\n        }\r\n    }\r\n`)\r\n\r\nexport const GET_REPORT_STATISTICS = gql(`\r\n    query GetReportStatistics($officeId: Int) {\r\n        getReportStatistics(officeId: $officeId) {\r\n            overdue\r\n            pending\r\n            submitted\r\n            total\r\n        }\r\n    }\r\n`)\r\n\r\nexport const CREATE_REPORT = gql(`\r\n    mutation CreateReport($name: String!, $basis: String!, $localDue: String!, $nationalDue: String!, $frequency: Frequency!) {\r\n        createReport(name: $name, basis: $basis, localDue: $localDue, nationalDue: $nationalDue, frequency: $frequency) {\r\n            id\r\n        }\r\n    }\r\n`)\r\n\r\nexport const UPDATE_REPORT = gql(`\r\n    mutation UpdateReport($id: Int!, $name: String!, $basis: String!, $localDue: String!, $nationalDue: String!, $frequency: Frequency!) {\r\n        updateReport(id: $id, name: $name, basis: $basis, localDue: $localDue, nationalDue: $nationalDue, frequency: $frequency) {\r\n            id\r\n        }\r\n    }\r\n`)\r\n\r\nexport const DELETE_REPORT = gql(`\r\n    mutation DeleteReport($id: Int!) {\r\n        deleteReport(id: $id) {\r\n            id\r\n        }\r\n    }\r\n`)\r\n\r\n// =============================== SUBMISSION ==================================\r\n\r\nexport const GET_SUBMISSIONS = gql(`\r\n    query GetSubmittedReports($officeId: Int) {\r\n        getSubmittedReports(officeId: $officeId) {\r\n            id\r\n            office {\r\n                id\r\n                name\r\n            }\r\n            report {\r\n                id\r\n                name\r\n                basis\r\n            }\r\n            status\r\n            localDue\r\n            nationalDue\r\n        }\r\n    }\r\n`)\r\n\r\nexport const GET_SUBMISSION_BY_ID = gql(`\r\n    query GetSubmittedReportById($id: Int!) {\r\n        getSubmittedReportById(id: $id) {\r\n            id\r\n            office {\r\n                id\r\n                name\r\n            }\r\n            report {\r\n                id\r\n                name\r\n                basis\r\n            }\r\n            status\r\n            localDue\r\n            nationalDue\r\n            message\r\n            files\r\n        }\r\n    }\r\n`)\r\n\r\nexport const SUBMIT_REPORT = gql(`\r\n    mutation SubmitReport($id: Int!, $message: String, $files: [String!]) {\r\n        submitReport(id: $id, message: $message, files: $files) {\r\n            id\r\n        }\r\n    }\r\n`)","import React from 'react';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\nimport { Iconify } from '../../../components';\r\n\r\nexport default function DocumentTableToolbar({\r\n  filterName,\r\n  onRefresh,\r\n  onFilterName \r\n}: { \r\n  filterName: string, \r\n  onRefresh: () => void,\r\n  onFilterName: (event: React.ChangeEvent<HTMLInputElement>) => void }\r\n) {\r\n    return (\r\n      <Toolbar\r\n        sx={{\r\n          height: 96,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          p: (theme) => theme.spacing(0, 1, 0, 3)\r\n        }}\r\n      >\r\n        <OutlinedInput\r\n          value={filterName}\r\n          onChange={onFilterName}\r\n          placeholder=\"Search...\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Iconify\r\n                icon=\"eva:search-fill\"\r\n                sx={{ color: 'text.disabled', width: 20, height: 20 }}\r\n              />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n  \r\n        <Tooltip title=\"Refresh\">\r\n          <IconButton onClick={onRefresh}>\r\n            <Iconify icon=\"mdi:refresh\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    );\r\n}\r\n","import Box from '@mui/material/Box';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\n\r\nimport { ReportRow } from '.';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ReportTableHead({\r\n    order,\r\n    orderBy,\r\n    headLabel,\r\n    onRequestSort,\r\n}: {\r\n    order: \"asc\" | \"desc\",\r\n    orderBy: string,\r\n    headLabel: { \r\n        id: keyof ReportRow, \r\n        label?: string, \r\n        width?: number,\r\n        minWidth?: number,\r\n        align?: \"center\" | \"left\" | \"right\" | \"justify\" | \"inherit\" \r\n    }[],\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof ReportRow) => void\r\n}) {\r\n  const createSortHandler =\r\n  (property: keyof ReportRow) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box sx={{\r\n                    border: 0,\r\n                    margin: -1,\r\n                    padding: 0,\r\n                    width: '1px',\r\n                    height: '1px',\r\n                    overflow: 'hidden',\r\n                    position: 'absolute',\r\n                    whiteSpace: 'nowrap',\r\n                    clip: 'rect(0 0 0 0)',\r\n                }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}","import { useState } from 'react';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Popover from '@mui/material/Popover';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport { Label, Iconify, DeleteDialog } from '../../../components';\r\nimport { ReportRow } from '.';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction statusColor(status: string) {\r\n  switch (status) {\r\n    case 'Ongoing':\r\n      return 'warning';\r\n    case 'Finished':\r\n      return'success';\r\n    case 'Not Started':\r\n      return 'error';\r\n    default:\r\n      return 'info';\r\n  }\r\n}\r\n\r\nexport default function ReportTableRow({\r\n  officeId,\r\n  report,\r\n  onView,\r\n  onEdit,\r\n  onDelete\r\n}: {\r\n  officeId?: number,\r\n  report: ReportRow,\r\n  onView: (event: React.MouseEvent<unknown>, id: number) => void,\r\n  onEdit: (event: React.MouseEvent<unknown>, id: number) => void,\r\n  onDelete: (event: React.MouseEvent<unknown>, id: number) => void\r\n}) {\r\n  const [open, setOpen] = useState<HTMLButtonElement | null>(null);\r\n  const [dialog, setDialog] = useState<boolean>(false);\r\n\r\n  const handleViewDocument = (event: React.MouseEvent<unknown>) => {\r\n    onView(event, report.id);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleEditDocument = (event: React.MouseEvent<unknown>) => {\r\n    onEdit(event, report.reportId);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleDeleteDocument = (event: React.MouseEvent<unknown>) => {\r\n    onDelete(event, report.reportId);\r\n    setOpen(null);\r\n    setDialog(false);\r\n  };\r\n\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover tabIndex={-1} role=\"checkbox\">\r\n\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n            <Typography variant=\"subtitle2\">\r\n              {report.name}\r\n            </Typography>\r\n          </Stack>\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          {report.office}\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          {report.basis}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 120 }}>\r\n          {new Date(report.localDue).toLocaleDateString(undefined, {\r\n            month: 'short',\r\n            day: 'numeric',\r\n            year: 'numeric'\r\n          })}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 120 }}>\r\n          {new Date(report.nationalDue).toLocaleDateString(undefined, {\r\n            month: 'short',\r\n            day: 'numeric',\r\n            year: 'numeric'\r\n          })}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 50 }}>\r\n          <Label color={statusColor(report.status)}>{report.status}</Label>\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 30 }}>\r\n          <IconButton onClick={handleOpenMenu}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <Popover\r\n        open={!!open}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: { width: 200 },\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleViewDocument}>\r\n          <Iconify icon=\"fluent-mdl2:review-solid\" sx={{ mr: 2 }} />\r\n          View Submission\r\n        </MenuItem>\r\n\r\n        {officeId === undefined && (\r\n          <MenuItem onClick={handleEditDocument}>\r\n            <Iconify icon=\"eva:edit-fill\" sx={{ mr: 2 }} />\r\n            Edit Report\r\n          </MenuItem>\r\n        )}\r\n\r\n        {officeId === undefined && (\r\n          <MenuItem onClick={() => setDialog(true)} sx={{ color: 'error.main' }}>\r\n            <Iconify icon=\"eva:trash-2-outline\" sx={{ mr: 2 }} />\r\n            Delete Report\r\n          </MenuItem>\r\n        )}\r\n      </Popover>\r\n\r\n      <DeleteDialog \r\n        open={dialog}\r\n        onClose={() => setDialog(false)}\r\n        onDelete={handleDeleteDocument}\r\n      />\r\n    </>\r\n  );\r\n}","import { useState, useEffect, useMemo } from 'react';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableEmptyRow from '@mui/material/TableRow';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TablePagination from '@mui/material/TablePagination';\r\n\r\nimport TableToolbar from './Toolbar';\r\nimport TableHead from './Head';\r\nimport TableRow from './Row';\r\nimport { Snackbar } from '../../../components';\r\n\r\nimport { useMutation, useQuery, useSubscription } from '@apollo/client';\r\nimport { DELETE_REPORT, GET_SUBMISSIONS } from '../../../graphql/reports';\r\nimport { SUBSCRIBE_OFFICE_EVENTS } from '../../../graphql/users';\r\n\r\nimport { capitalCase } from 'change-case';\r\n\r\nexport interface ReportRow {\r\n    id: number;\r\n    name: string;\r\n    basis: string;\r\n    office: string;\r\n    localDue: string;\r\n    nationalDue: string;\r\n    status: string;\r\n    reportId: number;\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\ntype Order = 'asc' | 'desc';\r\n  \r\nfunction getComparator<Key extends keyof ReportRow>(\r\n    order: Order,\r\n    orderBy: Key,\r\n  ): (\r\n    a: { [key in Key]: number | string },\r\n    b: { [key in Key]: number | string },\r\n  ) => number {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n  \r\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) {\r\n        return order;\r\n      }\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function ReportTable({\r\n    officeId,\r\n    onRefresh,\r\n    onView,\r\n    onEdit\r\n}: {\r\n    officeId?: number,\r\n    onRefresh: () => void,\r\n    onView: (reportId: number) => void,\r\n    onEdit: (reportId: number) => void\r\n}) {\r\n    const { data: reports, error: getError, refetch } = useQuery(GET_SUBMISSIONS, {\r\n        variables: {\r\n            officeId\r\n        }\r\n    });\r\n    const { data: officeEvents, error: subscribeError } = useSubscription(SUBSCRIBE_OFFICE_EVENTS);\r\n\r\n    const [page, setPage] = useState<number>(0);\r\n    const [order, setOrder] = useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = useState<keyof ReportRow>('id');\r\n    const [filterName, setFilterName] = useState<string>('');\r\n    const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n    const [reportList, setReportList] = useState<ReportRow[]>([]);\r\n\r\n    const [deleteReport, { error: deleteError }] = useMutation(DELETE_REPORT);\r\n\r\n    useEffect(() => {\r\n        if (reports) {\r\n            setReportList(reports.getSubmittedReports.map(report => ({\r\n                id: parseInt(report.id),\r\n                name: report.report.name,\r\n                basis: report.report.basis,\r\n                office: report.office.name,\r\n                localDue: report.localDue,\r\n                nationalDue: report.nationalDue,\r\n                status: capitalCase(report.status),\r\n                reportId: parseInt(report.report.id)\r\n            })));\r\n        }\r\n    }, [reports]);\r\n\r\n    useEffect(() => {\r\n        if (officeEvents) refetch();\r\n    }, [officeEvents, refetch]);\r\n\r\n    const visibleRows = useMemo(\r\n        () =>\r\n          stableSort<ReportRow>(reportList.filter(report => \r\n                report.name.includes(filterName) || report.basis.includes(filterName) || report.office.includes(filterName) || filterName.length === 0\r\n            ), getComparator(order, orderBy)).slice(\r\n            page * rowsPerPage,\r\n            page * rowsPerPage + rowsPerPage,\r\n          ),\r\n        [reportList, filterName, order, orderBy, page, rowsPerPage],\r\n    );\r\n\r\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, page: number) => {\r\n        setPage(page);\r\n    };\r\n    \r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setPage(0);\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n    };\r\n    \r\n    const handleFilterByName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPage(0);\r\n        setFilterName(event.target.value);\r\n    };\r\n\r\n    const handleRequestSort = (\r\n        event: React.MouseEvent<unknown>,\r\n        property: keyof ReportRow,\r\n      ) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleView = (event: React.MouseEvent<unknown>, id: number) => onView(id);\r\n    const handleEdit = (event: React.MouseEvent<unknown>, id: number) => onEdit(id);\r\n    \r\n    const handleDelete = async (event: React.MouseEvent<unknown>, reportId: number) => {\r\n        await deleteReport({\r\n            variables: {\r\n                id: reportId\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    const handleRefresh = async () => {\r\n        await refetch();\r\n        onRefresh();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Card>\r\n            <TableToolbar \r\n                filterName={filterName}\r\n                onRefresh={handleRefresh}\r\n                onFilterName={handleFilterByName}\r\n            />\r\n\r\n           <Box sx={{ maxWidth: 2400, overflow: 'auto' }}>\r\n                <TableContainer sx={{ overflow: 'unset' }}>\r\n                    <Table sx={{ minWidth: 800 }}>\r\n                        <TableHead\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            headLabel={[\r\n                                { id: 'name', label: 'Report Name', width: 250 },\r\n                                { id: 'office', label: 'Report Office' },\r\n                                { id: 'basis', label: 'Report Basis' },\r\n                                { id: 'localDue', label: 'Regional Deadline', align: \"right\" },\r\n                                { id: 'nationalDue', label: 'National Deadline', align: \"right\" },\r\n                                { id: 'status', label: 'Status', align: \"right\" },\r\n                                { id: 'id', align: \"right\", width: 20 }\r\n                            ]}\r\n                        />\r\n\r\n                        <TableBody>\r\n                            {visibleRows.map(report => \r\n                                <TableRow \r\n                                    key={report.id}\r\n                                    report={report}\r\n                                    officeId={officeId}\r\n                                    onView={handleView}\r\n                                    onEdit={handleEdit}\r\n                                    onDelete={handleDelete}\r\n                                />\r\n                            )}\r\n\r\n                            {visibleRows.length === 0 &&\r\n                                <TableEmptyRow sx={{ height: 80 }}>\r\n                                    <TableCell align=\"center\" colSpan={6}>\r\n                                        No results found.\r\n                                    </TableCell>\r\n                                </TableEmptyRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n           </Box>\r\n\r\n            <TablePagination\r\n                page={page}\r\n                component=\"div\"\r\n                count={reportList.length}\r\n                rowsPerPage={rowsPerPage}\r\n                onPageChange={handleChangePage}\r\n                rowsPerPageOptions={[10, 25, 50]}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </Card>\r\n\r\n        <Snackbar \r\n            severity='error' \r\n            message={getError?.message || subscribeError?.message || deleteError?.message} \r\n        />\r\n        </>\r\n    )\r\n}","import React, { lazy, useEffect, Suspense } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\nimport { ChartSummary, Iconify, Snackbar } from '../../components';\r\nimport ReportTable from './table';\r\n\r\nimport { useQuery, useSubscription } from '@apollo/client';\r\nimport { SUBSCRIBE_OFFICE_EVENTS } from '../../graphql/users';\r\nimport { GET_REPORT_STATISTICS } from '../../graphql/reports';\r\nimport { Role } from '../../__generated__/graphql';\r\n\r\nimport { useAppSelector } from '../../hooks';\r\n\r\nconst FormDialog = lazy(() => import('./form-dialog'));\r\nconst ViewDialog = lazy(() => import('./report-dialog'));\r\n\r\nfunction authorize(role?: Role, office?: string) {\r\n    if (!office) return undefined;\r\n\r\n    if (role && [Role.Superuser, Role.Director, Role.HrAdmin].includes(role)) return undefined;\r\n    else return parseInt(office);\r\n}\r\n\r\nexport default function DeocumentsPage() {\r\n    const { office, role } = useAppSelector((state) => state.auth);\r\n\r\n    const { data: statistics, error: getError, refetch } = useQuery(GET_REPORT_STATISTICS, {\r\n        variables: {\r\n            officeId: authorize(role, office)\r\n        }\r\n    }); \r\n    const { data: officeEvents, error: subscribeError } = useSubscription(SUBSCRIBE_OFFICE_EVENTS);\r\n\r\n    useEffect(() => {\r\n        if (officeEvents) refetch();\r\n    }, [officeEvents, refetch]);\r\n\r\n    const [form, setForm] = React.useState<boolean>(false);\r\n    const [view, setView] = React.useState<boolean>(false);\r\n    const [selected, setSelected] = React.useState<number | null>(null);\r\n\r\n    const handleFormReport = () => {\r\n        setForm(!form);\r\n        setSelected(null);\r\n    };\r\n\r\n    const handleViewReport = (reportId: number) => {\r\n        setSelected(reportId);\r\n        setView(!view);\r\n    };\r\n\r\n    const handleEditReport = (reportId: number) => {\r\n        setSelected(reportId);\r\n        setForm(true);\r\n    };\r\n\r\n    const handleCloseView = () => {\r\n        setView(false);\r\n        setSelected(null);\r\n    };\r\n\r\n    return (    \r\n        <Container>\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                <Typography variant=\"h4\">Reports</Typography>\r\n\r\n                {authorize(role, office) === undefined && (\r\n                    <Button onClick={handleFormReport} variant=\"contained\" color=\"inherit\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                        Create\r\n                    </Button>\r\n                )}\r\n            </Stack>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"Total Reports\"\r\n                        total={statistics ? statistics.getReportStatistics.total : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='line-md:document-report-twotone' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"Submitted\"\r\n                        total={statistics ? statistics.getReportStatistics.submitted : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='ep:finished' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"Pending\"\r\n                        total={statistics ? statistics.getReportStatistics.pending : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='fluent-mdl2:processing' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"Overdue\"\r\n                        total={statistics ? statistics.getReportStatistics.overdue : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='ic:twotone-warning' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <ReportTable \r\n                        officeId={authorize(role, office)}\r\n                        onRefresh={() => refetch()} \r\n                        onView={handleViewReport}\r\n                        onEdit={handleEditReport} \r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {!view && (\r\n                <Suspense>\r\n                    <FormDialog reportId={selected} open={form} onClose={handleFormReport} />\r\n                </Suspense>\r\n            )}\r\n            \r\n            {selected && (\r\n                <Suspense>\r\n                    <ViewDialog \r\n                        open={view} \r\n                        reportId={selected}\r\n                        onClose={handleCloseView}  \r\n                    />\r\n                </Suspense>\r\n            )}\r\n\r\n            <Snackbar \r\n                severity='error' \r\n                message={getError?.message || subscribeError?.message} \r\n            />\r\n        </Container>\r\n    );\r\n}"],"names":["gql","GET_REPORT_BY_ID","GET_REPORT_SUMMARY","GET_REPORT_STATISTICS","CREATE_REPORT","UPDATE_REPORT","DELETE_REPORT","GET_SUBMISSIONS","GET_SUBMISSION_BY_ID","SUBMIT_REPORT","DocumentTableToolbar","_ref","filterName","onRefresh","onFilterName","_jsxs","Toolbar","sx","height","display","justifyContent","p","theme","spacing","children","_jsx","OutlinedInput","value","onChange","placeholder","startAdornment","InputAdornment","position","Iconify","icon","color","width","Tooltip","title","IconButton","onClick","ReportTableHead","order","orderBy","headLabel","onRequestSort","TableHead","TableRow","map","headCell","TableCell","align","sortDirection","id","minWidth","TableSortLabel","hideSortIcon","active","direction","property","event","label","Box","border","margin","padding","overflow","whiteSpace","clip","statusColor","status","ReportTableRow","officeId","report","onView","onEdit","onDelete","open","setOpen","useState","dialog","setDialog","_Fragment","hover","tabIndex","role","component","scope","Stack","alignItems","Typography","variant","name","office","basis","Date","localDue","toLocaleDateString","undefined","month","day","year","nationalDue","Label","currentTarget","Popover","anchorEl","onClose","handleCloseMenu","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","MenuItem","mr","reportId","DeleteDialog","descendingComparator","a","b","ReportTable","data","reports","error","getError","refetch","useQuery","variables","officeEvents","subscribeError","useSubscription","SUBSCRIBE_OFFICE_EVENTS","page","setPage","setOrder","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","reportList","setReportList","deleteReport","deleteError","useMutation","useEffect","getSubmittedReports","parseInt","capitalCase","visibleRows","useMemo","array","comparator","stabilizedThis","el","index","sort","stableSort","filter","includes","length","getComparator","slice","handleView","handleEdit","handleDelete","async","Card","TableToolbar","target","maxWidth","TableContainer","Table","handleRequestSort","TableBody","TableEmptyRow","colSpan","TablePagination","count","onPageChange","handleChangePage","rowsPerPageOptions","onRowsPerPageChange","Snackbar","severity","message","FormDialog","lazy","ViewDialog","authorize","Role","Superuser","Director","HrAdmin","DeocumentsPage","useAppSelector","state","auth","statistics","form","setForm","React","view","setView","selected","setSelected","handleFormReport","Container","mb","Button","startIcon","Grid","container","item","xs","sm","md","ChartSummary","total","getReportStatistics","submitted","pending","overdue","Suspense","handleCloseView"],"sourceRoot":""}