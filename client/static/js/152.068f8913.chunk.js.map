{"version":3,"file":"static/js/152.068f8913.chunk.js","mappings":"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","sources":["sections/reports/table/Toolbar.tsx","sections/reports/table/Head.tsx","sections/reports/table/index.tsx","sections/reports/index.tsx","sections/reports/table/Row.tsx","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React from 'react';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport { Iconify } from '../../../components';\r\n\r\nexport default function DocumentTableToolbar({\r\n  filterName,\r\n  onRefresh,\r\n  onFilter,\r\n  onFilterName \r\n}: { \r\n  filterName: string, \r\n  onRefresh: () => void,\r\n  onFilter: () => void,\r\n  onFilterName: (event: React.ChangeEvent<HTMLInputElement>) => void }\r\n) {\r\n    return (\r\n      <Toolbar\r\n        sx={{\r\n          height: 96,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          p: (theme) => theme.spacing(0, 1, 0, 3)\r\n        }}\r\n      >\r\n        <OutlinedInput\r\n          value={filterName}\r\n          onChange={onFilterName}\r\n          placeholder=\"Search...\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Iconify\r\n                icon=\"eva:search-fill\"\r\n                sx={{ color: 'text.disabled', width: 20, height: 20 }}\r\n              />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n  \r\n        <Stack direction='row'>\r\n          <Tooltip title=\"Filter\">\r\n            <IconButton onClick={onFilter}>\r\n              <Iconify icon=\"fluent:filter-20-filled\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Refresh\">\r\n            <IconButton onClick={onRefresh}>\r\n              <Iconify icon=\"mdi:refresh\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Stack>\r\n      </Toolbar>\r\n    );\r\n}\r\n","import Box from '@mui/material/Box';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\n\r\nimport { ReportRow } from '.';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ReportTableHead({\r\n    order,\r\n    orderBy,\r\n    officeId,\r\n    headLabel,\r\n    onRequestSort,\r\n}: {\r\n    officeId?: number,\r\n    order: \"asc\" | \"desc\",\r\n    orderBy: string,\r\n    headLabel: { \r\n        id: keyof ReportRow, \r\n        label?: string, \r\n        width?: number,\r\n        minWidth?: number,\r\n        align?: \"center\" | \"left\" | \"right\" | \"justify\" | \"inherit\" \r\n    }[],\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof ReportRow) => void\r\n}) {\r\n  const createSortHandler =\r\n  (property: keyof ReportRow) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {officeId === undefined && <TableCell />}\r\n        \r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box sx={{\r\n                    border: 0,\r\n                    margin: -1,\r\n                    padding: 0,\r\n                    width: '1px',\r\n                    height: '1px',\r\n                    overflow: 'hidden',\r\n                    position: 'absolute',\r\n                    whiteSpace: 'nowrap',\r\n                    clip: 'rect(0 0 0 0)',\r\n                }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}","import { useState, useEffect, useMemo, lazy, Suspense } from 'react';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableEmptyRow from '@mui/material/TableRow';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TablePagination from '@mui/material/TablePagination';\r\n\r\nimport TableToolbar from './Toolbar';\r\nimport TableHead from './Head';\r\nimport TableRow from './Row';\r\n\r\nimport { useMutation, useQuery, useSubscription } from '@apollo/client';\r\nimport { DELETE_SUBMISSION, GET_SUBMISSIONS } from '../../../graphql/reports';\r\nimport { SUBSCRIBE_OFFICE_EVENTS } from '../../../graphql/users';\r\n\r\nimport { capitalCase } from 'change-case';\r\nimport { parseType } from '..';\r\n\r\nconst Snackbar = lazy(() => import('../../../components/Snackbar'));\r\nconst FilterDrawer = lazy(() => import('../../../components/Filter'));\r\n\r\nexport interface ReportRow {\r\n    id: number;\r\n    name: string;\r\n    basis: string;\r\n    type: string;\r\n    localDue: string;\r\n    nationalDue: string;\r\n    status: string;\r\n    reportId: number;\r\n    pending: number;\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\ntype Order = 'asc' | 'desc';\r\n  \r\nfunction getComparator<Key extends keyof ReportRow>(\r\n    order: Order,\r\n    orderBy: Key,\r\n  ): (\r\n    a: { [key in Key]: number | string },\r\n    b: { [key in Key]: number | string },\r\n  ) => number {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n  \r\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) {\r\n        return order;\r\n      }\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function ReportTable({\r\n    officeId,\r\n    onRefresh,\r\n    onView,\r\n    onEdit\r\n}: {\r\n    officeId?: number,\r\n    onRefresh: () => void,\r\n    onView: (reportId: number) => void,\r\n    onEdit: (reportId: number) => void\r\n}) {\r\n    const { data: reports, error: getError, refetch } = useQuery(GET_SUBMISSIONS, {\r\n        variables: {\r\n            officeId\r\n        }\r\n    });\r\n    const { data: officeEvents, error: subscribeError } = useSubscription(SUBSCRIBE_OFFICE_EVENTS);\r\n\r\n    const [drawer, setDrawer] = useState<boolean>(false);\r\n    const [filters, setFilters] = useState<readonly string[]>([]);\r\n    const [page, setPage] = useState<number>(0);\r\n    const [order, setOrder] = useState<Order>('desc');\r\n    const [orderBy, setOrderBy] = useState<keyof ReportRow>('localDue');\r\n    const [filterName, setFilterName] = useState<string>('');\r\n    const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n    const [reportList, setReportList] = useState<ReportRow[]>([]);\r\n\r\n    const [deleteReport, { error: deleteError }] = useMutation(DELETE_SUBMISSION);\r\n\r\n    useEffect(() => {\r\n        if (reports) {\r\n            setReportList(reports.getSubmittedReports.map(report => ({\r\n                id: parseInt(report.id),\r\n                name: report.report.name,\r\n                basis: report.report.basis,\r\n                type: parseType(report.report.type),\r\n                localDue: report.localDue,\r\n                nationalDue: report.nationalDue,\r\n                status: capitalCase(report.status),\r\n                reportId: parseInt(report.report.id),\r\n                pending: report.pending\r\n            })));\r\n        }\r\n    }, [reports]);\r\n\r\n    useEffect(() => {\r\n        if (officeEvents) refetch();\r\n    }, [officeEvents, refetch]);\r\n\r\n    const visibleRows = useMemo(\r\n        () =>\r\n          stableSort<ReportRow>(reportList.filter(report => \r\n                (report.name.includes(filterName) || report.basis.includes(filterName) || filterName.length === 0) &&\r\n                    (filters.includes(report.type) || filterName.includes(report.status) || filters.length === 0)\r\n            ), getComparator(order, orderBy)).slice(\r\n            page * rowsPerPage,\r\n            page * rowsPerPage + rowsPerPage,\r\n          ),\r\n        [reportList, filterName, order, orderBy, page, rowsPerPage, filters],\r\n    );\r\n\r\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, page: number) => {\r\n        setPage(page);\r\n    };\r\n    \r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setPage(0);\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n    };\r\n    \r\n    const handleFilterByName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPage(0);\r\n        setFilterName(event.target.value);\r\n    };\r\n\r\n    const handleRequestSort = (\r\n        event: React.MouseEvent<unknown>,\r\n        property: keyof ReportRow,\r\n      ) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleView = (event: React.MouseEvent<unknown>, id: number) => onView(id);\r\n    const handleEdit = (event: React.MouseEvent<unknown>, id: number) => onEdit(id);\r\n    \r\n    const handleDelete = async (event: React.MouseEvent<unknown>, reportId: number) => {\r\n        await deleteReport({\r\n            variables: {\r\n                id: reportId\r\n            }\r\n        });\r\n\r\n        await refetch();\r\n    }\r\n\r\n    const handleFilter = (value: string) => {\r\n        const selectedIndex = filters.indexOf(value);\r\n        let newFilters: readonly string[] = [];\r\n    \r\n        if (selectedIndex === -1) {\r\n            newFilters = newFilters.concat(filters, value);\r\n        } else if (selectedIndex === 0) {\r\n            newFilters = newFilters.concat(filters.slice(1));\r\n        } else if (selectedIndex === filters.length - 1) {\r\n            newFilters = newFilters.concat(filters.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newFilters = newFilters.concat(\r\n            filters.slice(0, selectedIndex),\r\n            filters.slice(selectedIndex + 1),\r\n          );\r\n        }\r\n\r\n        setFilters(newFilters);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleRefresh = async () => {\r\n        await refetch();\r\n        onRefresh();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Card>\r\n            <TableToolbar \r\n                filterName={filterName}\r\n                onRefresh={handleRefresh}\r\n                onFilterName={handleFilterByName}\r\n                onFilter={() => setDrawer(!drawer)}\r\n            />\r\n\r\n           <Box sx={{ overflow: 'auto' }}>\r\n                <TableContainer>\r\n                    <Table sx={{ minWidth: 900 }}>\r\n                        <TableHead\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            officeId={officeId}\r\n                            onRequestSort={handleRequestSort}\r\n                            headLabel={[\r\n                                { id: 'name', label: 'Name', width: 250 },\r\n                                { id: 'basis', label: 'Basis' },\r\n                                { id: 'type', label: 'Type' },\r\n                                { id: 'localDue', label: 'Regional Deadline', align: \"right\" },\r\n                                { id: 'nationalDue', label: 'National Deadline', align: \"right\" },\r\n                                { id: 'status', label: 'Status', align: \"right\" },\r\n                                { id: 'id', align: \"right\", width: 20 }\r\n                            ]}\r\n                        />\r\n\r\n                        <TableBody>\r\n                            {visibleRows.map(report => \r\n                                <TableRow \r\n                                    key={report.id}\r\n                                    report={report}\r\n                                    officeId={officeId}\r\n                                    onView={handleView}\r\n                                    onEdit={handleEdit}\r\n                                    onDelete={handleDelete}\r\n                                />\r\n                            )}\r\n\r\n                            {visibleRows.length === 0 &&\r\n                                <TableEmptyRow sx={{ height: 80 }}>\r\n                                    <TableCell align=\"center\" colSpan={6}>\r\n                                        No results found.\r\n                                    </TableCell>\r\n                                </TableEmptyRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n           </Box>\r\n\r\n            <TablePagination\r\n                page={page}\r\n                component=\"div\"\r\n                count={reportList.length}\r\n                rowsPerPage={rowsPerPage}\r\n                onPageChange={handleChangePage}\r\n                rowsPerPageOptions={[10, 25, 50]}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </Card>\r\n\r\n        <Suspense>\r\n            <FilterDrawer\r\n                open={drawer}\r\n                selected={filters}\r\n                onFilter={handleFilter}\r\n                onClose={() => setDrawer(!drawer)}\r\n                onClear={() => setFilters([])}\r\n                filters={[\r\n                    {\r\n                        name: 'Types',\r\n                        options: Array.from(new Set(reportList.map(report => report.type))).map(type => ({\r\n                            value: type,\r\n                            label: capitalCase(type)\r\n                        }))\r\n                    },\r\n                    {\r\n                        name: 'Status',\r\n                        options: Array.from(new Set(reportList.map(report => report.status))).map(status => ({\r\n                            value: status,\r\n                            label: capitalCase(status)\r\n                        }))\r\n                    }\r\n                ]}\r\n            />\r\n        </Suspense>\r\n\r\n        <Suspense>\r\n            <Snackbar \r\n                severity='error' \r\n                message={getError?.message || subscribeError?.message || deleteError?.message} \r\n            />\r\n        </Suspense>\r\n        </>\r\n    )\r\n}","import React, { lazy, useEffect, Suspense } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\nimport { ChartSummary, Iconify, Snackbar } from '../../components';\r\nimport ReportTable from './table';\r\n\r\nimport { useQuery, useSubscription } from '@apollo/client';\r\nimport { SUBSCRIBE_OFFICE_EVENTS } from '../../graphql/users';\r\nimport { GET_REPORT_STATISTICS } from '../../graphql/reports';\r\nimport { ReportType, Role } from '../../__generated__/graphql';\r\n\r\nimport { useAppSelector } from '../../hooks';\r\n\r\nconst FormDialog = lazy(() => import('./form-dialog'));\r\nconst ViewDialog = lazy(() => import('./report-dialog'));\r\n\r\nfunction authorize(role?: Role, office?: string) {\r\n    if (!office) return undefined;\r\n\r\n    if (role && [Role.Superuser, Role.Director, Role.HrAdmin].includes(role)) return undefined;\r\n    else return parseInt(office);\r\n}\r\n\r\nexport function parseType(type?: ReportType): string {\r\n    switch (type) {\r\n        case ReportType.Hr:\r\n            return 'Human Resource Report';\r\n        case ReportType.Admin:\r\n            return 'Administrative Report';\r\n        default:\r\n            return '';\r\n    }\r\n}\r\n\r\nexport default function DeocumentsPage() {\r\n    const { office, role } = useAppSelector((state) => state.auth);\r\n\r\n    const { data: statistics, error: getError, refetch } = useQuery(GET_REPORT_STATISTICS, {\r\n        variables: {\r\n            officeId: authorize(role, office)\r\n        }\r\n    }); \r\n    const { data: officeEvents, error: subscribeError } = useSubscription(SUBSCRIBE_OFFICE_EVENTS);\r\n\r\n    useEffect(() => {\r\n        if (officeEvents) refetch();\r\n    }, [officeEvents, refetch]);\r\n\r\n    const [form, setForm] = React.useState<boolean>(false);\r\n    const [selected, setSelected] = React.useState<number | null>(null);\r\n    const [submission, setSubmission] = React.useState<number | null>(null);\r\n\r\n    const handleForm = () => {\r\n        setForm(!form);\r\n        setSelected(null);\r\n    };\r\n\r\n    const handleViewReport = (reportId: number) => {\r\n        setSubmission(reportId);\r\n    };\r\n\r\n    const handleEditReport = (reportId: number) => {\r\n        setSelected(reportId);\r\n        setForm(true);\r\n    };\r\n\r\n    return (    \r\n        <Container>\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                <Typography variant=\"h4\">Reports</Typography>\r\n\r\n                {authorize(role, office) === undefined && (\r\n                    <Button onClick={handleForm} variant=\"contained\" color=\"inherit\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                        Create\r\n                    </Button>\r\n                )}\r\n            </Stack>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"Total Reports\"\r\n                        total={statistics ? statistics.getReportStatistics.total : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='line-md:document-report-twotone' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"Submitted\"\r\n                        total={statistics ? statistics.getReportStatistics.submitted : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='ep:finished' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"Pending\"\r\n                        total={statistics ? statistics.getReportStatistics.pending : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='fluent-mdl2:processing' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <ChartSummary \r\n                        title=\"Overdue\"\r\n                        total={statistics ? statistics.getReportStatistics.overdue : 0}\r\n                        color=\"success\"\r\n                        icon={<Iconify icon='ic:twotone-warning' sx={{ width: 64, height: 64 }} />}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <ReportTable \r\n                        officeId={authorize(role, office)}\r\n                        onRefresh={() => refetch()} \r\n                        onView={handleViewReport}\r\n                        onEdit={handleEditReport} \r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Suspense>\r\n                <FormDialog reportId={selected} open={form} onClose={handleForm} />\r\n            </Suspense>\r\n            \r\n            {submission && (\r\n                <Suspense>\r\n                    <ViewDialog \r\n                        open={submission !== null} \r\n                        reportId={submission}\r\n                        onClose={() => setSubmission(null)}  \r\n                    />\r\n                </Suspense>\r\n            )}\r\n\r\n            <Snackbar \r\n                severity='error' \r\n                message={getError?.message || subscribeError?.message} \r\n            />\r\n        </Container>\r\n    );\r\n}","import { useState, lazy, Suspense } from 'react';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Popover from '@mui/material/Popover';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport { Label, Iconify, DeleteDialog } from '../../../components';\r\nimport { ReportRow } from '.';\r\n\r\nconst CollapseTable = lazy(() => import('./Collapse'));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function statusColor(status: string) {\r\n  switch (status) {\r\n    case 'Ongoing':\r\n      return 'warning';\r\n    case 'Finished':\r\n      return'success';\r\n    case 'Not Started':\r\n      return 'error';\r\n    default:\r\n      return 'info';\r\n  }\r\n}\r\n\r\nexport default function ReportTableRow({\r\n  officeId,\r\n  report,\r\n  onView,\r\n  onEdit,\r\n  onDelete\r\n}: {\r\n  officeId?: number,\r\n  report: ReportRow,\r\n  onView: (event: React.MouseEvent<unknown>, id: number) => void,\r\n  onEdit: (event: React.MouseEvent<unknown>, id: number) => void,\r\n  onDelete: (event: React.MouseEvent<unknown>, id: number) => void\r\n}) {\r\n  const [open, setOpen] = useState<HTMLButtonElement | null>(null);\r\n  const [dialog, setDialog] = useState<boolean>(false);\r\n  const [collapse, setCollapse] = useState<boolean>(false);\r\n\r\n  const handleViewReport = (event: React.MouseEvent<unknown>) => {\r\n    onView(event, report.id);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleEditReport = (event: React.MouseEvent<unknown>) => {\r\n    onEdit(event, report.id);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleDeleteReport = (event: React.MouseEvent<unknown>) => {\r\n    onDelete(event, report.id);\r\n    setOpen(null);\r\n    setDialog(false);\r\n  };\r\n\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover tabIndex={-1} role=\"checkbox\">\r\n        {officeId === undefined && (\r\n          <TableCell>\r\n            <IconButton\r\n              aria-label=\"expand row\"\r\n              size=\"small\"\r\n              onClick={() => setCollapse(!collapse)}\r\n            >\r\n              {collapse ? <Iconify icon=\"ic:baseline-expand-less\" /> : <Iconify icon=\"material-symbols:expand-more\" />}\r\n            </IconButton>\r\n          </TableCell>\r\n        )}\r\n        \r\n\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n            <Typography variant=\"subtitle2\">\r\n              {report.name}\r\n            </Typography>\r\n          </Stack>\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ minWidth: 150 }}>\r\n          {report.basis}\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          {report.type}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 120 }}>\r\n          {new Date(report.localDue).toLocaleDateString(undefined, {\r\n            month: 'short',\r\n            day: 'numeric',\r\n            year: 'numeric'\r\n          })}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 120 }}>\r\n          {new Date(report.nationalDue).toLocaleDateString(undefined, {\r\n            month: 'short',\r\n            day: 'numeric',\r\n            year: 'numeric'\r\n          })}\r\n        </TableCell>\r\n\r\n        {officeId === undefined ? (\r\n          <TableCell align=\"right\" sx={{ width: 50 }}>\r\n            <Label color={report.pending > 0 ? \"warning\" : \"success\"}>\r\n              {report.pending > 0 ? `${report.pending} Pending` : \"Complied\"}\r\n            </Label>\r\n          </TableCell>\r\n        ) : (\r\n          <TableCell align=\"right\" sx={{ width: 50 }}>\r\n            <Label color={statusColor(report.status)}>{report.status}</Label>\r\n          </TableCell>\r\n        )}\r\n\r\n        <TableCell align=\"right\" sx={{ width: 30 }}>\r\n          <IconButton onClick={handleOpenMenu}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      \r\n      {officeId === undefined && (\r\n        <Suspense>\r\n          <CollapseTable \r\n            collapse={collapse}\r\n            reportId={report.id} \r\n            onView={onView}\r\n          />\r\n        </Suspense>\r\n      )}\r\n\r\n      <Popover\r\n        open={!!open}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: { width: 200 },\r\n        }}\r\n      >\r\n        {officeId && (\r\n          <MenuItem onClick={handleViewReport}>\r\n            <Iconify icon=\"fluent-mdl2:review-solid\" sx={{ mr: 2 }} />\r\n              Submit\r\n          </MenuItem>\r\n        )}\r\n\r\n        {officeId === undefined && (\r\n          <MenuItem onClick={handleEditReport}>\r\n            <Iconify icon=\"eva:edit-fill\" sx={{ mr: 2 }} />\r\n              Edit\r\n          </MenuItem>\r\n        )}\r\n\r\n        {officeId === undefined && (\r\n          <MenuItem onClick={() => setDialog(true)} sx={{ color: 'error.main' }}>\r\n            <Iconify icon=\"eva:trash-2-outline\" sx={{ mr: 2 }} />\r\n              Delete\r\n          </MenuItem>\r\n        )}\r\n      </Popover>\r\n\r\n      <DeleteDialog \r\n        open={dialog}\r\n        onClose={() => setDialog(false)}\r\n        onDelete={handleDeleteReport}\r\n      />\r\n    </>\r\n  );\r\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["DocumentTableToolbar","_ref","filterName","onRefresh","onFilter","onFilterName","_jsxs","Toolbar","sx","height","display","justifyContent","p","theme","spacing","children","_jsx","OutlinedInput","value","onChange","placeholder","startAdornment","InputAdornment","position","Iconify","icon","color","width","Stack","direction","Tooltip","title","IconButton","onClick","ReportTableHead","order","orderBy","officeId","headLabel","onRequestSort","TableHead","TableRow","undefined","TableCell","map","headCell","align","sortDirection","id","minWidth","TableSortLabel","hideSortIcon","active","property","event","label","Box","border","margin","padding","overflow","whiteSpace","clip","Snackbar","lazy","FilterDrawer","descendingComparator","a","b","ReportTable","onView","onEdit","data","reports","error","getError","refetch","useQuery","GET_SUBMISSIONS","variables","officeEvents","subscribeError","useSubscription","SUBSCRIBE_OFFICE_EVENTS","drawer","setDrawer","useState","filters","setFilters","page","setPage","setOrder","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","reportList","setReportList","deleteReport","deleteError","useMutation","DELETE_SUBMISSION","useEffect","getSubmittedReports","report","parseInt","name","basis","type","parseType","localDue","nationalDue","status","capitalCase","reportId","pending","visibleRows","useMemo","array","comparator","stabilizedThis","el","index","sort","stableSort","filter","includes","length","getComparator","slice","handleView","handleEdit","handleDelete","async","_Fragment","Card","TableToolbar","target","TableContainer","Table","handleRequestSort","TableBody","onDelete","TableEmptyRow","colSpan","TablePagination","component","count","onPageChange","handleChangePage","rowsPerPageOptions","onRowsPerPageChange","Suspense","open","selected","selectedIndex","indexOf","newFilters","concat","onClose","onClear","options","Array","from","Set","severity","message","FormDialog","ViewDialog","authorize","role","office","Role","Superuser","Director","HrAdmin","ReportType","Hr","Admin","DeocumentsPage","useAppSelector","state","auth","statistics","GET_REPORT_STATISTICS","form","setForm","React","setSelected","submission","setSubmission","handleForm","Container","alignItems","mb","Typography","variant","Button","startIcon","Grid","container","item","xs","sm","md","ChartSummary","total","getReportStatistics","submitted","overdue","CollapseTable","statusColor","ReportTableRow","setOpen","dialog","setDialog","collapse","setCollapse","hover","tabIndex","size","scope","Date","toLocaleDateString","month","day","year","Label","currentTarget","Popover","anchorEl","handleCloseMenu","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","MenuItem","mr","DeleteDialog","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","arguments","createStyledComponent","useThemeProps","componentName","ContainerRoot","_extends","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref3","Math","max","ref","className","other","_objectWithoutPropertiesLoose","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled"],"sourceRoot":""}