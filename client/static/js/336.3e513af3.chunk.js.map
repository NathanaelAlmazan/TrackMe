{"version":3,"file":"static/js/336.3e513af3.chunk.js","mappings":"ySAyBA,MAAMA,EAA2B,CAC7BC,KAAM,GACNC,MAAO,GACPC,UAAW,OACXC,KAAM,MAGK,SAASC,EAAUC,GAQ9B,IAR+B,SAC/BC,EAAQ,KACRC,EAAI,QACJC,GAKHH,EACG,MAAOI,GAAiBC,MAAOC,KAAcC,EAAAA,EAAAA,GAAaC,EAAAA,GAAkB,CACxEC,YAAa,cAGVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAqBlB,IAC9CmB,EAAeC,IAAoBF,EAAAA,EAAAA,UAAgBG,IAAM,IAAIC,QAC7DC,EAAkBC,IAAuBN,EAAAA,EAAAA,UAAgBG,IAAM,IAAIC,QAEpE,KAAErB,EAAI,MAAEC,EAAK,UAAEC,EAAS,KAAEC,GAASY,GAElCS,GAAgBd,MAAOe,KAAiBC,EAAAA,EAAAA,GAAYC,EAAAA,KACpDC,GAAgBlB,MAAOmB,KAAiBH,EAAAA,EAAAA,GAAYI,EAAAA,KAE3DC,EAAAA,EAAAA,YAAU,KACFzB,EACAG,EAAc,CAAEuB,UAAW,CAAEC,GAAI3B,KAAc4B,MAAKC,IAAe,IAAd,KAAEC,GAAMD,EACrDC,IACApB,EAAY,CACRhB,KAAMoC,EAAK3B,cAAcT,KACzBC,MAAOmC,EAAK3B,cAAcR,MAC1BC,UAAWkC,EAAK3B,cAAcP,UAC9BC,KAAMiC,EAAK3B,cAAcN,OAG7BgB,EAAiBC,IAAM,IAAIC,KAAKe,EAAK3B,cAAc4B,YACnDd,EAAoBH,IAAM,IAAIC,KAAKe,EAAK3B,cAAc6B,eAC1D,KAGJtB,EAAYjB,GACZoB,EAAiBC,IAAM,IAAIC,OAC3BE,EAAoBH,IAAM,IAAIC,OAClC,GACD,CAACf,EAAUG,IAEd,MAAM8B,EAAoBC,IACtBxB,EAAY,IACRD,EACA,CAACyB,EAAEC,OAAOzC,MAAOwC,EAAEC,OAAOC,OAC5B,EAiDN,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACxC,KAAMA,EAAMC,QAASA,EAASwC,SAAS,KAAKC,WAAS,EAAAJ,UACzDF,EAAAA,EAAAA,MAAA,QAAMO,SAvCOC,UACjBX,EAAEY,iBAEE9C,QACMsB,EAAa,CACfI,UAAW,CACPC,GAAI3B,EACJN,OACAC,QACAE,KAAMA,EACND,UAAWA,EACXmC,SAAUnB,EAAcmC,cACxBf,YAAahB,EAAiB+B,uBAIhC7B,EAAa,CACfQ,UAAW,CACPhC,OACAC,QACAE,KAAMA,EACND,UAAWA,EACXmC,SAAUnB,EAAcmC,cACxBf,YAAahB,EAAiB+B,iBAM1CrC,EAAYjB,GACZoB,EAAiBC,IAAM,IAAIC,OAC3BE,EAAoBH,IAAM,IAAIC,OAE9Bb,GAAS,EAMwBqC,SAAA,EAC7BC,EAAAA,EAAAA,KAACQ,EAAAA,EAAW,CAAAT,SAAEvC,EAAW,cAAgB,mBACzCwC,EAAAA,EAAAA,KAACS,EAAAA,EAAa,CAAAV,UACVF,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,GAAI,CAAEC,GAAI,GAAIf,SAAA,EACtCC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAGjB,UACdC,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACN/D,KAAK,OACLgE,MAAM,cACNC,QAAQ,WACRvB,MAAO1C,EACPkE,SAAU3B,EACVU,WAAS,EACTkB,UAAQ,OAIhBrB,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAGjB,UACdC,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACN/D,KAAK,QACLgE,MAAM,eACNC,QAAQ,WACRvB,MAAOzC,EACPiE,SAAU3B,EACVU,WAAS,EACTkB,UAAQ,OAIhBrB,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAGC,GAAI,EAAExB,UAC5BC,EAAAA,EAAAA,KAACwB,EAAAA,GAAU,CACPN,MAAM,yBACNtB,MAAOxB,EACPgD,SAjFWK,IAC1BA,GACLpD,EAAiBoD,EAAS,OAmFdzB,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAGC,GAAI,EAAExB,UAC5BC,EAAAA,EAAAA,KAACwB,EAAAA,GAAU,CACPN,MAAM,yBACNtB,MAAOpB,EACP4C,SApFcK,IAC7BA,GACLhD,EAAoBgD,EAAS,OAsFjBzB,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAGC,GAAI,EAAExB,UAC5BF,EAAAA,EAAAA,MAACoB,EAAAA,EAAS,CACN/D,KAAK,YACLwE,QAAM,EACNR,MAAM,YACNC,QAAQ,WACRvB,MAAOxC,EACPgE,SAAU3B,EACV4B,UAAQ,EACRlB,WAAS,EAAAJ,SAAA,EAETC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAAC/B,MAAM,OAAMG,SAAC,UAGvBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAAC/B,MAAM,SAAQG,SAAC,YAGzBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAAC/B,MAAM,UAASG,SAAC,aAG1BC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAAC/B,MAAM,YAAWG,SAAC,eAG5BC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAAC/B,MAAM,SAAQG,SAAC,iBAMjCC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAGC,GAAI,EAAExB,UAC5BF,EAAAA,EAAAA,MAACoB,EAAAA,EAAS,CACN/D,KAAK,OACLwE,QAAM,EACNR,MAAM,cACNC,QAAQ,WACRvB,MAAOvC,EACP+D,SAAU3B,EACV4B,UAAQ,EACRlB,WAAS,EAAAJ,SAAA,EAETC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAAC/B,MAAM,KAAIG,SAAC,2BAGrBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAAC/B,MAAM,QAAOG,SAAC,qCAQxCC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAa,CAAA7B,UACVF,EAAAA,EAAAA,MAACgC,EAAAA,EAAK,CAACC,UAAU,MAAMlB,QAAS,EAAEb,SAAA,EAC9BC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAACC,QAAStE,EAASuE,MAAM,UAASlC,SAAC,YAG1CC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAACZ,QAAQ,YAAYc,MAAM,UAAU5E,KAAK,SAAQ0C,SAAC,oBAQtEC,EAAAA,EAAAA,KAACkC,EAAAA,GAAQ,CACLC,SAAS,QACTC,SAAoB,OAAXzD,QAAW,IAAXA,OAAW,EAAXA,EAAayD,WAAmB,OAARvE,QAAQ,IAARA,OAAQ,EAARA,EAAUuE,WAAsB,OAAXrD,QAAW,IAAXA,OAAW,EAAXA,EAAaqD,aAK/E,C,oJCnPA,MAAMC,EAAY,CAAC,YAAa,MAoB1BC,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAY,CACzCtF,KAAM,iBACNuF,KAAM,OACNC,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAHvBN,CAIrB,CACDO,QAAS,YACTC,KAAM,aAoDR,EAlDiCC,EAAAA,YAAiB,SAAqBC,EAASC,GAC9E,MAAMP,GAAQQ,EAAAA,EAAAA,GAAc,CAC1BR,MAAOM,EACP/F,KAAM,oBAEF,UACFkG,EACAjE,GAAIkE,GACFV,EACJW,GAAQC,EAAAA,EAAAA,GAA8BZ,EAAON,GACzCmB,EAAab,EACbc,EA5BkBD,KACxB,MAAM,QACJC,GACED,EAIJ,OAAOE,EAAAA,EAAAA,GAHO,CACZb,KAAM,CAAC,SAEoBc,EAAAA,EAA4BF,EAAQ,EAqBjDG,CAAkBJ,IAC5B,QACJK,EAAUR,GACRL,EAAAA,WAAiBc,EAAAA,GACrB,OAAoB9D,EAAAA,EAAAA,KAAKsC,GAAiByB,EAAAA,EAAAA,GAAS,CACjDC,UAAW,KACXZ,WAAWa,EAAAA,EAAAA,GAAKR,EAAQZ,KAAMO,GAC9BI,WAAYA,EACZN,IAAKA,EACL/B,QAAS,KACThC,GAAc,MAAVkE,EAAiBA,EAASQ,GAC7BP,GACL,G","sources":["sections/reports/form-dialog/index.tsx","../node_modules/@mui/material/DialogTitle/DialogTitle.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nimport dayjs, { Dayjs } from 'dayjs';\r\nimport { DatePicker, Snackbar } from '../../../components';\r\nimport { CREATE_REPORT, GET_REPORT_BY_ID, UPDATE_REPORT } from '../../../graphql/reports';\r\nimport { useLazyQuery, useMutation } from '@apollo/client';\r\nimport { Frequency, ReportType } from '../../../__generated__/graphql';\r\n\r\ninterface ReportForm {\r\n    name: string;\r\n    basis: string;\r\n    frequency: \"NONE\" | \"WEEKLY\" | \"QUARTERLY\" | \"MONTHLY\" | \"YEARLY\";\r\n    type: \"HR\" | \"ADMIN\";\r\n}\r\n\r\nconst formDefaults: ReportForm = {\r\n    name: '',\r\n    basis: '',\r\n    frequency: \"NONE\",\r\n    type: \"HR\"\r\n}\r\n\r\nexport default function FormDialog({\r\n    reportId,\r\n    open,\r\n    onClose\r\n}: {\r\n    reportId?: number | null,\r\n    open: boolean,\r\n    onClose: () => void\r\n}) {\r\n    const [getReportById, { error: getError }] = useLazyQuery(GET_REPORT_BY_ID, {\r\n        fetchPolicy: 'no-cache'\r\n    }); \r\n\r\n    const [formData, setFormData] = useState<ReportForm>(formDefaults);\r\n    const [localDeadline, setLocalDeadline] = useState<Dayjs>(dayjs(new Date()));\r\n    const [nationalDeadline, setNationalDeadline] = useState<Dayjs>(dayjs(new Date()));\r\n\r\n    const { name, basis, frequency, type } = formData;\r\n\r\n    const [createReport, { error: createError }] = useMutation(CREATE_REPORT);\r\n    const [updateReport, { error: updateError }] = useMutation(UPDATE_REPORT);\r\n\r\n    useEffect(() => {\r\n        if (reportId) {\r\n            getReportById({ variables: { id: reportId } }).then(({ data }) => {\r\n                if (data) {\r\n                    setFormData({\r\n                        name: data.getReportById.name,\r\n                        basis: data.getReportById.basis,\r\n                        frequency: data.getReportById.frequency,\r\n                        type: data.getReportById.type\r\n                    });\r\n\r\n                    setLocalDeadline(dayjs(new Date(data.getReportById.localDue)));\r\n                    setNationalDeadline(dayjs(new Date(data.getReportById.nationalDue)));\r\n                }\r\n            });\r\n        } else {\r\n            setFormData(formDefaults);\r\n            setLocalDeadline(dayjs(new Date()));\r\n            setNationalDeadline(dayjs(new Date()));\r\n        }\r\n    }, [reportId, getReportById])\r\n\r\n    const handleFormChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({\r\n         ...formData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const handleLocalDeadlineChange = (newValue: Dayjs | null) => {\r\n        if (!newValue) return;\r\n        setLocalDeadline(newValue);\r\n    }\r\n\r\n    const handleNationalDeadlineChange = (newValue: Dayjs | null) => {\r\n        if (!newValue) return;\r\n        setNationalDeadline(newValue);\r\n    }\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (reportId) {\r\n            await updateReport({\r\n                variables: {\r\n                    id: reportId,\r\n                    name,\r\n                    basis,\r\n                    type: type as ReportType,\r\n                    frequency: frequency as Frequency,\r\n                    localDue: localDeadline.toISOString(),\r\n                    nationalDue: nationalDeadline.toISOString()\r\n                }\r\n            });\r\n        } else {\r\n            await createReport({\r\n                variables: {\r\n                    name,\r\n                    basis,\r\n                    type: type as ReportType,\r\n                    frequency: frequency as Frequency,\r\n                    localDue: localDeadline.toISOString(),\r\n                    nationalDue: nationalDeadline.toISOString()\r\n                }\r\n            });\r\n        }\r\n\r\n        // reset form\r\n        setFormData(formDefaults);\r\n        setLocalDeadline(dayjs(new Date()));\r\n        setNationalDeadline(dayjs(new Date()));\r\n\r\n        onClose(); // close dialog\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Dialog open={open} onClose={onClose} maxWidth='sm' fullWidth>\r\n            <form onSubmit={handleSubmit}>\r\n            <DialogTitle>{reportId ? \"Edit Report\" : \"Create Report\"}</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container spacing={3} sx={{ pt: 2 }}>\r\n                    <Grid item xs={12}>\r\n                        <TextField \r\n                            name='name'\r\n                            label='Report Name'\r\n                            variant='outlined'\r\n                            value={name}\r\n                            onChange={handleFormChange}\r\n                            fullWidth\r\n                            required\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField \r\n                            name='basis'\r\n                            label='Report Basis'\r\n                            variant='outlined'\r\n                            value={basis}\r\n                            onChange={handleFormChange}\r\n                            fullWidth\r\n                            required\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <DatePicker \r\n                            label='Next Regional Deadline'\r\n                            value={localDeadline}\r\n                            onChange={handleLocalDeadlineChange}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <DatePicker \r\n                            label='Next National Deadline'\r\n                            value={nationalDeadline}\r\n                            onChange={handleNationalDeadlineChange}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <TextField\r\n                            name='frequency'\r\n                            select\r\n                            label=\"Frequency\"\r\n                            variant='outlined'\r\n                            value={frequency}\r\n                            onChange={handleFormChange}\r\n                            required\r\n                            fullWidth\r\n                        >\r\n                            <MenuItem value=\"NONE\">\r\n                                None\r\n                            </MenuItem>\r\n                            <MenuItem value=\"WEEKLY\">\r\n                                Weekly\r\n                            </MenuItem>\r\n                            <MenuItem value=\"MONTHLY\">\r\n                                Monthly\r\n                            </MenuItem>\r\n                            <MenuItem value=\"QUARTERLY\">\r\n                                Quarterly\r\n                            </MenuItem>\r\n                            <MenuItem value=\"YEARLY\">\r\n                                Yearly\r\n                            </MenuItem>\r\n                        </TextField>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <TextField\r\n                            name='type'\r\n                            select\r\n                            label=\"Report Type\"\r\n                            variant='outlined'\r\n                            value={type}\r\n                            onChange={handleFormChange}\r\n                            required\r\n                            fullWidth\r\n                        >\r\n                            <MenuItem value=\"HR\">\r\n                                Human Resource Report\r\n                            </MenuItem>\r\n                            <MenuItem value=\"ADMIN\">\r\n                                Administrative Report\r\n                            </MenuItem>\r\n                        </TextField>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Stack direction='row' spacing={2}>\r\n                    <Button onClick={onClose} color='inherit'>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant='contained' color='inherit' type='submit'>\r\n                        Save\r\n                    </Button>\r\n                </Stack>\r\n            </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n\r\n        <Snackbar \r\n            severity='error' \r\n            message={createError?.message || getError?.message || updateError?.message} \r\n        />\r\n\r\n        </>\r\n    );\r\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp != null ? idProp : titleId\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;"],"names":["formDefaults","name","basis","frequency","type","FormDialog","_ref","reportId","open","onClose","getReportById","error","getError","useLazyQuery","GET_REPORT_BY_ID","fetchPolicy","formData","setFormData","useState","localDeadline","setLocalDeadline","dayjs","Date","nationalDeadline","setNationalDeadline","createReport","createError","useMutation","CREATE_REPORT","updateReport","updateError","UPDATE_REPORT","useEffect","variables","id","then","_ref2","data","localDue","nationalDue","handleFormChange","e","target","value","_jsxs","_Fragment","children","_jsx","Dialog","maxWidth","fullWidth","onSubmit","async","preventDefault","toISOString","DialogTitle","DialogContent","Grid","container","spacing","sx","pt","item","xs","TextField","label","variant","onChange","required","sm","md","DatePicker","newValue","select","MenuItem","DialogActions","Stack","direction","Button","onClick","color","Snackbar","severity","message","_excluded","DialogTitleRoot","styled","Typography","slot","overridesResolver","props","styles","root","padding","flex","React","inProps","ref","useThemeProps","className","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","titleId","DialogContext","_extends","component","clsx"],"sourceRoot":""}