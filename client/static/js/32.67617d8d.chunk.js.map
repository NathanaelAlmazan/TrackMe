{"version":3,"file":"static/js/32.67617d8d.chunk.js","mappings":"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","sources":["sections/documents/table/Toolbar.tsx","sections/documents/table/Head.tsx","sections/documents/table/Row.tsx","sections/documents/table/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport { Iconify } from '../../../components';\r\n\r\nexport default function DocumentTableToolbar({\r\n  filterName,\r\n  onRefresh,\r\n  onFilter,\r\n  onFilterName \r\n}: { \r\n  filterName: string, \r\n  onRefresh: () => void,\r\n  onFilter: () => void,\r\n  onFilterName: (event: React.ChangeEvent<HTMLInputElement>) => void }\r\n) {\r\n    return (\r\n      <Toolbar\r\n        sx={{\r\n          height: 96,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          p: (theme) => theme.spacing(0, 1, 0, 3)\r\n        }}\r\n      >\r\n        <OutlinedInput\r\n          value={filterName}\r\n          onChange={onFilterName}\r\n          placeholder=\"Search...\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Iconify\r\n                icon=\"eva:search-fill\"\r\n                sx={{ color: 'text.disabled', width: 20, height: 20 }}\r\n              />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n  \r\n        <Stack direction='row'>\r\n          <Tooltip title=\"Filter\">\r\n            <IconButton onClick={onFilter}>\r\n              <Iconify icon=\"fluent:filter-20-filled\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Refresh\">\r\n            <IconButton onClick={onRefresh}>\r\n              <Iconify icon=\"mdi:refresh\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Stack>\r\n      </Toolbar>\r\n    );\r\n}\r\n","import Box from '@mui/material/Box';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\n\r\nimport { DocumentRow } from '.';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DocumentTableHead({\r\n    order,\r\n    orderBy,\r\n    headLabel,\r\n    onRequestSort\r\n}: {\r\n    order: \"asc\" | \"desc\",\r\n    orderBy: string,\r\n    headLabel: { \r\n        id: keyof DocumentRow, \r\n        label?: string, \r\n        width?: number,\r\n        minWidth?: number,\r\n        align?: \"center\" | \"left\" | \"right\" | \"justify\" | \"inherit\" \r\n    }[],\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof DocumentRow) => void\r\n}) {\r\n  const createSortHandler =\r\n  (property: keyof DocumentRow) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box sx={{\r\n                    border: 0,\r\n                    margin: -1,\r\n                    padding: 0,\r\n                    width: '1px',\r\n                    height: '1px',\r\n                    overflow: 'hidden',\r\n                    position: 'absolute',\r\n                    whiteSpace: 'nowrap',\r\n                    clip: 'rect(0 0 0 0)',\r\n                }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}","import { useState } from \"react\";\r\n\r\nimport Popover from \"@mui/material/Popover\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport { DocumentRow } from \".\";\r\nimport { Label, Iconify, DeleteDialog } from \"../../../components\";\r\nimport { capitalCase } from \"change-case\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction statusColor(status: string) {\r\n  const category = status.toLowerCase();\r\n  if (category.includes(\"ongoing\") || category.includes(\"referred\"))\r\n    return \"warning\";\r\n  else if (category.includes(\"finished\")) return \"success\";\r\n  else return \"info\";\r\n}\r\n\r\nexport default function DocumentTableRow({\r\n  officeId,\r\n  document,\r\n  onView,\r\n  onEdit,\r\n  onDelete,\r\n}: {\r\n  officeId?: number;\r\n  document: DocumentRow;\r\n  onView: (event: React.MouseEvent<unknown>, id: string) => void;\r\n  onEdit: (event: React.MouseEvent<unknown>, id: string) => void;\r\n  onDelete: (event: React.MouseEvent<unknown>, id: string) => void;\r\n}) {\r\n  const [open, setOpen] = useState<HTMLButtonElement | null>(null);\r\n  const [dialog, setDialog] = useState<boolean>(false);\r\n\r\n  const handleViewDocument = (event: React.MouseEvent<unknown>) => {\r\n    onView(event, document.referenceNum);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleEditDocument = (event: React.MouseEvent<unknown>) => {\r\n    onEdit(event, document.referenceNum);\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleDeleteDocument = (event: React.MouseEvent<unknown>) => {\r\n    onDelete(event, document.referenceNum);\r\n    setOpen(null);\r\n    setDialog(false);\r\n  };\r\n\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover tabIndex={-1} role=\"checkbox\">\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          <Typography variant=\"subtitle2\" noWrap>\r\n            {`#${document.referenceNum}`}\r\n          </Typography>\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ minWidth: 250 }}>\r\n          <Typography variant=\"body2\">\r\n            {document.subject.length > 255\r\n              ? `${document.subject.slice(0, 255)}...`\r\n              : document.subject}\r\n          </Typography>\r\n          {document.tag && <Label color=\"info\">{document.tag}</Label>}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ minWidth: 150 }}>\r\n          {document.dateCreated}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\">{document.receivedFrom}</TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ maxWidth: 200 }}>\r\n          {document.referredTo}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 50 }}>\r\n          <Label color={statusColor(document.status)}>\r\n            {capitalCase(document.status)}\r\n          </Label>\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ width: 30 }}>\r\n          <IconButton onClick={handleOpenMenu}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <Popover\r\n        open={!!open}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        PaperProps={{\r\n          sx: { width: 140 },\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleViewDocument}>\r\n          <Iconify icon=\"fluent-mdl2:review-solid\" sx={{ mr: 2 }} />\r\n          View\r\n        </MenuItem>\r\n\r\n        {officeId === undefined && (\r\n          <MenuItem onClick={handleEditDocument}>\r\n            <Iconify icon=\"eva:edit-fill\" sx={{ mr: 2 }} />\r\n            Edit\r\n          </MenuItem>\r\n        )}\r\n\r\n        {officeId === undefined && (\r\n          <MenuItem\r\n            onClick={() => setDialog(true)}\r\n            sx={{ color: \"error.main\" }}\r\n          >\r\n            <Iconify icon=\"eva:trash-2-outline\" sx={{ mr: 2 }} />\r\n            Delete\r\n          </MenuItem>\r\n        )}\r\n      </Popover>\r\n\r\n      <DeleteDialog\r\n        open={dialog}\r\n        onClose={() => setDialog(false)}\r\n        onDelete={handleDeleteDocument}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect, useMemo, lazy, Suspense } from \"react\";\r\n\r\nimport Card from \"@mui/material/Card\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableEmptyRow from \"@mui/material/TableRow\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableToolbar from \"./Toolbar\";\r\nimport TableHead from \"./Head\";\r\nimport TableRow from \"./Row\";\r\n\r\nimport { capitalCase } from \"change-case\";\r\nimport { useMutation, useQuery, useSubscription } from \"@apollo/client\";\r\nimport { GET_DOCUMENTS, DELETE_DOCUMENT } from \"../../../graphql/documents\";\r\nimport { SUBSCRIBE_OFFICE_EVENTS } from \"../../../graphql/users\";\r\n\r\nconst Snackbar = lazy(() => import(\"../../../components/Snackbar\"));\r\nconst FilterDrawer = lazy(() => import(\"../../../components/Filter\"));\r\n\r\nexport interface DocumentRow {\r\n  referenceNum: string;\r\n  subject: string;\r\n  receivedFrom: string;\r\n  status: string;\r\n  referredTo: string;\r\n  dateCreated: string;\r\n  tag: string;\r\n}\r\n\r\nexport function formatReferrals(offices: string[]): string {\r\n  return offices\r\n    .map((office) => {\r\n      return office\r\n        .split(\" \")\r\n        .map((word) => {\r\n          if (isNaN(parseInt(word))) return word.charAt(0).toUpperCase();\r\n          else return `-${parseInt(word).toString()}`;\r\n        })\r\n        .join(\"\");\r\n    })\r\n    .join(\", \");\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\ntype Order = \"asc\" | \"desc\";\r\n\r\nfunction getComparator<Key extends keyof DocumentRow>(\r\n  order: Order,\r\n  orderBy: Key\r\n): (\r\n  a: { [key in Key]: number | string },\r\n  b: { [key in Key]: number | string }\r\n) => number {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort<T>(\r\n  array: readonly T[],\r\n  comparator: (a: T, b: T) => number\r\n) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function DocumentTable({\r\n  officerId,\r\n  officeId,\r\n  onRefresh,\r\n  onView,\r\n  onEdit,\r\n}: {\r\n  officerId: string;\r\n  officeId?: number;\r\n  onRefresh: () => void;\r\n  onView: (referenceNum: string) => void;\r\n  onEdit: (referenceNum: string) => void;\r\n}) {\r\n  const {\r\n    data: documents,\r\n    error: getError,\r\n    refetch,\r\n  } = useQuery(GET_DOCUMENTS, {\r\n    variables: {\r\n      officerId,\r\n    },\r\n  });\r\n  const { data: officeEvents, error: subscribeError } = useSubscription(\r\n    SUBSCRIBE_OFFICE_EVENTS\r\n  );\r\n\r\n  const [drawer, setDrawer] = useState<boolean>(false);\r\n  const [filters, setFilters] = useState<readonly string[]>([]);\r\n  const [page, setPage] = useState<number>(0);\r\n  const [order, setOrder] = useState<Order>(\"asc\");\r\n  const [orderBy, setOrderBy] = useState<keyof DocumentRow>(\"referenceNum\");\r\n  const [filterName, setFilterName] = useState<string>(\"\");\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [documentList, setDocumentList] = useState<DocumentRow[]>([]);\r\n\r\n  const [deleteDocument, { error: deleteError }] = useMutation(DELETE_DOCUMENT);\r\n\r\n  useEffect(() => {\r\n    if (documents) {\r\n      setDocumentList(\r\n        documents.getDocuments.map((doc) => ({\r\n          referenceNum: doc.referenceNum,\r\n          subject: doc.subject,\r\n          receivedFrom: doc.receivedFrom,\r\n          referredTo:\r\n            doc.directorAssigned.length > 0\r\n              ? doc.directorAssigned\r\n                  .map((officer) => `${officer.firstName} ${officer.lastName}`)\r\n                  .join(\", \")\r\n              : formatReferrals(doc.referredTo.map((ref) => ref.office.name)),\r\n          dateCreated: new Date(doc.dateCreated).toLocaleDateString(undefined, {\r\n            month: \"short\",\r\n            day: \"numeric\",\r\n            year: \"numeric\",\r\n          }),\r\n          status: officeId\r\n            ? `${\r\n                doc.referredTo.find(\r\n                  (ref) => parseInt(ref.office.id) === officeId\r\n                )?.status.category || \"REFERRED\"\r\n              }`\r\n            : doc.status,\r\n          tag: doc.tag ? capitalCase(doc.tag) : \"\",\r\n        }))\r\n      );\r\n    }\r\n  }, [documents, officeId]);\r\n\r\n  useEffect(() => {\r\n    if (officeEvents) refetch();\r\n  }, [officeEvents, refetch]);\r\n\r\n  const visibleRows = useMemo(\r\n    () =>\r\n      stableSort<DocumentRow>(\r\n        documentList.filter(\r\n          (document) =>\r\n            (document.referenceNum.includes(filterName) ||\r\n              document.subject.includes(filterName) ||\r\n              filterName.length === 0) &&\r\n            (filters.includes(document.status.replace(/\\d+/g, \"\")) ||\r\n              filters.includes(document.tag) ||\r\n              filters.length === 0)\r\n        ),\r\n        getComparator(order, orderBy)\r\n      ).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage),\r\n    [documentList, filterName, order, orderBy, page, rowsPerPage, filters]\r\n  );\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\r\n    page: number\r\n  ) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleFilterByName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPage(0);\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof DocumentRow\r\n  ) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleView = (event: React.MouseEvent<unknown>, id: string) =>\r\n    onView(id);\r\n  const handleEdit = (event: React.MouseEvent<unknown>, id: string) =>\r\n    onEdit(id);\r\n\r\n  const handleDelete = async (event: React.MouseEvent<unknown>, id: string) => {\r\n    await deleteDocument({\r\n      variables: {\r\n        referenceNum: id,\r\n      },\r\n    });\r\n\r\n    await refetch();\r\n  };\r\n\r\n  const handleFilter = (value: string) => {\r\n    const selectedIndex = filters.indexOf(value);\r\n    let newFilters: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newFilters = newFilters.concat(filters, value);\r\n    } else if (selectedIndex === 0) {\r\n      newFilters = newFilters.concat(filters.slice(1));\r\n    } else if (selectedIndex === filters.length - 1) {\r\n      newFilters = newFilters.concat(filters.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newFilters = newFilters.concat(\r\n        filters.slice(0, selectedIndex),\r\n        filters.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setFilters(newFilters);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    await refetch();\r\n    onRefresh();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <TableToolbar\r\n          filterName={filterName}\r\n          onRefresh={handleRefresh}\r\n          onFilterName={handleFilterByName}\r\n          onFilter={() => setDrawer(!drawer)}\r\n        />\r\n\r\n        <Box sx={{ overflow: \"auto\" }}>\r\n          <TableContainer>\r\n            <Table sx={{ minWidth: 900 }}>\r\n              <TableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n                headLabel={[\r\n                  { id: \"referenceNum\", label: \"Reference\" },\r\n                  { id: \"subject\", label: \"Subject\", width: 250 },\r\n                  { id: \"dateCreated\", label: \"Date\", align: \"right\" },\r\n                  {\r\n                    id: \"receivedFrom\",\r\n                    label: \"Received From\",\r\n                    align: \"right\",\r\n                  },\r\n                  { id: \"referredTo\", label: \"Referred To\", align: \"right\" },\r\n                  { id: \"status\", label: \"Status\", align: \"right\", width: 50 },\r\n                  { id: \"tag\", align: \"right\", width: 20 },\r\n                ]}\r\n              />\r\n\r\n              <TableBody>\r\n                {visibleRows.map((document) => (\r\n                  <TableRow\r\n                    key={document.referenceNum}\r\n                    officeId={officeId}\r\n                    document={document}\r\n                    onView={handleView}\r\n                    onEdit={handleEdit}\r\n                    onDelete={handleDelete}\r\n                  />\r\n                ))}\r\n\r\n                {visibleRows.length === 0 && (\r\n                  <TableEmptyRow sx={{ height: 80 }}>\r\n                    <TableCell align=\"center\" colSpan={6}>\r\n                      No results found.\r\n                    </TableCell>\r\n                  </TableEmptyRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n\r\n        <TablePagination\r\n          page={page}\r\n          component=\"div\"\r\n          count={documentList.length}\r\n          rowsPerPage={rowsPerPage}\r\n          onPageChange={handleChangePage}\r\n          rowsPerPageOptions={[10, 25, 50]}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Card>\r\n\r\n      <Suspense>\r\n        <FilterDrawer\r\n          open={drawer}\r\n          selected={filters}\r\n          onFilter={handleFilter}\r\n          onClose={() => setDrawer(!drawer)}\r\n          onClear={() => setFilters([])}\r\n          filters={[\r\n            {\r\n              name: \"Status\",\r\n              options: Array.from(\r\n                new Set(documentList.map((doc) => doc.status.replace(/\\d+/g, \"\")))\r\n              ).map((status) => ({\r\n                value: status,\r\n                label: capitalCase(status.replace(/\\d+/g, \"\")),\r\n              })),\r\n            },\r\n            {\r\n              name: \"Tags\",\r\n              options: Array.from(\r\n                new Set(\r\n                  documentList.filter((doc) => doc.tag).map((doc) => doc.tag)\r\n                )\r\n              ).map((tag) => ({\r\n                value: tag,\r\n                label: capitalCase(tag),\r\n              })),\r\n            },\r\n          ]}\r\n        />\r\n      </Suspense>\r\n\r\n      <Suspense>\r\n        <Snackbar\r\n          severity=\"error\"\r\n          message={\r\n            getError?.message || subscribeError?.message || deleteError?.message\r\n          }\r\n        />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n"],"names":["DocumentTableToolbar","_ref","filterName","onRefresh","onFilter","onFilterName","_jsxs","Toolbar","sx","height","display","justifyContent","p","theme","spacing","children","_jsx","OutlinedInput","value","onChange","placeholder","startAdornment","InputAdornment","position","Iconify","icon","color","width","Stack","direction","Tooltip","title","IconButton","onClick","DocumentTableHead","order","orderBy","headLabel","onRequestSort","TableHead","TableRow","map","headCell","TableCell","align","sortDirection","id","minWidth","TableSortLabel","hideSortIcon","active","property","event","label","Box","border","margin","padding","overflow","whiteSpace","clip","statusColor","status","category","toLowerCase","includes","DocumentTableRow","officeId","document","onView","onEdit","onDelete","open","setOpen","useState","dialog","setDialog","_Fragment","hover","tabIndex","role","component","scope","Typography","variant","noWrap","concat","referenceNum","subject","length","slice","tag","Label","dateCreated","receivedFrom","maxWidth","referredTo","capitalCase","currentTarget","Popover","anchorEl","onClose","handleCloseMenu","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","MenuItem","mr","undefined","DeleteDialog","Snackbar","lazy","FilterDrawer","formatReferrals","offices","office","split","word","isNaN","parseInt","charAt","toUpperCase","toString","join","descendingComparator","a","b","DocumentTable","officerId","data","documents","error","getError","refetch","useQuery","GET_DOCUMENTS","variables","officeEvents","subscribeError","useSubscription","SUBSCRIBE_OFFICE_EVENTS","drawer","setDrawer","filters","setFilters","page","setPage","setOrder","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","documentList","setDocumentList","deleteDocument","deleteError","useMutation","DELETE_DOCUMENT","useEffect","getDocuments","doc","_doc$referredTo$find","directorAssigned","officer","firstName","lastName","ref","name","Date","toLocaleDateString","month","day","year","find","visibleRows","useMemo","array","comparator","stabilizedThis","el","index","sort","stableSort","filter","replace","getComparator","handleView","handleEdit","handleDelete","async","Card","TableToolbar","target","TableContainer","Table","handleRequestSort","TableBody","TableEmptyRow","colSpan","TablePagination","count","onPageChange","handleChangePage","rowsPerPageOptions","onRowsPerPageChange","Suspense","selected","selectedIndex","indexOf","newFilters","onClear","options","Array","from","Set","severity","message"],"sourceRoot":""}