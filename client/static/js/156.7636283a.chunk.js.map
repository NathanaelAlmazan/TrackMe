{"version":3,"file":"static/js/156.7636283a.chunk.js","mappings":"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","sources":["sections/documents/form-dialog/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\r\n\r\nimport axios from \"axios\";\r\nimport { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\r\nimport dayjs, { Dayjs } from \"dayjs\";\r\n\r\nimport {\r\n  Iconify,\r\n  MultiSelect,\r\n  DatePicker,\r\n  Snackbar,\r\n} from \"../../../components\";\r\nimport {\r\n  GET_OFFICERS,\r\n  GET_OFFICES,\r\n  GET_SIGNATORIES,\r\n} from \"../../../graphql/users\";\r\nimport {\r\n  GET_PURPOSES,\r\n  GET_STATUSES,\r\n  GET_TYPES,\r\n  GET_TEMP_REF_NUM,\r\n  CREATE_DOCUMENT,\r\n  GET_DOCUMENT_BY_ID,\r\n  UPDATE_DOCUMENT,\r\n} from \"../../../graphql/documents\";\r\nimport { Status, Tags } from \"../../../__generated__/graphql\";\r\n\r\ninterface DocumentForm {\r\n  subject: string;\r\n  description: string;\r\n  receivedFrom: string;\r\n  typeId: string;\r\n  purposeIds: string;\r\n  statusId: string;\r\n  signatureId: string;\r\n  tag: string;\r\n}\r\n\r\ntype MessageFiles = {\r\n  fileUrl: string;\r\n  fileName: string;\r\n  fileType: string;\r\n};\r\n\r\nconst formDefaults = {\r\n  subject: \"\",\r\n  description: \"\",\r\n  receivedFrom: \"\",\r\n  typeId: \"\",\r\n  purposeIds: \"\",\r\n  statusId: \"\",\r\n  signatureId: \"\",\r\n  tag: \"\",\r\n};\r\n\r\nexport const BIN_OFFICE = 20;\r\n\r\nconst filter = createFilterOptions<any>();\r\n\r\nfunction convertFileListToArray(fileList: FileList): File[] {\r\n  const filesArray: File[] = [];\r\n\r\n  // Convert FileList to array\r\n  for (let i = 0; i < fileList.length; i++) {\r\n    const file = fileList.item(i);\r\n    if (file) {\r\n      filesArray.push(file);\r\n    }\r\n  }\r\n\r\n  return filesArray;\r\n}\r\n\r\nexport default function FormDialog({\r\n  referenceNum,\r\n  officerId,\r\n  open,\r\n  onClose,\r\n}: {\r\n  referenceNum: string | null;\r\n  officerId: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n}) {\r\n  // fetch options\r\n  const { data: offices, error: officeError } = useQuery(GET_OFFICES, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n  const { data: purposes, error: purposeError } = useQuery(GET_PURPOSES, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n  const { data: statuses, error: statusError } = useQuery(GET_STATUSES, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n  const { data: types, error: typesError } = useQuery(GET_TYPES, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n  const { data: signatories, error: signatoryError } = useQuery(\r\n    GET_SIGNATORIES,\r\n    {\r\n      fetchPolicy: \"no-cache\",\r\n    }\r\n  );\r\n  const {\r\n    data: reference,\r\n    error: referenceError,\r\n    refetch,\r\n  } = useQuery(GET_TEMP_REF_NUM, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const [getDocumentById, { error: getError }] = useLazyQuery(\r\n    GET_DOCUMENT_BY_ID,\r\n    {\r\n      fetchPolicy: \"no-cache\",\r\n    }\r\n  );\r\n  const [getOfficers, { error: officersError }] = useLazyQuery(GET_OFFICERS, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const [createDocument, { error: createError }] = useMutation(CREATE_DOCUMENT);\r\n  const [updateDocument, { error: updateError }] = useMutation(UPDATE_DOCUMENT);\r\n\r\n  const [files, setFiles] = useState<File[]>([]);\r\n  const [referrals, setReferrals] = useState<number[]>([]);\r\n  const [deadline, setDeadline] = useState<Dayjs>(dayjs(new Date()));\r\n  const [disableDeadline, setDisableDeadline] = useState(false);\r\n  const [formData, setFormData] = useState<DocumentForm>(formDefaults);\r\n  const [officers, setOfficers] = useState<\r\n    { uuid: string; firstName: string; lastName: string; position?: string }[]\r\n  >([]);\r\n  const [assigned, setAssigned] = useState<\r\n    {\r\n      id: string;\r\n      label: string;\r\n      description: string | undefined;\r\n    }[]\r\n  >([]);\r\n\r\n  const {\r\n    subject,\r\n    description,\r\n    receivedFrom,\r\n    typeId,\r\n    purposeIds,\r\n    statusId,\r\n    signatureId,\r\n    tag,\r\n  } = formData;\r\n\r\n  useEffect(() => {\r\n    if (referenceNum) {\r\n      getDocumentById({ variables: { referenceNum, officerId } }).then(\r\n        ({ data }) => {\r\n          if (data) {\r\n            setFormData({\r\n              subject: data.getDocumentById.subject,\r\n              description: data.getDocumentById.description,\r\n              receivedFrom: data.getDocumentById.receivedFrom,\r\n              typeId: data.getDocumentById.type\r\n                ? data.getDocumentById.type.id.toString()\r\n                : \"\",\r\n              purposeIds: data.getDocumentById.purpose\r\n                ? data.getDocumentById.purpose.map((p) => p.id).join(\",\")\r\n                : \"\",\r\n              tag: data.getDocumentById.tag ? data.getDocumentById.tag : \"\",\r\n              signatureId: data.getDocumentById.signatory.uuid,\r\n              statusId: \"\",\r\n            });\r\n\r\n            if (data.getDocumentById.dateDue) {\r\n              setDeadline(dayjs(new Date(data.getDocumentById.dateDue)));\r\n            }\r\n            setReferrals(\r\n              data.getDocumentById.referredTo.map((ref) =>\r\n                parseInt(ref.office.id)\r\n              )\r\n            );\r\n            setAssigned(\r\n              data.getDocumentById.directorAssigned.map((officer) => ({\r\n                id: officer.uuid,\r\n                label: `${officer.firstName} ${officer.lastName}`,\r\n                description:\r\n                  officer.office?.name + \" / \" + officer.position?.label,\r\n              }))\r\n            );\r\n            setDisableDeadline(data.getDocumentById.dateDue ? false : true);\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      setFormData(formDefaults);\r\n      setDeadline(dayjs(new Date()));\r\n      setReferrals([]);\r\n    }\r\n  }, [referenceNum, officerId, getDocumentById]);\r\n\r\n  useEffect(() => {\r\n    if (referrals.length > 0) {\r\n      getOfficers({\r\n        variables: {\r\n          officeId: referrals,\r\n        },\r\n      })\r\n        .then(({ data }) => {\r\n          if (data) {\r\n            setOfficers(\r\n              data.getOfficers.map((officer) => ({\r\n                uuid: officer.uuid,\r\n                firstName: officer.firstName,\r\n                lastName: officer.lastName,\r\n                position:\r\n                  officer.office?.name + \" / \" + officer.position?.label,\r\n              }))\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [referrals, getOfficers]);\r\n\r\n  const handleReferralsChange = (selected: number[]) => {\r\n    setReferrals(selected);\r\n  };\r\n\r\n  const handleAssignedChange = (selected: any[]) => {\r\n    setAssigned(selected);\r\n  };\r\n\r\n  const handlePurposeChange = (selected: string[]) => {\r\n    setFormData({\r\n      ...formData,\r\n      purposeIds: selected.filter((p) => p !== \"\").join(\",\"),\r\n    });\r\n  };\r\n\r\n  const handleDeadlineChange = (newValue: Dayjs | null) => {\r\n    if (!newValue) return;\r\n    setDeadline(newValue);\r\n  };\r\n\r\n  const handleFormChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEnableChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDisableDeadline(event.target.checked);\r\n  };\r\n\r\n  const handleFilesChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const fileList = event.target.files;\r\n    if (fileList) {\r\n      setFiles((previous) => previous.concat(convertFileListToArray(fileList)));\r\n    }\r\n  };\r\n\r\n  const handleDeleteFile = (fileName: string) => {\r\n    setFiles((previous) => previous.filter((file) => file.name !== fileName));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    // upload files\r\n    let uploadedFiles: MessageFiles[] = [];\r\n    if (files.length > 0) {\r\n      try {\r\n        const form = new FormData();\r\n        files.forEach((file) => {\r\n          form.append(\"files\", file);\r\n        });\r\n\r\n        const result = await axios.post(\r\n          process.env.REACT_APP_UPLOAD_URL as string,\r\n          form\r\n        );\r\n        uploadedFiles = result.data.files;\r\n      } catch (err) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (referenceNum) {\r\n      await updateDocument({\r\n        variables: {\r\n          referenceNum: referenceNum,\r\n          subject,\r\n          purposeIds,\r\n          description,\r\n          receivedFrom,\r\n          typeId: parseInt(typeId),\r\n          signatureId: signatureId,\r\n          tag: tag.length === 0 ? null : (tag as Tags),\r\n          dateDue: disableDeadline ? null : deadline.toISOString(),\r\n          assignedTo: assigned.map((officer) => officer.id),\r\n          files:\r\n            uploadedFiles.length > 0\r\n              ? uploadedFiles.map((file) => file.fileUrl).join(\";\")\r\n              : null,\r\n        },\r\n      });\r\n    } else {\r\n      const referredTo = referrals;\r\n\r\n      // include BIN office if there are outsourced officers\r\n      if (\r\n        referredTo.length === 0 &&\r\n        assigned.filter((officer) => officer.id.includes(\"Add\")).length > 0\r\n      ) {\r\n        referredTo.push(BIN_OFFICE);\r\n      }\r\n\r\n      await createDocument({\r\n        variables: {\r\n          subject,\r\n          description,\r\n          purposeIds,\r\n          receivedFrom,\r\n          typeId: parseInt(typeId),\r\n          signatureId: signatureId,\r\n          tag: tag.length === 0 ? null : (tag as Tags),\r\n          referredTo: referredTo.map((office) => ({\r\n            officeId: office,\r\n            statusId: parseInt(statusId),\r\n          })),\r\n          dateDue: disableDeadline ? null : deadline.toISOString(),\r\n          assignedTo: assigned.map((officer) => officer.id),\r\n          files:\r\n            uploadedFiles.length > 0\r\n              ? uploadedFiles.map((file) => file.fileUrl).join(\";\")\r\n              : null,\r\n        },\r\n      });\r\n    }\r\n\r\n    // clear form data\r\n    setFormData(formDefaults);\r\n    setDeadline(dayjs(new Date()));\r\n    setReferrals([]);\r\n\r\n    await refetch(); // get new reference number\r\n    onClose(); // close dialog\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={onClose} maxWidth=\"lg\" fullWidth>\r\n        <form onSubmit={handleSubmit}>\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                {reference && (\r\n                  <Typography variant=\"h6\">\r\n                    {`#${\r\n                      referenceNum\r\n                        ? referenceNum\r\n                        : reference.getTempReferenceNum\r\n                    }`}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12} md={8}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      name=\"subject\"\r\n                      label=\"Subject\"\r\n                      variant=\"outlined\"\r\n                      value={subject}\r\n                      onChange={handleFormChange}\r\n                      multiline\r\n                      rows={referenceNum ? 5 : 4}\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Remarks\"\r\n                      name=\"description\"\r\n                      variant=\"outlined\"\r\n                      value={description}\r\n                      onChange={handleFormChange}\r\n                      multiline\r\n                      rows={referenceNum ? 4 : 3}\r\n                      fullWidth\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <Tooltip title=\"Insert File\">\r\n                              <IconButton component=\"label\">\r\n                                <Iconify icon=\"material-symbols:attach-file-add-rounded\" />\r\n\r\n                                <input\r\n                                  type=\"file\"\r\n                                  multiple\r\n                                  hidden\r\n                                  onChange={handleFilesChange}\r\n                                />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                    <Box\r\n                      sx={{\r\n                        pt: 1,\r\n                        maxWidth: \"100%\",\r\n                        overflow: \"auto\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                      }}\r\n                    >\r\n                      {files.map((file) => (\r\n                        <Chip\r\n                          key={file.name}\r\n                          label={file.name}\r\n                          variant=\"outlined\"\r\n                          onDelete={() => handleDeleteFile(file.name)}\r\n                          sx={{ mx: \"5px\" }}\r\n                        />\r\n                      ))}\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      name=\"receivedFrom\"\r\n                      label=\"Received From\"\r\n                      variant=\"outlined\"\r\n                      value={receivedFrom}\r\n                      onChange={handleFormChange}\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                  </Grid>\r\n\r\n                  {offices && !referenceNum && (\r\n                    <Grid item xs={12}>\r\n                      <MultiSelect\r\n                        name=\"referredTo\"\r\n                        label=\"Referred To\"\r\n                        selected={referrals}\r\n                        required={assigned.length === 0}\r\n                        options={offices.getOffices.map((office) => ({\r\n                          id: parseInt(office.id),\r\n                          label: office.name,\r\n                        }))}\r\n                        onChange={handleReferralsChange}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n\r\n                  {!referenceNum && (\r\n                    <Grid item xs={12}>\r\n                      <Autocomplete\r\n                        multiple\r\n                        options={officers.map((officer) => ({\r\n                          id: officer.uuid,\r\n                          label: `${officer.firstName} ${officer.lastName}`,\r\n                          description: officer.position,\r\n                        }))}\r\n                        value={assigned}\r\n                        onChange={(_, newValue) => {\r\n                          const outsourced = newValue.filter(\r\n                            (obj) =>\r\n                              obj.id.includes(\"Add\") &&\r\n                              !officers.find(\r\n                                (officer) => officer.uuid === obj.id\r\n                              )\r\n                          );\r\n                          if (outsourced.length > 0) {\r\n                            setOfficers([\r\n                              ...officers,\r\n                              ...outsourced.map((obj) => ({\r\n                                uuid: obj.id,\r\n                                firstName: obj.label.split(\" \", 2)[0],\r\n                                lastName: obj.label.split(\" \", 2)[1],\r\n                                position: \"\",\r\n                              })),\r\n                            ]);\r\n                          }\r\n\r\n                          handleAssignedChange(newValue);\r\n                        }}\r\n                        getOptionKey={(option) => option.id}\r\n                        getOptionLabel={(option) => option.label}\r\n                        isOptionEqualToValue={(option, value) => {\r\n                          return option.id === value.id;\r\n                        }}\r\n                        filterOptions={(options, params) => {\r\n                          const filtered = filter(options, params);\r\n\r\n                          if (params.inputValue !== \"\") {\r\n                            filtered.push({\r\n                              id: `Add ${params.inputValue}`,\r\n                              label: `\"${params.inputValue}\"`,\r\n                              description: \"\",\r\n                            });\r\n                          }\r\n\r\n                          return filtered;\r\n                        }}\r\n                        renderOption={(props, option) => (\r\n                          <Box component=\"li\" {...props}>\r\n                            <Box\r\n                              component=\"div\"\r\n                              sx={{ display: \"flex\", flexDirection: \"column\" }}\r\n                            >\r\n                              <Typography variant=\"body1\">\r\n                                {option.label}\r\n                              </Typography>\r\n                              <Typography\r\n                                variant=\"caption\"\r\n                                color=\"textSecondary\"\r\n                              >\r\n                                {option.description}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                        )}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            variant=\"outlined\"\r\n                            label=\"Assigned To\"\r\n                          />\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={4}>\r\n                <Stack spacing={2}>\r\n                  {types && (\r\n                    <TextField\r\n                      name=\"typeId\"\r\n                      select\r\n                      label=\"Document Type\"\r\n                      value={typeId}\r\n                      onChange={handleFormChange}\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                    >\r\n                      {types.getDocumentTypes.map((option) => (\r\n                        <MenuItem key={option.id} value={option.id}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n\r\n                  {purposes && (\r\n                    <MultiSelect\r\n                      name=\"purposeIds\"\r\n                      label=\"Document Purpose\"\r\n                      required={true}\r\n                      selected={purposeIds.split(\",\").filter((p) => p !== \"\")}\r\n                      options={purposes.getDocumentPurposes.map((purpose) => ({\r\n                        id: purpose.id,\r\n                        label: purpose.label,\r\n                      }))}\r\n                      onChange={handlePurposeChange}\r\n                    />\r\n                  )}\r\n\r\n                  {statuses && !referenceNum && (\r\n                    <TextField\r\n                      name=\"statusId\"\r\n                      select\r\n                      label=\"Document Status\"\r\n                      value={statusId}\r\n                      onChange={handleFormChange}\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                    >\r\n                      {statuses.getDocumentStatus\r\n                        .filter(\r\n                          (status) =>\r\n                            status.category === Status.Referred ||\r\n                            status.category === Status.NotActionable ||\r\n                            status.category === Status.ForReview || \r\n                            status.category === Status.ForRevision || \r\n                            status.category === Status.UpdateReport ||\r\n                            referenceNum\r\n                        )\r\n                        .map((option) => (\r\n                          <MenuItem key={option.id} value={option.id}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                  )}\r\n\r\n                  <TextField\r\n                    name=\"tag\"\r\n                    select\r\n                    label=\"Document Tag\"\r\n                    variant=\"outlined\"\r\n                    value={tag}\r\n                    onChange={handleFormChange}\r\n                    fullWidth\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    <MenuItem value=\"CONFIDENTIAL\">Confidential</MenuItem>\r\n                    <MenuItem value=\"TOP_PRIORITY\">Top Priority</MenuItem>\r\n                    <MenuItem value=\"FOLLOW_UP\">Follow Up</MenuItem>\r\n                  </TextField>\r\n\r\n                  <Stack>\r\n                    <DatePicker\r\n                      label=\"Deadline\"\r\n                      value={deadline}\r\n                      disable={disableDeadline}\r\n                      onChange={handleDeadlineChange}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={disableDeadline}\r\n                          onChange={handleEnableChange}\r\n                        />\r\n                      }\r\n                      label=\"No Deadline\"\r\n                    />\r\n                  </Stack>\r\n\r\n                  {signatories && (\r\n                    <TextField\r\n                      name=\"signatureId\"\r\n                      select\r\n                      label=\"Signatory\"\r\n                      value={signatureId}\r\n                      onChange={handleFormChange}\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                    >\r\n                      {signatories.getSignatories.map((option) => (\r\n                        <MenuItem key={option.uuid} value={option.uuid}>\r\n                          <Stack\r\n                            direction=\"row\"\r\n                            alignItems=\"center\"\r\n                            spacing={2}\r\n                          >\r\n                            <Avatar alt={option.lastName} src={option.avatar} />\r\n                            <Typography variant=\"subtitle2\" noWrap>\r\n                              {`${option.firstName} ${option.lastName}`}\r\n                            </Typography>\r\n                          </Stack>\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <Button onClick={onClose} color=\"inherit\">\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"inherit\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n            </Stack>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={\r\n          officeError?.message ||\r\n          purposeError?.message ||\r\n          createError?.message ||\r\n          updateError?.message ||\r\n          statusError?.message ||\r\n          typesError?.message ||\r\n          referenceError?.message ||\r\n          getError?.message ||\r\n          signatoryError?.message ||\r\n          officersError?.message\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":["formDefaults","subject","description","receivedFrom","typeId","purposeIds","statusId","signatureId","tag","BIN_OFFICE","filter","createFilterOptions","FormDialog","_ref","referenceNum","officerId","open","onClose","data","offices","error","officeError","useQuery","GET_OFFICES","fetchPolicy","purposes","purposeError","GET_PURPOSES","statuses","statusError","GET_STATUSES","types","typesError","GET_TYPES","signatories","signatoryError","GET_SIGNATORIES","reference","referenceError","refetch","GET_TEMP_REF_NUM","getDocumentById","getError","useLazyQuery","GET_DOCUMENT_BY_ID","getOfficers","officersError","GET_OFFICERS","createDocument","createError","useMutation","CREATE_DOCUMENT","updateDocument","updateError","UPDATE_DOCUMENT","files","setFiles","useState","referrals","setReferrals","deadline","setDeadline","dayjs","Date","disableDeadline","setDisableDeadline","formData","setFormData","officers","setOfficers","assigned","setAssigned","useEffect","variables","then","_ref2","type","id","toString","purpose","map","p","join","signatory","uuid","dateDue","referredTo","ref","parseInt","office","directorAssigned","officer","_officer$office","_officer$position","label","firstName","lastName","name","position","length","officeId","_ref3","_officer$office2","_officer$position2","catch","console","handleFormChange","e","target","value","_jsxs","_Fragment","children","_jsx","Dialog","maxWidth","fullWidth","onSubmit","async","preventDefault","uploadedFiles","form","FormData","forEach","file","append","axios","post","process","err","toISOString","assignedTo","fileUrl","includes","push","DialogContent","Grid","container","spacing","item","xs","Typography","variant","getTempReferenceNum","sm","md","TextField","onChange","multiline","rows","required","InputProps","endAdornment","InputAdornment","Tooltip","title","IconButton","component","Iconify","icon","multiple","hidden","event","fileList","previous","concat","filesArray","i","convertFileListToArray","Box","sx","pt","overflow","display","flexDirection","Chip","onDelete","handleDeleteFile","fileName","mx","MultiSelect","selected","options","getOffices","Autocomplete","_","newValue","outsourced","obj","find","split","getOptionKey","option","getOptionLabel","isOptionEqualToValue","filterOptions","params","filtered","inputValue","renderOption","props","color","renderInput","Stack","select","getDocumentTypes","MenuItem","getDocumentPurposes","getDocumentStatus","status","category","Status","Referred","NotActionable","ForReview","ForRevision","UpdateReport","DatePicker","disable","FormControlLabel","control","Checkbox","checked","getSignatories","direction","alignItems","Avatar","alt","src","avatar","noWrap","DialogActions","Button","onClick","Snackbar","severity","message"],"sourceRoot":""}