{"version":3,"file":"static/js/64.926407a8.chunk.js","mappings":"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","sources":["sections/documents/document-dialog/CommentField.tsx","sections/documents/document-dialog/CommentCard.tsx","sections/documents/document-dialog/DocumentDetails.tsx","sections/documents/document-dialog/StatusButton.tsx","sections/documents/document-dialog/index.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Box from \"@mui/material/Box\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport JoditEditor, { Jodit } from \"jodit-react\";\r\n\r\nimport { Snackbar, Iconify } from \"../../../components\";\r\nimport { Officers } from \"../../../__generated__/graphql\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { CREATE_COMMENT } from \"../../../graphql/documents\";\r\n\r\nexport type Uploads = {\r\n  fileUrl: string;\r\n  filePath: string;\r\n  fileName: string;\r\n  fileType: string;\r\n};\r\n\r\ntype MediaFiles = {\r\n  files: Uploads[];\r\n};\r\n\r\ninterface EditorProps {\r\n  officerId?: string;\r\n  documentId: string;\r\n  message?: string;\r\n  recipients?: Officers[];\r\n  onComment: () => void;\r\n}\r\n\r\nconst config = {\r\n  readonly: false, // all options from https://xdsoft.net/jodit/doc/\r\n  toolbar: true,\r\n  minHeight: 250,\r\n  maxHeight: 250,\r\n  buttons: [\r\n    \"source\",\r\n    \"|\",\r\n    \"bold\",\r\n    \"strikethrough\",\r\n    \"underline\",\r\n    \"italic\",\r\n    \"|\",\r\n    \"ul\",\r\n    \"ol\",\r\n    \"|\",\r\n    \"outdent\",\r\n    \"indent\",\r\n    \"|\",\r\n    \"font\",\r\n    \"fontsize\",\r\n    \"paragraph\",\r\n    \"|\",\r\n    \"image\",\r\n    \"table\",\r\n    \"link\",\r\n    \"|\",\r\n    \"align\",\r\n    \"undo\",\r\n    \"redo\",\r\n    \"selectall\",\r\n    \"cut\",\r\n    \"copy\",\r\n    \"|\",\r\n    \"hr\",\r\n    \"|\",\r\n    \"print\",\r\n    \"symbol\",\r\n    \"about\",\r\n  ],\r\n  uploader: {\r\n    url: process.env.REACT_APP_UPLOAD_URL as string,\r\n    imagesExtensions: [\"jpg\", \"png\", \"jpeg\", \"gif\"],\r\n    withCredentials: false,\r\n    format: \"json\",\r\n    method: \"POST\",\r\n    prepareData: function (formData: any) {\r\n      const files = Array.from(formData.values()).filter(\r\n        (obj) => obj instanceof File\r\n      );\r\n\r\n      // reset form data\r\n      Array.from(formData.keys()).forEach((key) => {\r\n        formData.delete(key);\r\n      });\r\n\r\n      // add files\r\n      files.forEach((file) => {\r\n        formData.append(\"files\", file);\r\n      });\r\n\r\n      return formData;\r\n    },\r\n    isSuccess: function (resp: MediaFiles) {\r\n      return resp.files.length > 0;\r\n    },\r\n    process: function (resp: MediaFiles) {\r\n      return {\r\n        files: resp.files.map((file) => file.filePath),\r\n        path: \"/\",\r\n        baseurl: process.env.REACT_APP_MEDIA_URL as string,\r\n        error: 0,\r\n        msg: \"\",\r\n      };\r\n    },\r\n    error: function (error: Error) {\r\n      console.log(\"Failed to upload files.\");\r\n    },\r\n  },\r\n  style: {\r\n    \"& .jodit .jodit-status-bar\": {\r\n      background: \"#29572E\",\r\n      color: \"rgba(255,255,255,0.5)\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function CommentField(props: EditorProps) {\r\n  const editor = useRef<Jodit>(null);\r\n  const [content, setContent] = useState<string>(\"\");\r\n  const [formError, setFormError] = useState<string>();\r\n  const [recipientId, setRecipientId] = useState<string>(\"\");\r\n\r\n  const [createComment, { error }] = useMutation(CREATE_COMMENT);\r\n\r\n  useEffect(() => {\r\n    if (props.message) setContent(props.message);\r\n  }, [props.message]);\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!props.officerId) {\r\n      setFormError(\"Not logged in.\");\r\n      return;\r\n    }\r\n\r\n    // create comment\r\n    await createComment({\r\n      variables: {\r\n        documentId: props.documentId,\r\n        message: content,\r\n        recipientId: recipientId,\r\n        senderId: props.officerId,\r\n      },\r\n    });\r\n\r\n    props.onComment(); // reload\r\n    setRecipientId(\"\");\r\n    setContent(\"\"); // reset message\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"form\" onSubmit={handleSubmit}>\r\n        <Stack spacing={2}>\r\n          {props.recipients && (\r\n            <TextField\r\n              name=\"recipientId\"\r\n              select\r\n              label=\"Recipient\"\r\n              value={recipientId}\r\n              onChange={(event) => setRecipientId(event.target.value)}\r\n              required\r\n              fullWidth\r\n            >\r\n              {props.recipients.map((option) => (\r\n                <MenuItem key={option.uuid} value={option.uuid}>\r\n                  {option.firstName + \" \" + option.lastName}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          )}\r\n\r\n          <JoditEditor\r\n            ref={editor}\r\n            value={content}\r\n            config={config}\r\n            onChange={(value) => setContent(value)}\r\n          />\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              endIcon={<Iconify icon=\"ic:baseline-send\" />}\r\n            >\r\n              Send\r\n            </Button>\r\n          </Box>\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Snackbar severity=\"error\" message={formError || error?.message} />\r\n    </>\r\n  );\r\n}\r\n","import { useRef } from \"react\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport JoditEditor, { Jodit } from \"jodit-react\";\r\n\r\nimport { useAppSelector } from \"../../../hooks\";\r\n\r\nconst config = {\r\n  readonly: true, // all options from https://xdsoft.net/jodit/doc/\r\n  toolbar: false,\r\n  minHeight: 250,\r\n  maxHeight: 250,\r\n  style: {\r\n    \"& .jodit .jodit-status-bar\": {\r\n      background: \"#29572E\",\r\n      color: \"rgba(255,255,255,0.5)\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function CommentCard({\r\n  senderId,\r\n  senderName,\r\n  recipientId,\r\n  recipientName,\r\n  message,\r\n}: {\r\n  senderId: string;\r\n  senderName: string;\r\n  recipientId: string;\r\n  recipientName: string;\r\n  message: string;\r\n}) {\r\n  const { uuid } = useAppSelector((state) => state.auth);\r\n\r\n  const editor = useRef<Jodit>(null);\r\n\r\n  return (\r\n    <Box sx={uuid === senderId ? { pl: \"5%\" } : { pr: \"5%\" }}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1-content\"\r\n          id=\"panel1-header\"\r\n        >\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Avatar>\r\n              {senderName\r\n                .split(\" \")\r\n                .map((name) => name.charAt(0))\r\n                .join(\"\")}\r\n            </Avatar>\r\n           <Box>\r\n           <Typography variant=\"subtitle1\" component=\"div\">\r\n              {senderName}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"div\">\r\n              {`To ${recipientName}`}\r\n            </Typography>\r\n           </Box>\r\n          </Stack>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <JoditEditor ref={editor} value={message} config={config} />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { MultiSelect, Snackbar } from \"../../../components\";\r\n\r\nimport { capitalCase } from \"change-case\";\r\nimport { Role } from \"../../../__generated__/graphql\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { GET_OFFICERS } from \"../../../graphql/users\";\r\nimport { ASSIGN_OFFICERS } from \"../../../graphql/documents\";\r\n\r\nexport default function DocumentDetails({\r\n  role,\r\n  officeId,\r\n  documentId,\r\n  receivedFrom,\r\n  dateCreated,\r\n  dateDue,\r\n  referredTo,\r\n  type,\r\n  purpose,\r\n  tag,\r\n  assigned,\r\n}: {\r\n  role?: Role;\r\n  officeId?: number;\r\n  documentId?: string;\r\n  receivedFrom?: string;\r\n  dateCreated?: string;\r\n  dateDue?: string;\r\n  referredTo?: string;\r\n  type?: string;\r\n  purpose?: string;\r\n  tag?: string | null;\r\n  assigned?: string[];\r\n}) {\r\n  const [referrals, setReferrals] = useState<string[]>([]);\r\n  const { data: officers, error: getError } = useQuery(GET_OFFICERS, {\r\n    variables: {\r\n      officeId: officeId,\r\n    },\r\n  });\r\n  const [assignOfficers, { error: assignError }] = useMutation(ASSIGN_OFFICERS);\r\n\r\n  const handleReferralsChange = (selected: string[]) => {\r\n    setReferrals(selected);\r\n\r\n    if (documentId) {\r\n      assignOfficers({\r\n        variables: {\r\n          documentId,\r\n          officerIds: selected,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (role === Role.Chief && assigned && officeId) {\r\n      setReferrals(assigned);\r\n    }\r\n  }, [role, assigned, officeId]);\r\n\r\n  return (\r\n    <>\r\n      <Card variant=\"outlined\">\r\n        <CardHeader title=\"Details\" />\r\n        <Box\r\n          sx={{\r\n            maxHeight: { sm: \"100%\", md: \"80vh\" },\r\n            overflowY: { sm: \"inherit\", md: \"auto\" },\r\n          }}\r\n        >\r\n          <TableContainer>\r\n            <Table size=\"small\" aria-label=\"dense table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Received From\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">{receivedFrom}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Referred To\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">{referredTo}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Date Received\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">\r\n                      {dateCreated &&\r\n                        new Date(dateCreated).toLocaleDateString(undefined, {\r\n                          year: \"numeric\",\r\n                          month: \"short\",\r\n                          day: \"numeric\",\r\n                          weekday: \"short\",\r\n                        })}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Date Due\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">\r\n                      {dateDue &&\r\n                        new Date(dateDue).toLocaleDateString(undefined, {\r\n                          year: \"numeric\",\r\n                          month: \"short\",\r\n                          day: \"numeric\",\r\n                          weekday: \"short\",\r\n                        })}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Document Type\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">{type}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Purpose\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">{purpose}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                      Tag\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography variant=\"body2\">\r\n                      {tag ? capitalCase(tag) : \"None\"}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                {role === Role.Chief && (\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Typography variant=\"subtitle2\" noWrap>\r\n                        Assigned\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {officers && (\r\n                        <MultiSelect\r\n                          name=\"assignedTo\"\r\n                          label=\"Assigned To\"\r\n                          selected={referrals}\r\n                          options={officers.getOfficers\r\n                            .filter(\r\n                              (officer) => officer.position?.role !== Role.Chief\r\n                            )\r\n                            .map((officer) => ({\r\n                              id: officer.uuid,\r\n                              label: officer.firstName + \" \" + officer.lastName,\r\n                            }))}\r\n                          onChange={handleReferralsChange}\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      </Card>\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={getError?.message || assignError?.message}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { Iconify, Snackbar } from \"../../../components\";\r\n\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  GET_STATUSES,\r\n  UPDATE_DOCUMENT_STATUS,\r\n} from \"../../../graphql/documents\";\r\nimport { Role, Status } from \"../../../__generated__/graphql\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function StatusButton({\r\n  officeId,\r\n  status,\r\n  referenceNum,\r\n  role,\r\n  onUpdate,\r\n  admin,\r\n}: {\r\n  officeId?: number;\r\n  status?: Status;\r\n  referenceNum: string;\r\n  role: Role;\r\n  onUpdate: () => void;\r\n  admin?: boolean;\r\n}) {\r\n  const { data: statuses, error: getError } = useQuery(GET_STATUSES, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n  const [updateStatus, { error: updateError }] = useMutation(\r\n    UPDATE_DOCUMENT_STATUS\r\n  );\r\n\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [currentStatus, setCurrentStatus] = useState<Status>(Status.Referred);\r\n\r\n  useEffect(() => {\r\n    if (status) setCurrentStatus(status);\r\n  }, [status]);\r\n\r\n  const handleStatusChange = async (\r\n    event: React.MouseEvent<unknown>,\r\n    category: Status\r\n  ) => {\r\n    if (!officeId) return;\r\n\r\n    const statusId = statuses?.getDocumentStatus.find(\r\n      (status) => status.category === category\r\n    )?.id;\r\n\r\n    if (!statusId) {\r\n      setError(\"Status not found\");\r\n      return;\r\n    }\r\n\r\n    const result = await updateStatus({\r\n      variables: {\r\n        officeId,\r\n        referenceNum,\r\n        statusId: parseInt(statusId),\r\n      },\r\n    });\r\n\r\n    if (result.data) setCurrentStatus(category);\r\n\r\n    onUpdate();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {(role === Role.Superuser || role === Role.Director) && (\r\n        <Button\r\n          variant={admin ? \"outlined\" : \"contained\"}\r\n          onClick={(event) =>\r\n            handleStatusChange(\r\n              event,\r\n              currentStatus === Status.Finished\r\n                ? Status.Referred\r\n                : Status.Finished\r\n            )\r\n          }\r\n          disabled={currentStatus === Status.NotActionable}\r\n          endIcon={admin ? undefined : <Iconify icon=\"formkit:submit\" />}\r\n        >\r\n          {currentStatus === Status.Finished ? \"Reopen\" : \"Close\"}\r\n        </Button>\r\n      )}\r\n\r\n      {role === Role.Chief && (\r\n        <Button\r\n          variant={admin ? \"outlined\" : \"contained\"}\r\n          onClick={(event) =>\r\n            handleStatusChange(\r\n              event,\r\n              currentStatus === Status.Submitted\r\n                ? Status.Referred\r\n                : Status.Submitted\r\n            )\r\n          }\r\n          disabled={currentStatus === Status.Finished || currentStatus === Status.NotActionable}\r\n          endIcon={admin ? undefined : <Iconify icon=\"formkit:submit\" />}\r\n        >\r\n          {currentStatus === Status.Submitted ? \"Withdraw\" : \"Submit\"}\r\n        </Button>\r\n      )}\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={error || getError?.message || updateError?.message}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n\r\nimport { Iconify, ReferenceSlip, Snackbar, Label } from \"../../../components\";\r\nimport CommentField from \"./CommentField\";\r\nimport CommentCard from \"./CommentCard\";\r\nimport DocumentDetails from \"./DocumentDetails\";\r\nimport StatusButton from \"./StatusButton\";\r\n\r\nimport { useQuery, useSubscription } from \"@apollo/client\";\r\nimport {\r\n  GET_DOCUMENT_BY_ID,\r\n  SUBSCRIBE_DOCUMENT_EVENTS,\r\n} from \"../../../graphql/documents\";\r\nimport { Officers, Role, Status } from \"../../../__generated__/graphql\";\r\nimport { capitalCase } from \"change-case\";\r\n\r\nfunction statusColor(status: Status) {\r\n  switch (status) {\r\n    case Status.Finished:\r\n      return \"success\";\r\n    case Status.NotActionable:\r\n      return \"info\";\r\n    default:\r\n      return \"warning\";\r\n  }\r\n}\r\n\r\nexport default function DocumentDialog({\r\n  officerId,\r\n  officeId,\r\n  role,\r\n  referenceNum,\r\n  open,\r\n  onClose,\r\n}: {\r\n  officerId: string;\r\n  officeId?: number;\r\n  role: Role;\r\n  referenceNum: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n}) {\r\n  const theme = useTheme();\r\n  const [statusList, setStatusList] = useState<HTMLButtonElement | null>(null);\r\n\r\n  const {\r\n    data: document,\r\n    error: getError,\r\n    refetch,\r\n  } = useQuery(GET_DOCUMENT_BY_ID, {\r\n    fetchPolicy: \"no-cache\",\r\n    variables: {\r\n      officerId,\r\n      referenceNum,\r\n    },\r\n  });\r\n  const { data: documentEvents, error: subscribeError } = useSubscription(\r\n    SUBSCRIBE_DOCUMENT_EVENTS,\r\n    {\r\n      fetchPolicy: \"no-cache\",\r\n      variables: {\r\n        referenceNum,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (documentEvents) refetch();\r\n  }, [documentEvents, refetch]);\r\n\r\n  const handleOpenStatus = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setStatusList(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseStatus = () => {\r\n    setStatusList(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={onClose} maxWidth=\"lg\" fullWidth>\r\n        <DialogContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={12} md={8}>\r\n              <Stack\r\n                spacing={3}\r\n                sx={{\r\n                  maxHeight: { sm: \"100%\", md: \"80vh\" },\r\n                  overflow: { sm: \"inherit\", md: \"auto\" },\r\n                  p: 2,\r\n                }}\r\n              >\r\n                <Box>\r\n                  <Typography variant=\"h6\">\r\n                    {`#${document?.getDocumentById.referenceNum}`}\r\n                  </Typography>\r\n                  <Typography variant=\"h3\">\r\n                    {document?.getDocumentById.subject}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Box>\r\n                  <Typography variant=\"body1\">\r\n                    {document?.getDocumentById.description}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Divider>Messages</Divider>\r\n\r\n                <Stack\r\n                  spacing={2}\r\n                  sx={{\r\n                    backgroundColor: theme.palette.grey[200],\r\n                    p: 2,\r\n                    borderRadius: 3,\r\n                  }}\r\n                >\r\n                  {document &&\r\n                    document.getDocumentById.comments.map((comment) => (\r\n                      <CommentCard\r\n                        key={comment.id}\r\n                        senderName={[\r\n                          comment.sender.firstName,\r\n                          comment.sender.lastName,\r\n                        ].join(\" \")}\r\n                        senderId={comment.sender.uuid}\r\n                        recipientName={[\r\n                          comment.recipient.firstName,\r\n                          comment.recipient.lastName,\r\n                        ].join(\" \")}\r\n                        recipientId={comment.recipient.uuid}\r\n                        message={comment.message}\r\n                      />\r\n                    ))}\r\n\r\n                  {document &&\r\n                    document.getDocumentById.comments.length === 0 && (\r\n                      <Typography variant=\"subtitle1\">\r\n                        No Comment Yet.\r\n                      </Typography>\r\n                    )}\r\n                </Stack>\r\n\r\n                <Divider>Compose</Divider>\r\n\r\n                {referenceNum && (\r\n                  <CommentField\r\n                    officerId={officerId}\r\n                    documentId={referenceNum}\r\n                    onComment={() => refetch()}\r\n                    recipients={\r\n                      document?.getDocumentById.recipients as Officers[]\r\n                    }\r\n                  />\r\n                )}\r\n              </Stack>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} md={4} sx={{ position: \"relative\" }}>\r\n              <Stack spacing={3}>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                    {document &&\r\n                      ![Role.Superuser, Role.Director].includes(role) && (\r\n                        <StatusButton\r\n                          role={role}\r\n                          officeId={officeId}\r\n                          status={\r\n                            document.getDocumentById.referredTo.find(\r\n                              (ref) => parseInt(ref.office.id) === officeId\r\n                            )?.status.category\r\n                          }\r\n                          referenceNum={document.getDocumentById.referenceNum}\r\n                          onUpdate={() => refetch()}\r\n                        />\r\n                      )}\r\n\r\n                    {document &&\r\n                      [Role.Superuser, Role.Director].includes(role) && (\r\n                        <>\r\n                          <Button\r\n                            onClick={handleOpenStatus}\r\n                            variant=\"contained\"\r\n                            endIcon={\r\n                              <Iconify icon=\"solar:alt-arrow-down-line-duotone\" />\r\n                            }\r\n                          >\r\n                            {document.getDocumentById.status}\r\n                          </Button>\r\n\r\n                          <Popover\r\n                            open={!!statusList}\r\n                            anchorEl={statusList}\r\n                            onClose={handleCloseStatus}\r\n                            anchorOrigin={{\r\n                              vertical: \"bottom\",\r\n                              horizontal: \"right\",\r\n                            }}\r\n                            transformOrigin={{\r\n                              vertical: \"top\",\r\n                              horizontal: \"right\",\r\n                            }}\r\n                            PaperProps={{\r\n                              sx: {\r\n                                p: 0,\r\n                                mt: 1,\r\n                                ml: 0.75,\r\n                                width: 500,\r\n                              },\r\n                            }}\r\n                          >\r\n                            <List>\r\n                              {document.getDocumentById.referredTo.map(\r\n                                (ref) => (\r\n                                  <ListItem key={ref.office.id}>\r\n                                    <ListItemText\r\n                                      primary={ref.office.name}\r\n                                      secondary={\r\n                                        <Label\r\n                                          color={statusColor(\r\n                                            ref.status.category\r\n                                          )}\r\n                                        >\r\n                                          {capitalCase(ref.status.category)}\r\n                                        </Label>\r\n                                      }\r\n                                    />\r\n                                    <ListItemIcon>\r\n                                      <StatusButton\r\n                                        admin\r\n                                        role={role}\r\n                                        status={ref.status.category}\r\n                                        officeId={parseInt(ref.office.id)}\r\n                                        referenceNum={\r\n                                          document.getDocumentById.referenceNum\r\n                                        }\r\n                                        onUpdate={() => refetch()}\r\n                                      />\r\n                                    </ListItemIcon>\r\n                                  </ListItem>\r\n                                )\r\n                              )}\r\n                            </List>\r\n                          </Popover>\r\n                        </>\r\n                      )}\r\n\r\n                    <PDFDownloadLink\r\n                      document={<ReferenceSlip document={document} />}\r\n                      fileName={`${referenceNum}.pdf`}\r\n                    >\r\n                      {({ url }) =>\r\n                        url && (\r\n                          <Button\r\n                            onClick={() => window.open(url, \"_blank\")}\r\n                            variant=\"contained\"\r\n                            endIcon={\r\n                              <Iconify icon=\"ant-design:export-outlined\" />\r\n                            }\r\n                          >\r\n                            Export\r\n                          </Button>\r\n                        )\r\n                      }\r\n                    </PDFDownloadLink>\r\n                  </Stack>\r\n\r\n                  <IconButton onClick={onClose} sx={{ width: 50, height: 50 }}>\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                </Stack>\r\n\r\n                <DocumentDetails\r\n                  role={role}\r\n                  officeId={officeId}\r\n                  documentId={document?.getDocumentById.referenceNum}\r\n                  receivedFrom={document?.getDocumentById.receivedFrom}\r\n                  referredTo={document?.getDocumentById.referredTo\r\n                    .map((ref) => ref.office.name)\r\n                    .join(\", \")}\r\n                  type={document?.getDocumentById.type?.label}\r\n                  purpose={document?.getDocumentById.purpose?.label}\r\n                  dateCreated={document?.getDocumentById.dateCreated}\r\n                  dateDue={document?.getDocumentById.dateDue}\r\n                  tag={document?.getDocumentById.tag}\r\n                  assigned={document?.getDocumentById.assigned\r\n                    .filter((officer) => officer.position?.role !== Role.Chief)\r\n                    .map((officer) => officer.uuid)}\r\n                />\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        severity=\"error\"\r\n        message={getError?.message || subscribeError?.message}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":["config","readonly","toolbar","minHeight","maxHeight","buttons","uploader","url","process","imagesExtensions","withCredentials","format","method","prepareData","formData","files","Array","from","values","filter","obj","File","keys","forEach","key","delete","file","append","isSuccess","resp","length","map","filePath","path","baseurl","error","msg","console","log","style","background","color","CommentField","props","editor","useRef","content","setContent","useState","formError","setFormError","recipientId","setRecipientId","createComment","useMutation","CREATE_COMMENT","useEffect","message","_jsxs","_Fragment","children","_jsx","Box","component","onSubmit","async","event","preventDefault","officerId","variables","documentId","senderId","onComment","Stack","spacing","recipients","TextField","name","select","label","value","onChange","target","required","fullWidth","option","MenuItem","uuid","firstName","lastName","JoditEditor","ref","sx","display","flexDirection","justifyContent","Button","type","variant","endIcon","Iconify","icon","Snackbar","severity","CommentCard","_ref","senderName","recipientName","useAppSelector","state","auth","pl","pr","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","id","direction","Avatar","split","charAt","join","Typography","concat","AccordionDetails","DocumentDetails","role","officeId","receivedFrom","dateCreated","dateDue","referredTo","purpose","tag","assigned","referrals","setReferrals","data","officers","getError","useQuery","GET_OFFICERS","assignOfficers","assignError","ASSIGN_OFFICERS","Role","Chief","Card","CardHeader","title","sm","md","overflowY","TableContainer","Table","size","TableBody","TableRow","TableCell","scope","noWrap","Date","toLocaleDateString","undefined","year","month","day","weekday","capitalCase","MultiSelect","selected","options","getOfficers","officer","_officer$position","position","officerIds","StatusButton","status","referenceNum","onUpdate","admin","statuses","GET_STATUSES","fetchPolicy","updateStatus","updateError","UPDATE_DOCUMENT_STATUS","setError","currentStatus","setCurrentStatus","Status","Referred","handleStatusChange","category","_statuses$getDocument","statusId","getDocumentStatus","find","parseInt","Superuser","Director","onClick","Finished","disabled","NotActionable","Submitted","statusColor","DocumentDialog","_document$getDocument","_document$getDocument2","_document$getDocument3","open","onClose","theme","useTheme","statusList","setStatusList","document","refetch","GET_DOCUMENT_BY_ID","documentEvents","subscribeError","useSubscription","SUBSCRIBE_DOCUMENT_EVENTS","Dialog","maxWidth","DialogContent","Grid","container","item","xs","overflow","p","getDocumentById","subject","description","Divider","backgroundColor","palette","grey","borderRadius","comments","comment","sender","recipient","alignItems","includes","office","currentTarget","Popover","anchorEl","handleCloseStatus","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","mt","ml","width","List","ListItem","ListItemText","primary","secondary","Label","ListItemIcon","PDFDownloadLink","ReferenceSlip","fileName","_ref2","window","IconButton","height","CloseIcon"],"sourceRoot":""}